# This file controls what file are to be put on classpath or command line.
#
# Format is as follows:
# Each line contains entry for one JAR file.
# Format of line:
#
#  SUBJECT [ [!] CONDITION [AND|OR] ]*
# 
# where SUBJECT: 
#   ends with ".class" is the Main class to run.
#   ends with ".xml" is a configuration file for the command line
#   ends with "/" is a directory from which to add all jar and zip files. 
#   ends with "/*" is a directory from which to add all unconsidered jar and zip files.
#   ends with "/**" is a directory from which to recursively add all unconsidered jar and zip files.
#   Containing = are used to assign system properties.
#   all other subjects are treated as files to be added to the classpath.
#
# Subjects may include system properties with $(propertyname) syntax. The
# property version is defined as the version of the start.jar
#
# Files starting with "/" are considered absolute, all others are relative to
# the home directory.
#
# CONDITION is one of:
#   always
#   never
#   available classname        # true if class on classpath
#   property name              # true if set
#   exists file                # true if file/dir exists
#   java OPERATOR version      # java version compared to literal
#   nargs OPERATOR number      # number of command line args compared to literal
#   OPERATOR := one of "<",">","<=",">=","==","!="
#
# CONTITIONS can be combined with AND OR or !, with AND being the assume
# operator for a list of CONDITIONS.
# Classpath operations are evaluated on the fly, so once a class or jar is
# added to the classpath, subsequent available conditions will see that class.
#

# add a property defined classpath
$(jetty.class.path).path                         always

# add a property defined library directory
$(jetty.lib)/**                                  exists $(jetty.lib)

# find a maven repository
repository=./repository                          ! exists $(repository)/org/mortbay/jetty/jetty-start/$(version)/jetty-start-$(version).jar
repository=$(user.home)/.m2/repository           ! exists $(repository)/org/mortbay/jetty/jetty-start/$(version)/jetty-start-$(version).jar
repository=./repository                          ! exists $(repository)/org/mortbay/jetty/jetty-start/$(version)/jetty-start-$(version).jar

# Try different settings of jetty.home until the jetty.jar is found.
jetty.home=.                                     ! exists $(jetty.home)/start.jar 
jetty.home=..                                    ! exists $(jetty.home)/start.jar 
jetty.home=jetty-assembly/src/main/resources     ! exists $(jetty.home)/start.jar 
jetty.home=../jetty-assembly/src/main/resources  ! exists $(jetty.home)/start.jar 
jetty.home=.                                     ! exists $(jetty.home)/start.jar

# The main class to run
org.mortbay.jetty.xml.XmlConfiguration.class
$(start.class).class

# The default configuration files
$(jetty.home)/etc/jetty.xml                      nargs == 0
./jetty-server/src/main/config/etc/jetty.xml     nargs == 0 AND ! exists $(jetty.home)/etc/jetty.xml

# Add a ext lib directory if it is there
$(jetty.home)/lib/ext/**

# Add a resources directory if it is there
$(jetty.home)/resources/
           
# Add servlet api        
[servlet-api,default,server]
$(jetty.home)/lib/servlet-api-3.0-SNAPSHOT.jar                                          ! available javax.servlet.ServletContext
$(repository)/org/mortbay/jetty/servlet-api/3.0-SNAPSHOT/servlet-api-3.0-SNAPSHOT.jar   ! available javax.servlet.ServletContext
                        
# Add jetty modules
[jetty-util,*]
$(jetty.home)/lib/jetty-util-$(version).jar                                             ! available org.mortbay.jetty.util.StringUtil
$(repository)/org/mortbay/jetty/jetty-util/$(version)/jetty-util-$(version).jar         ! available org.mortbay.jetty.util.StringUtil

[io,*]
$(jetty.home)/lib/jetty-io-$(version).jar                                               ! available org.mortbay.jetty.io.Buffer
$(repository)/org/mortbay/jetty/jetty-io/$(version)/jetty-io-$(version).jar             ! available org.mortbay.jetty.io.Buffer

[xml,*]
$(jetty.home)/lib/jetty-xml-$(version).jar                                              ! available org.mortbay.jetty.xml.XmlParser
$(repository)/org/mortbay/jetty/jetty-xml/$(version)/jetty-xml-$(version).jar           ! available org.mortbay.jetty.xml.XmlParser
         
[http,default,Server,Client]
$(jetty.home)/lib/jetty-http-$(version).jar                                             ! available org.mortbay.jetty.http.HttpParser
$(repository)/org/mortbay/jetty/jetty-http/$(version)/jetty-http-$(version).jar         ! available org.mortbay.jetty.http.HttpParser
                                      
[server,default,Server]
$(jetty.home)/lib/jetty-server-$(version).jar                                           ! available org.mortbay.jetty.server.Server
$(repository)/org/mortbay/jetty/jetty-server/$(version)/jetty-server-$(version).jar     ! available org.mortbay.jetty.server.Server
                                             
[security,default,Server]
$(jetty.home)/lib/jetty-security-$(version).jar                                         ! available org.mortbay.jetty.security.LoginService
$(repository)/org/mortbay/jetty/jetty-security/$(version)/jetty-security-$(version).jar ! available org.mortbay.jetty.security.LoginService
                                                       
[servlet,default,Server]
$(jetty.home)/lib/jetty-servlet-$(version).jar                                          ! available org.mortbay.jetty.servlet.ServletHandler
$(repository)/org/mortbay/jetty/jetty-servlet/$(version)/jetty-servlet-$(version).jar   ! available org.mortbay.jetty.servlet.ServletHandler
                            
[webapp,default,Server]
$(jetty.home)/lib/jetty-webapp-$(version).jar                                           ! available org.mortbay.jetty.webapp.WebAppContext
$(repository)/org/mortbay/jetty/jetty-webapp/$(version)/jetty-webapp-$(version).jar     ! available org.mortbay.jetty.webapp.WebAppContext
                                  
[deploy,default,Server]
$(jetty.home)/lib/jetty-deploy-$(version).jar                                           ! available org.mortbay.jetty.deploy.ContextDeployer
$(repository)/org/mortbay/jetty/jetty-deploy/$(version)/jetty-deploy-$(version).jar     ! available org.mortbay.jetty.deploy.ContextDeployer
                                              
[client,Client]
$(jetty.home)/lib/jetty-client-$(version).jar                                           ! available org.mortbay.jetty.client.HttpClient
$(repository)/org/mortbay/jetty/jetty-client/$(version)/jetty-client-$(version).jar     ! available org.mortbay.jetty.client.HttpClient   
               
[servlets,default,Server]
$(jetty.home)/lib/jetty-servlets-$(version).jar                                         ! available org.mortbay.jetty.servlets.WelcomeFilter
$(repository)/org/mortbay/jetty/jetty-servlets/$(version)/jetty-servlets-$(version).jar ! available org.mortbay.jetty.servlets.WelcomeFilter

[rewrite]
$(jetty.home)/lib/jetty-rewrite-$(version).jar                                          ! available org.mortbay.jetty.rewrite.handler.RewriteHandler
$(repository)/org/mortbay/jetty/jetty-rewrite/$(version)/jetty-rewrite-$(version).jar   ! available org.mortbay.jetty.rewrite.handler.RewriteHandler

[jmx]
$(jetty.home)/lib/jetty-jmx-$(version).jar                                              ! available org.mortbay.jetty.jmx.MBeanContainer
$(repository)/org/mortbay/jetty/jetty-jmx/$(version)/jetty-jmx-$(version).jar           ! available org.mortbay.jetty.jmx.MBeanContainer
                 
[slf4j]
$(jetty.home)/lib/slf4j/**                                                              exists $(jetty.home)/lib/slf4j          
            
[jsp,jsp-2.1]
$(jetty.home)/lib/jsp-2.1/**                                                            exists $(jetty.home)/lib/jsp-2.1         







