<?xml version="1.0" encoding="UTF-8"?>
<!-- Version 551 -->
<!-- Copyright (c) 2003-2007 eBay Inc. All Rights Reserved. -->
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns="urn:ebay:apis:eBLBaseComponents" xmlns="urn:ebay:apis:eBLBaseComponents" targetNamespace="urn:ebay:apis:eBLBaseComponents">
	<wsdl:types>
		<xs:schema targetNamespace="urn:ebay:apis:eBLBaseComponents" xmlns:ns="urn:ebay:apis:eBLBaseComponents" xmlns="urn:ebay:apis:eBLBaseComponents" xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">


	<!-- ##### SHARED_TYPES ##### -->
	<!--  
##### from file ./../Shared/xsd/AbstractRequestType.xsd #####

-->
	<xs:complexType name="AbstractRequestType" abstract="true">
		<xs:annotation>
			<xs:documentation>
				Base type definition of the request payload, which can carry any type
				of payload content plus optional versioning information and detail level requirements.
				All concrete request types are derived from the abstract request type.
				The naming convention we use for the concrete type names is the name of the service
				(the verb or call name) followed by "RequestType": VerbNameRequestType
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MessageID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						If you pass a value in MessageID in a request,
						we'll return the same value in CorrelationID in the response.
						If you're making a lot of calls, you can use this for tracking that a
						response is returned for every request and to match
						particular responses to particular requests. (In this case, specify
						a different value for each request.) You can specify any value
						that is useful to you.
					</xs:documentation>
					<xs:appinfo>
						<MaxLength/>
						<CallInfo>
							<AllCalls/>
							<RequiredInput>No</RequiredInput>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  
##### from file ./../Shared/xsd/AbstractResponseType.xsd #####

-->
	<xs:complexType name="AbstractResponseType" abstract="true">
		<xs:annotation>
			<xs:documentation>
				Base type definition of a response payload that can carry any
				type of payload content with following optional elements:&lt;br&gt;
				- timestamp of response message&lt;br&gt;
				- application-level acknowledgement&lt;br&gt;
				- application-level (business-level) errors and warnings
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						This value represents the date and time when eBay processed the
						request. The time zone of this value is &lt;a href="types/simpleTypes.html#dateTime"&gt;GMT&lt;/a&gt;
						and the format is the
						ISO 8601 date and time format (YYYY-MM-DDTHH:MM:SS.SSSZ).
						See the "dateTime" type for information about this
						time format and converting to and from the GMT time zone.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ack" type="ns:AckCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the call was successfully processed by eBay.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Always</Returned>
							<AllValuesExcept>PartialFailure</AllValuesExcept>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Errors" type="ns:ErrorType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						A list of application-level errors or warnings (if any) that were raised
						when eBay processed the request. &lt;br&gt;
						&lt;br&gt;
						Application-level errors occur due to
						problems with business-level data on the client side or on the eBay
						server side. For example, an error would occur if the request contains
						an invalid combination of fields, or it is missing a required field,
						or the value of the field is not recognized. An error could also occur
						if eBay encountered a problem in our internal business logic while
						processing the request.&lt;br&gt;
						&lt;br&gt;
						Only returned if there were warnings or errors.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Build" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						This refers to the particular software build that eBay used when
						processing the request and generating the response. This includes the
						version number plus additional information. eBay Developer Support may
						request the build information when helping you resolve technical issues.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Version" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The release version that eBay used to process the request.
						&lt;br&gt;
						&lt;br&gt;
						&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt;
						This is usually the latest release version, as specified in the
						release notes. (eBay releases the API to international sites
						about a week after we release it to the US site.) &lt;/span&gt;&lt;br&gt;
						&lt;br&gt;
						If a field in the response returns the token "CustomCode", it usually
						means that the field is a code type (a token or enumeration),
						and that in your request URL (or HTTP header) you specified a
						version that is older than the version in which the token was added
						to the call.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Always</Returned>
						</CallInfo>
						<SeeLink>
							<Title>eBay Versioning Strategy</Title>
							<URL>http://developer.ebay.com/DevZone/XML/docs/HowTo/eBayWS/eBaySchemaVersioning.html</URL>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CorrelationID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						If you pass a value in MessageID in a request, we will return the same
						value in CorrelationID in the response. You can use this for tracking
						that a response is returned for every request and to match particular
						responses to particular requests. Only returned if MessageID was used.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  
##### from file ./../Shared/xsd/AckCodeList.xsd #####

-->
	<xs:simpleType name="AckCodeType">
		<xs:annotation>
			<xs:documentation>
				AckCodeType - Type declaration to be used by other schema. This code identifies
				the acknowledgement code types that eBay could use to communicate the status of
				processing a (request) message to an application. This code would be used as part
				of a response message that contains an application-level acknowledgement element.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Success">
				<xs:annotation>
					<xs:documentation>
						(out) Request processing succeeded
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Failure">
				<xs:annotation>
					<xs:documentation>
						(out) Request processing failed
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Warning">
				<xs:annotation>
					<xs:documentation>
						(out) Request processing completed with warning information
						being included in the response message
					 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PartialFailure">
				<xs:annotation>
					<xs:documentation>
						(out) Request processing completed with some failures.
						See the Errors data to determine which portions of the request failed.
					 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  
##### from file ./../Shared/xsd/ErrorClassificationCodeList.xsd #####

-->
	<xs:simpleType name="ErrorClassificationCodeType">
		<xs:annotation>
			<xs:documentation>
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="RequestError">
				<xs:annotation>
					<xs:documentation>
					An error has occurred either as a result of a problem in the sending application or because 
					the application's end-user has attempted to submit invalid data (or missing data). 
					In these cases, do not retry the request. The problem must be corrected before the request 
					can be made again. If the problem is due to something in the application (such as a missing 
					required field), the application must be changed. If the problem is a result of end-user data, 
					the application must alert the end-user to the problem and provide the means for the end-user 
					to correct the data. Once the problem in the application or data is resolved, resend the request to eBay
					with the corrected data. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SystemError">
				<xs:annotation>
					<xs:documentation>
					Indicates that an error has occurred on the eBay system side, such as a database or server down. 
					An application can retry the request as-is a reasonable number of times (eBay recommends twice). 
					If the error persists, contact Developer Technical Support. Once the problem has been resolved, 
					the request may be resent in its original form. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  
##### from file ./../Shared/xsd/ErrorParameterType.xsd #####

-->
	<xs:complexType name="ErrorParameterType">
		<xs:annotation>
			<xs:documentation>
				A variable that contains specific information about the context of this error.
				For example, if you pass in an attribute set ID that does not match
				the specified category, the attribute set ID might be returned as an error parameter.
				Use error parameters to flag fields that users need to correct.
				Also use error parameters to distinguish between errors when multiple
				errors are returned.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Value" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The value of the variable.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="ParamID" type="xs:string">
			<xs:annotation>
				<xs:documentation>
				The index of the parameter in the error.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
<!--  
##### from file ./../Shared/xsd/ErrorType.xsd #####

-->
	<xs:complexType name="ErrorType">
		<xs:annotation>
			<xs:documentation>
				These are request errors (as opposed to system errors) that occur due to problems
				with business-level data (e.g., an invalid combination of arguments) that
				the application passed in.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShortMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A brief description of the condition that raised the error.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<SeeLink>
							<Title>Errors by Number</Title>
							<URL>Errors/ErrorMessages.html</URL>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="LongMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A more detailed description of the condition that raised the error.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<SeeLink>
							<Title>Errors by Number</Title>
							<URL>Errors/ErrorMessages.html</URL>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ErrorCode" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A unique code that identifies the particular error condition that occurred.
						Your application can use error codes as identifiers
						in your customized error-handling algorithms.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<SeeLink>
							<Title>Errors by Number</Title>
							<URL>Errors/ErrorMessages.html</URL>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserDisplayHint" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						This field is not currently in use for eBay Shopping Web Services.
						Indicates whether the error message text is intended to be displayed to
						an end user or intended only to be parsed by the application.
						If true or not present (the default), the message text is intended for the end user. If false, the message text is intended for
						the application, and the application should translate the error into a more appropriate message.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<NoCalls/>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SeverityCode" type="ns:SeverityCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the error caused the request to fail.&lt;br&gt;
						&lt;br&gt;
						If the request fails and the source of the problem is within the
						application (such as a missing required element), please change the
						application before you  retry the request. If the problem is due to
						end-user input data, please alert the end-user to the problem and
						provide the means for them to correct the data. Once the problem in the
						application or data is resolved, you can attempt to re-send the request
						to eBay.&lt;br&gt;
						&lt;br&gt;
						If the source of the problem is on eBay's side, you can retry the
						request as-is a reasonable number of times (eBay recommends twice).
						If the error persists, contact Developer Technical Support. Once the
						problem has been resolved, the request may be resent in its original
						form.&lt;br&gt;
						&lt;br&gt;
						When a warning occurs, the error is returned in addition to the business
						data. In this case, you do not need to retry the request (as the
						original request was successful). However, depending on the cause or
						nature of the warning, you might need to contact either the end user or
						eBay to effect a long term solution to the problem to prevent it from
						reoccurring in the future.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<SeeLink>
							<Title>Errors by Number</Title>
							<URL>Errors/ErrorMessages.html</URL>
						</SeeLink>
						<SeeLink>
							<Title>Requirements for Error Handling
</Title>
							<URL>http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&amp;topic=ErrorHandlingGuidelines</URL>
							<For>more information (in the eBay Trading Web Services guide)</For>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ErrorParameters" type="ns:ErrorParameterType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Some warning and error messages return one or more variables that
						contain contextual information about the error. This is often the
						field or value that triggered the error.
						You can usually predict where these will
						occur by looking at the "replaceable_value" indicators in our
						Errors by Number page.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<SeeLink>
							<Title>Errors by Number</Title>
							<URL>Errors/ErrorMessages.html</URL>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ErrorClassification" type="ns:ErrorClassificationCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						API errors are divided between two classes: system errors and request errors.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<SeeLink>
							<Title>Errors by Number</Title>
							<URL>Errors/ErrorMessages.html</URL>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  
##### from file ./../Shared/xsd/SeverityCodeList.xsd #####

-->
	<xs:simpleType name="SeverityCodeType">
		<xs:annotation>
			<xs:documentation>
				SeverityCodeType - Type declaration to be used by other schema. This code
				identifies the severity of an API error. A code indicates whether there is an API-
				level error or warning that needs to be communicated to the client.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Warning">
				<xs:annotation>
					<xs:documentation>
						(out) The request was processed successfully, but something occurred
						that may affect your application or the user. For example, eBay may have
						changed a value the user sent in. In this case, eBay returns a normal,
						successful response and also returns the warning.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Error">
				<xs:annotation>
					<xs:documentation>
						(out) The request that triggered the error was not processed
						successfully. When a serious application-level error occurs, the error
						is returned instead of the business data.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>


	<!-- ##### XSD_TYPES ##### -->
	<!--  

##### from file ../Shopping/xsd/AmountType.xsd #####

-->
	<xs:complexType name="AmountType">
	<xs:annotation>
		<xs:documentation>
			Basic type for specifying monetary amounts. A double value (e.g.,
			1.00 or 1.0) is meaningful as a monetary amount when accompanied by a
			specification of the currency, in which case the value specifies
			the amount in that currency. An AmountType expresses both the value
			(a double) and the currency. Details such as prices, fees, costs,
			and payments are specified as amount types.
		</xs:documentation>
	</xs:annotation>
	<xs:simpleContent>
		<xs:extension base="xs:double">
			<xs:attribute name="currencyID" type="ns:CurrencyCodeType" use="required">
				<xs:annotation>
					<xs:documentation>
						Currency in which the monetary amount is specified.
						See CurrencyCodeType for applicable values.
					</xs:documentation>
					<xs:appinfo>
						<AllValuesExcept>INR, CAD, HKD, AUD, CHF, MYR, EUR, PHP, PLN, USD, SGD, SEK, GBP</AllValuesExcept>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<RequiredInput>No</RequiredInput>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
		</xs:extension>
	</xs:simpleContent>
</xs:complexType>
<!--  

##### from file ../Shopping/xsd/AverageRatingDetailsType.xsd #####

-->
	<xs:complexType name="AverageRatingDetailsType">
		<xs:annotation>
			<xs:documentation> 
					Applicable to sites that support the Detailed Seller Ratings feature.
					The AverageRatingDetailsType contains the average detailed seller ratings in an area. When buyers leave an overall Feedback rating (positive, neutral, or negative) for a seller, they also can leave ratings in four areas: item as described, communication, shipping time, and charges for shipping and handling. Users retrieve detailed ratings as averages of the ratings left by buyers. 
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RatingDetail" type="ns:FeedbackRatingDetailCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The area of a specific average detailed seller rating.
						Users retrieve detailed ratings as averages of the ratings left by buyers.
						When buyers leave an overall Feedback rating (positive, neutral, or negative)
						for a seller, they also can leave ratings in four areas:
						item as described, communication, shipping time, and charges for shipping and handling. 
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackHistory</Details>										
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rating" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						An average detailed seller rating applying to the area in the corresponding RatingDetail field. 
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackHistory</Details>										
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="RatingCount" type="xs:long" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
						The number of detailed seller ratings in the area
						in the corresponding RatingDetail field. 
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackHistory</Details>										
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/BuyerPaymentMethodCodeList.xsd #####

-->
	<xs:simpleType name="BuyerPaymentMethodCodeType">
		<xs:annotation>
			<xs:documentation>
				Identifies payment methods used by a buyer to pay a
				seller. On item listings, identifies one of the payment methods
				seller will accept for the item. Available payment methods can
				differ by site and item. Payment methods are not applicable to eBay
				Real Estate ad format listings.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
						No payment method specified.
						For example, no payment methods would be specified for Ad format listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MOCC">
				<xs:annotation>
					<xs:documentation>
						Money order/cashiers check.
						Not applicable to US/CA eBay Motors listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AmEx">
				<xs:annotation>
					<xs:documentation>
						American Express.
						Not applicable to US/CA eBay Motors listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentSeeDescription">
				<xs:annotation>
					<xs:documentation>
						Payment instructions are contained in the item's description.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CCAccepted">
				<xs:annotation>
					<xs:documentation>
						Credit card.
						Not applicable to Real Estate or US/CA eBay Motors listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PersonalCheck">
				<xs:annotation>
					<xs:documentation>
						Personal check.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="COD">
				<xs:annotation>
					<xs:documentation>
						Cash on delivery.
						Only applicable to the following eBay sites: AT (16), BEFR (24),
						BENL (123), CH (193), DE (77), ES (186), FR (71), HK (201), IN (203),
						IT (101), PL (212), and SG (216).
						Not applicable to Real Estate listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VisaMC">
				<xs:annotation>
					<xs:documentation>
						Visa/Mastercard. These qualify as safe payment methods.
						Not applicable to US/CA eBay Motors listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaisaPayAccepted">
				<xs:annotation>
					<xs:documentation>
						PaisaPay (for India site only). This qualifies as a safe payment method.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Other">
				<xs:annotation>
					<xs:documentation>
						Other forms of payment.
						Not applicable to US/CA eBay Motors listings
						(see PaymentSeeDescription instead).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPal">
				<xs:annotation>
					<xs:documentation>
						PayPal is accepted as a payment method. This qualifies as a safe payment method. &lt;br&gt;
						&lt;br&gt;
						If PayPal is specified for US/CA eBay Motors vehicles, it is for
						the vehicle deposit (not for purchasing the vehicle).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Discover">
				<xs:annotation>
					<xs:documentation>
						Discover card.
						Not applicable to US/CA eBay Motors listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CashOnPickup">
				<xs:annotation>
					<xs:documentation>
						Payment on delivery.
						Not applicable to Real Estate or US/CA eBay Motors listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MoneyXferAccepted">
				<xs:annotation>
					<xs:documentation>
						Direct transfer of money.
						Not applicable to US/CA eBay Motors listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MoneyXferAcceptedInCheckout">
				<xs:annotation>
					<xs:documentation>
						If the seller has bank account information on file, and
						MoneyXferAcceptedInCheckout = true, then the bank account
						information will be displayed in Checkout.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OtherOnlinePayments">
				<xs:annotation>
					<xs:documentation>
						All other online payments.
						Not applicable to US/CA eBay Motors listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Escrow">
				<xs:annotation>
					<xs:documentation>
						Deprecated.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PrePayDelivery">
				<xs:annotation>
					<xs:documentation>
						Deprecated.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CODPrePayDelivery">
				<xs:annotation>
					<xs:documentation>
						Deprecated.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PostalTransfer">
				<xs:annotation>
					<xs:documentation>
						Deprecated.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LoanCheck">
				<xs:annotation>
					<xs:documentation>
						Loan check option (applicable only to the US eBay Motors site,
						except in the Parts and Accessories category, and the eBay Canada site for motors).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CashInPerson">
				<xs:annotation>
					<xs:documentation>
						Cash-in-person option. Applicable only to US and Canada eBay Motors vehicles,
						(not the Parts and Accessories category).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ELV">
				<xs:annotation>
					<xs:documentation>
						Elektronisches Lastschriftverfahren (direct debit).
						Only applicable to Express Germany.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaisaPayEscrowEMI">
				<xs:annotation>
					<xs:documentation>
							(in/out) PaisaPayEscrow EMI (Equal Monthly Installment) payment method. The PaisaPayEscrowEMI payment method is only for the India site (site ID 203).
						</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/BuyingGuideDetailsType.xsd #####

-->
	<xs:complexType name="BuyingGuideDetailsType">
		<xs:annotation>
			<xs:documentation>
				Information about zero or more buying guides and the site's buying guide hub.
				Buying guides contain content about particular product areas, categories, or subjects
				to help buyers decide which type of item to purchase based on their particular interests.
				Multiple buying guides can be returned. See the eBay Web Services Guide for additional information.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BuyingGuide" type="ns:BuyingGuideType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Information that identifies a buying guide. A buying guide contains content about particular
						product areas, categories, or subjects to help buyers decide which type of item
						to purchase based on their particular interests.
						Buying guides are useful to buyers who do not have a specific product in mind.
						For example, a digital camera buying guide could help a buyer determine what kind of
						digital camera is right for them.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BuyingGuideHub" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						URL of the buying guide home page for the site being searched.
						Your application can present this URL as a link. Optionally,
						you can use a value like "See all buying guides" as the link's
						display name. 
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/BuyingGuideType.xsd #####

-->
	<xs:complexType name="BuyingGuideType">
		<xs:annotation>
			<xs:documentation>
				Information that identifies a buying guide. A buying guide provides content about particular
				product areas, categories, or subjects to help buyers decide which type of item
				to purchase based on their particular interests.
				Buying guides are useful to buyers who do not have a specific product in mind.
				For example, a digital camera buying guide could help a buyer determine what kind of
				digital camera is right for them.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Display name of the buying guide. &lt;br&gt;
					&lt;br&gt;
					FindReviewsAndGuides only returns 20 characters, followed by "..." if the name is
					longer than 20 characters. For the full title, see BuyingGuide.Title
					instead.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="URL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					URL for the buying guide. Your application can
					present this as a link. Use the value of Name or Title as the link's display name.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Identifies the category (if any) that is associated
					with the buying guide. For FindReviewsAndGuides, this can be a category that is higher or lower in the hierarchy
					than the category specified in the request. For a matching categories search,
					you can use this information to determine the order that the buying guides are
					returned in when multiple guides are found.
					Optionally, you can use this information to determine where to present
					the buying guide link in your application.
				</xs:documentation>
					<xs:appinfo>
						<MaxLength>10</MaxLength>
						<CallInfo>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Title" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The title of the buying guide.
				   </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<MaxLength>55</MaxLength>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Text" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The text of the guide. If the guide is longer than
						2000 characters, the text is cut off and it ends with "...".
						See BuyingGuide.URL for a link to the full text of the review.
				   </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<MaxLength>2000</MaxLength>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreationTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The time and date when the guide was posted.
				   </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The author's eBay user ID.
				   </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/CatalogProductType.xsd #####

-->
	<xs:complexType name="CatalogProductType">
		<xs:annotation>
			<xs:documentation>
			Information about an eBay catalog product.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DomainName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The name of the domain in which the product was found.
						If the product is mapped to multiple domains, eBay returns
						the most applicable domain (as determined by eBay).
						Always returned when Product is returned.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Items, DomainHistogram, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DetailsURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Fully qualified URL for optional information about the product,
						such as a movie's description or film credits. This information
						is hosted through the eBay Web site and it cannot be edited.
						Portions of the content are protected by copyright.
						Applications can include this URL as a link in product search results
						so that end users can view additional descriptive details about
						the product. This is usually always returned when Product is returned,
						but it may be safest to check for the existence of this field.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Items, DomainHistogram, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DisplayStockPhotos" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						If true, your application can attempt to display stock photos that
						are returned. If false, your application should not attempt to display
						any stock photos that are returned. This recommendation is useful for
						catalog data related to products like coins, where stock photos are not
						necessarily applicable or available. An application with a graphical
						user interface can use this flag to determine
						when to hide customized stock photo widgets.
						Always returned when Product is returned.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Items, DomainHistogram, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductID" type="ns:ProductIDType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						The eBay or external IDs associated with the product. Use the Reference
						value as input to search for the same product in the future, or
						use the ISBN, EAN, or UPC value (if returned).
						The ISBN, EAN, and UPC values can also be useful as keys
						if your application is comparing products across different sites.
						Always returned when Product is returned.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Items, DomainHistogram, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Total number of listings on the requested eBay site that use
					stock information from this catalog product. This value can be greater
					than the number of listings returned in ItemArray. To retrieve more
					listings, use FindItemsAdvanced.
					Only returned when you search by ProductID (and you pass
					Items or Details in IncludeSelector).
					</xs:documentation>
					<xs:appinfo>
						<Min>0</Min>
						<Max/>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemSpecifics" type="ns:NameValueListArrayType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A list of name/value pairs that are included in the product's
						pre-filled Item Specifics. These indicate common aspects or
						characteristics of the product, such as Publisher (for a book).
						Also see ProductID for ISBN, UPC, or EAN values, if applicable.
						This is usually returned. (We are not aware of any cases in which this
						node is not be returned. However, it may be safest to check for the
						existence of this node.)
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Items, DomainHistogram, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReviewCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The total number of reviews that are available for this product
						on the eBay Web site. This can be greater than the number of
						reviews returned by FindProducts. In a future release, we will provide
						the capability to retrieve details about reviews.
						Always returned when Product is returned.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Items, DomainHistogram, Details</Details>
							<Min>0</Min>
							<Max/>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="StockPhotoURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Fully qualified URL for a stock image (if any) that is associated
						with the eBay catalog product. The URL is for the image eBay
						usually displays in product search results (usually 70px tall).
						It may be helpful to calculate the dimensions of the photo
						programmatically before displaying it.
						Only returned if a URL is available for the product.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Items, DomainHistogram, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Title" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The title of the product, as specified in the catalog.
						Always returned when Product is returned.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Items, DomainHistogram, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/CategoryArrayType.xsd #####

-->
	<xs:complexType name="CategoryArrayType">
		<xs:annotation>
			<xs:documentation>
				Container for a list of categories.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Category" type="ns:CategoryType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Contains details about a category.
					</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<Details>IncludeSelector: CategoryHistogram</Details>
									<Returned>Conditionally</Returned>
								</CallInfo>
								<CallInfo>
									<CallName>GetCategoryInfo</CallName>
									<Details>IncludeSelector: ChildCategories</Details>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/CategoryType.xsd #####

-->
	<xs:complexType name="CategoryType">
		<xs:annotation>
			<xs:documentation>
				Contains details about a category.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CategoryID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The numeric ID of a category on eBay.
						&lt;br&gt;
						&lt;br&gt;
						Use an ID of -1 to retrieve the root category and the top-level (level 1) meta categories. You can determine other CategoryIDs from the response from this call, or from a specific item (retrieved from another call like FindItemsAdvanced or GetSingleItem), or from the eBay website.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Details>IncludeSelector: CategoryHistogram</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetCategoryInfo</CallName>
							<Details>IncludeSelector: none, ChildCategories</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryLevel" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The level where the category fits in the site's category hierarchy.
						For example, if this field has a value of 2, then the category is 2
						levels below the root category.
						&lt;br&gt;
						&lt;br&gt;
						Note that the value of CategoryLevel will always be 1 level below the level
						of the requested category. To retrieve a category's children, pass its CategoryID back into the request.
						&lt;br&gt;
						&lt;br&gt;
						In the FindItemsAdvanced response, ItemCount indicates the total
						quantity of matching items in the category.
						&lt;br&gt;
						&lt;br&gt;
						In the FindItemsAdvanced response, sibling categories
						(i.e., matching categories at the same level) are sorted by ItemCount,
						descending order.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Details>IncludeSelector: CategoryHistogram</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetCategoryInfo</CallName>
							<Details>IncludeSelector: none, ChildCategories</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Display name of the category as it would appear on
						the eBay Web site.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Details>IncludeSelector: CategoryHistogram</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetCategoryInfo</CallName>
							<Details>IncludeSelector: none, ChildCategories</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryParentID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Category ID identifying a category that is an ancestor of
						the category indicated in CategoryID.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Details>IncludeSelector: CategoryHistogram</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetCategoryInfo</CallName>
							<Details>IncludeSelector: none, ChildCategories</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryParentName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Display name of the category indicated in CategoryParentID.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Details>IncludeSelector: CategoryHistogram</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetCategoryInfo</CallName>
							<Details>IncludeSelector: none, ChildCategories</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The total quantity of matching items in the category.
						In the FindItemsAdvanced response, matching categories at the same level
						(i.e., sibling categories) are sorted by ItemCount. That is, if the request
						specifies that fewer categories or subcategories should be returned,
						the ones with the most matching items are returned first.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Details>IncludeSelector: CategoryHistogram</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryNamePath" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The fully qualified category display name as it would appear on the
						eBay site (e.g., Home &amp; Garden:Kitchen:Tools &amp; Gadgets).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetCategoryInfo</CallName>
							<Details>IncludeSelector: none, ChildCategories</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryIDPath" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The fully qualified category ID (e.g., 11700:20625:20635 for Home &amp; Garden:Kitchen:Tools &amp; Gadgets).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetCategoryInfo</CallName>
							<Details>IncludeSelector: none, ChildCategories</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="LeafCategory" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						If true, indicates that the category indicated in CategoryID is a leaf category, in which items may be listed (if the category is not also
						expired or virtual).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetCategoryInfo</CallName>
							<Details>IncludeSelector: none, ChildCategories</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/CharityStatusCodeList.xsd #####

-->
	<xs:simpleType name="CharityStatusCodeType">
		<xs:annotation>
			<xs:documentation>
			    CharityStatusCodeType - Type declaration to be used by other schema.
			    Indicates the nonprofit status of the nonprofit charity organization registered with the dedicated eBay Giving Works provider.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Valid">
				<xs:annotation>
					<xs:documentation>
					  (out)	The specified nonprofit charity organization is a valid nonprofit charity organization according to the requirements of the dedicated eBay Giving Works provider.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NoLongerValid">
				<xs:annotation>
					<xs:documentation>
					  (out)	The specified nonprofit charity organization is no longer a valid nonprofit charity organization according to the requirements of the dedicated eBay Giving Works provider.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/CharityType.xsd #####

-->
	<xs:complexType name="CharityType">
		<xs:annotation>
			<xs:documentation>
				Identifies a Giving Works listing and benefiting nonprofit charity organization.
				Currently supported through the US and eBay Motors sites only. The Ad Format and
				Mature Audiences categories are not supported.
				Not applicable for US eBay Motors, international, Real Estate, and Tickets.
			</xs:documentation>
			<xs:appinfo>
				<CallInfo>
					<CallName>GetSingleItem</CallName>
					<Returned>Conditionally</Returned>
					<Details>IncludeSelector: Details</Details>
				</CallInfo>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CharityID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A unique identification number assigned by eBay to
						registered nonprofit charity organizations.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharityName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The name of the benefiting nonprofit charity organization selected by the
						charity seller.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharityNumber" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A unique identification number assigned to a nonprofit
						charity organization by the dedicated provider of
						eBay Giving Works. Being superseded by CharityID. Max 10
						digits.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DonationPercent" type="xs:float" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The percentage of the purchase price that the
						seller chooses to donate to the selected nonprofit
						organization. This percentage is displayed in the Giving
						Works item listing. Possible values: 10.0 to 100.0.
						Percentages must increment by 5.0. Minimum donation
						percentages may be required for Giving Works listings, see
						http://pages.ebay.com/help/sell/selling-nonprofit.html for
						details. DonationPercent is required input when listing
						Giving Works items.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Mission" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The stated mission of the nonprofit charity
						organization. This mission is displayed in the Giving Works
						item listing.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="LogoURL" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The URL of the nonprofit charity organization. This
						URL is displayed in the Giving Works item listing.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharityListing" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						If true, indicates that the seller has chosen to use
						eBay Giving Works to donate a percentage of the item's
						purchase price to a selected nonprofit organization.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Status" type="ns:CharityStatusCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The status of the nonprofit charity organization.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/CommentTypeCodeList.xsd #####

-->
	<xs:simpleType name="CommentTypeCodeType">
		<xs:annotation>
			<xs:documentation>
				CommentTypeCodeType - Type declaration to be used by other schema.
				These are the possible codes to specify the types of feedback/comment.
				Additional information about feedback is available in the online Help of the eBay site.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Positive">
				<xs:annotation>
					<xs:documentation>
								(in/out) Positive feedback. Increases total feedback score.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Neutral">
				<xs:annotation>
					<xs:documentation>
								(in/out) Neutral feedback. No effect on total feedback score.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Negative">
				<xs:annotation>
					<xs:documentation>
								(in/out) Negative feedback. Decreases total feedback score.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Withdrawn">
				<xs:annotation>
					<xs:documentation>
								(out) Withdrawn feedback. Removes the effect of the original
								feedback on total feedback score. Comments from withdrawn feedback
								are still visible.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IndependentlyWithdrawn">
				<xs:annotation>
					<xs:documentation>
								(out) Applies to the eBay Motors site only. Feedback is withdrawn based on
								the decision of a third party.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
								(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/CountryCodeList.xsd #####

-->
	<xs:simpleType name="CountryCodeType">
		<xs:annotation>
			<xs:documentation>
				Defines the standard 2-letter ISO 3166 country code set, plus
				some additional country codes that eBay uses.
				(The additional codes appear at the end of this code list and
				are noted as non-ISO.)
				For English names that correspond to each code (e.g., KY="Cayman Islands"),
				see the ISO site:
				http://www.iso.ch/iso/en/prods-services/iso3166ma/02iso-3166-code-lists/list-en1.html
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AF"/>
			<xs:enumeration value="AL"/>
			<xs:enumeration value="DZ"/>
			<xs:enumeration value="AS"/>
			<xs:enumeration value="AD"/>
			<xs:enumeration value="AO"/>
			<xs:enumeration value="AI"/>
			<xs:enumeration value="AQ"/>
			<xs:enumeration value="AG"/>
			<xs:enumeration value="AR"/>
			<xs:enumeration value="AM"/>
			<xs:enumeration value="AW"/>
			<xs:enumeration value="AU"/>
			<xs:enumeration value="AT"/>
			<xs:enumeration value="AZ"/>
			<xs:enumeration value="BS"/>
			<xs:enumeration value="BH"/>
			<xs:enumeration value="BD"/>
			<xs:enumeration value="BB"/>
			<xs:enumeration value="BY"/>
			<xs:enumeration value="BE"/>
			<xs:enumeration value="BZ"/>
			<xs:enumeration value="BJ"/>
			<xs:enumeration value="BM"/>
			<xs:enumeration value="BT"/>
			<xs:enumeration value="BO"/>
			<xs:enumeration value="BA"/>
			<xs:enumeration value="BW"/>
			<xs:enumeration value="BV"/>
			<xs:enumeration value="BR"/>
			<xs:enumeration value="IO"/>
			<xs:enumeration value="BN"/>
			<xs:enumeration value="BG"/>
			<xs:enumeration value="BF"/>
			<xs:enumeration value="BI"/>
			<xs:enumeration value="KH"/>
			<xs:enumeration value="CM"/>
			<xs:enumeration value="CA"/>
			<xs:enumeration value="CV"/>
			<xs:enumeration value="KY"/>
			<xs:enumeration value="CF"/>
			<xs:enumeration value="TD"/>
			<xs:enumeration value="CL"/>
			<xs:enumeration value="CN"/>
			<xs:enumeration value="CX"/>
			<xs:enumeration value="CC"/>
			<xs:enumeration value="CO"/>
			<xs:enumeration value="KM"/>
			<xs:enumeration value="CG"/>
			<xs:enumeration value="CD"/>
			<xs:enumeration value="CK"/>
			<xs:enumeration value="CR"/>
			<xs:enumeration value="CI"/>
			<xs:enumeration value="HR"/>
			<xs:enumeration value="CU"/>
			<xs:enumeration value="CY"/>
			<xs:enumeration value="CZ"/>
			<xs:enumeration value="DK"/>
			<xs:enumeration value="DJ"/>
			<xs:enumeration value="DM"/>
			<xs:enumeration value="DO"/>
			<xs:enumeration value="TP"/>
			<xs:enumeration value="EC"/>
			<xs:enumeration value="EG"/>
			<xs:enumeration value="SV"/>
			<xs:enumeration value="GQ"/>
			<xs:enumeration value="ER"/>
			<xs:enumeration value="EE"/>
			<xs:enumeration value="ET"/>
			<xs:enumeration value="FK"/>
			<xs:enumeration value="FO"/>
			<xs:enumeration value="FJ"/>
			<xs:enumeration value="FI"/>
			<xs:enumeration value="FR"/>
			<xs:enumeration value="GF"/>
			<xs:enumeration value="PF">
				<xs:annotation>
					<xs:documentation>
						French Polynesia. Includes Tahiti.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TF"/>
			<xs:enumeration value="GA"/>
			<xs:enumeration value="GM"/>
			<xs:enumeration value="GE"/>
			<xs:enumeration value="DE"/>
			<xs:enumeration value="GH"/>
			<xs:enumeration value="GI"/>
			<xs:enumeration value="GR"/>
			<xs:enumeration value="GL"/>
			<xs:enumeration value="GD"/>
			<xs:enumeration value="GP"/>
			<xs:enumeration value="GU"/>
			<xs:enumeration value="GT"/>
			<xs:enumeration value="GN"/>
			<xs:enumeration value="GW"/>
			<xs:enumeration value="GY"/>
			<xs:enumeration value="HT"/>
			<xs:enumeration value="HM"/>
			<xs:enumeration value="VA"/>
			<xs:enumeration value="HN"/>
			<xs:enumeration value="HK"/>
			<xs:enumeration value="HU"/>
			<xs:enumeration value="IS"/>
			<xs:enumeration value="IN"/>
			<xs:enumeration value="ID"/>
			<xs:enumeration value="IR"/>
			<xs:enumeration value="IQ"/>
			<xs:enumeration value="IE"/>
			<xs:enumeration value="IL"/>
			<xs:enumeration value="IT"/>
			<xs:enumeration value="JM"/>
			<xs:enumeration value="JP"/>
			<xs:enumeration value="JO"/>
			<xs:enumeration value="KZ"/>
			<xs:enumeration value="KE"/>
			<xs:enumeration value="KI"/>
			<xs:enumeration value="KP"/>
			<xs:enumeration value="KR"/>
			<xs:enumeration value="KW"/>
			<xs:enumeration value="KG"/>
			<xs:enumeration value="LA"/>
			<xs:enumeration value="LV"/>
			<xs:enumeration value="LB"/>
			<xs:enumeration value="LS"/>
			<xs:enumeration value="LR"/>
			<xs:enumeration value="LY"/>
			<xs:enumeration value="LI"/>
			<xs:enumeration value="LT"/>
			<xs:enumeration value="LU"/>
			<xs:enumeration value="MO"/>
			<xs:enumeration value="MK"/>
			<xs:enumeration value="MG"/>
			<xs:enumeration value="MW"/>
			<xs:enumeration value="MY"/>
			<xs:enumeration value="MV"/>
			<xs:enumeration value="ML"/>
			<xs:enumeration value="MT"/>
			<xs:enumeration value="MH"/>
			<xs:enumeration value="MQ"/>
			<xs:enumeration value="MR"/>
			<xs:enumeration value="MU"/>
			<xs:enumeration value="YT"/>
			<xs:enumeration value="MX"/>
			<xs:enumeration value="FM"/>
			<xs:enumeration value="MD"/>
			<xs:enumeration value="MC"/>
			<xs:enumeration value="MN"/>
			<xs:enumeration value="MS"/>
			<xs:enumeration value="MA"/>
			<xs:enumeration value="MZ"/>
			<xs:enumeration value="MM"/>
			<xs:enumeration value="NA"/>
			<xs:enumeration value="NR"/>
			<xs:enumeration value="NP"/>
			<xs:enumeration value="NL"/>
			<xs:enumeration value="AN"/>
			<xs:enumeration value="NC"/>
			<xs:enumeration value="NZ"/>
			<xs:enumeration value="NI"/>
			<xs:enumeration value="NE"/>
			<xs:enumeration value="NG"/>
			<xs:enumeration value="NU"/>
			<xs:enumeration value="NF"/>
			<xs:enumeration value="MP"/>
			<xs:enumeration value="NO"/>
			<xs:enumeration value="OM"/>
			<xs:enumeration value="PK"/>
			<xs:enumeration value="PW"/>
			<xs:enumeration value="PS"/>
			<xs:enumeration value="PA"/>
			<xs:enumeration value="PG"/>
			<xs:enumeration value="PY"/>
			<xs:enumeration value="PE"/>
			<xs:enumeration value="PH"/>
			<xs:enumeration value="PN"/>
			<xs:enumeration value="PL"/>
			<xs:enumeration value="PT"/>
			<xs:enumeration value="PR"/>
			<xs:enumeration value="QA"/>
			<xs:enumeration value="RE"/>
			<xs:enumeration value="RO"/>
			<xs:enumeration value="RU"/>
			<xs:enumeration value="RW"/>
			<xs:enumeration value="SH"/>
			<xs:enumeration value="KN"/>
			<xs:enumeration value="LC"/>
			<xs:enumeration value="PM"/>
			<xs:enumeration value="VC"/>
			<xs:enumeration value="WS"/>
			<xs:enumeration value="SM"/>
			<xs:enumeration value="ST"/>
			<xs:enumeration value="SA"/>
			<xs:enumeration value="SN"/>
			<xs:enumeration value="SC"/>
			<xs:enumeration value="SL"/>
			<xs:enumeration value="SG"/>
			<xs:enumeration value="SK"/>
			<xs:enumeration value="SI"/>
			<xs:enumeration value="SB"/>
			<xs:enumeration value="SO"/>
			<xs:enumeration value="ZA"/>
			<xs:enumeration value="GS"/>
			<xs:enumeration value="ES"/>
			<xs:enumeration value="LK"/>
			<xs:enumeration value="SD"/>
			<xs:enumeration value="SR"/>
			<xs:enumeration value="SJ"/>
			<xs:enumeration value="SZ"/>
			<xs:enumeration value="SE"/>
			<xs:enumeration value="CH"/>
			<xs:enumeration value="SY"/>
			<xs:enumeration value="TW"/>
			<xs:enumeration value="TJ"/>
			<xs:enumeration value="TZ"/>
			<xs:enumeration value="TH"/>
			<xs:enumeration value="TG"/>
			<xs:enumeration value="TK"/>
			<xs:enumeration value="TO"/>
			<xs:enumeration value="TT"/>
			<xs:enumeration value="TN"/>
			<xs:enumeration value="TR"/>
			<xs:enumeration value="TM"/>
			<xs:enumeration value="TC"/>
			<xs:enumeration value="TV"/>
			<xs:enumeration value="UG"/>
			<xs:enumeration value="UA"/>
			<xs:enumeration value="AE"/>
			<xs:enumeration value="GB"/>
			<xs:enumeration value="US"/>
			<xs:enumeration value="UM"/>
			<xs:enumeration value="UY"/>
			<xs:enumeration value="UZ"/>
			<xs:enumeration value="VU"/>
			<xs:enumeration value="VE"/>
			<xs:enumeration value="VN"/>
			<xs:enumeration value="VG"/>
			<xs:enumeration value="VI"/>
			<xs:enumeration value="WF"/>
			<xs:enumeration value="EH"/>
			<xs:enumeration value="YE"/>
			<xs:enumeration value="YU"/>
			<xs:enumeration value="ZM"/>
			<xs:enumeration value="ZW"/>
			<xs:enumeration value="AA">
				<xs:annotation>
					<xs:documentation>
										NOTE: APO/FPO was defined in eBay list previously
										but they are not defined in ISO 3166. This country
										will remain on eBay country code list for backward
										compatibility.
								 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QM">
				<xs:annotation>
					<xs:documentation>
										NOTE: Guernsey was defined in eBay list previously
										but they are not defined in ISO 3166. This country
										will remain on eBay country list for backward
										compatibility.
								 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QN">
				<xs:annotation>
					<xs:documentation>
										 NOTE: Jan Mayen was defined in eBay list previously
										 but they are not defined in ISO 3166. This country
										 will remain on eBay country list for backward
										 compatibility.
								 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QO">
				<xs:annotation>
					<xs:documentation>
										 NOTE: Jersey was defined in eBay list previously
										 but they are not defined in ISO 3166. This country
										 will remain on eBay country list for backward
										 compatibility.
								 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QP">
				<xs:annotation>
					<xs:documentation>
										 NOTE: Tahiti was defined in eBay list previously
										 but they are not defined in ISO 3166. This country
										 will remain on eBay country list for backward
										 compatibility. This Code is currently deprecated
								 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/CurrencyCodeList.xsd #####

-->
	<xs:simpleType name="CurrencyCodeType">
		<xs:annotation>
			<xs:documentation>
				Defines the standard 3-letter ISO 4217 currency code set.
				However, only certain currency codes are currently valid for use on eBay.
				The valid codes are documented below with the notation "(in/out)".
				Other codes in this list are for future use.
				The documentation below specifies English names for each currency.
				A reference: http://www.xe.com/iso4217.htm
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AFA"/>
			<xs:enumeration value="ALL"/>
			<xs:enumeration value="DZD"/>
			<xs:enumeration value="ADP"/>
			<xs:enumeration value="AOA"/>
			<xs:enumeration value="ARS"/>
			<xs:enumeration value="AMD"/>
			<xs:enumeration value="AWG"/>
			<xs:enumeration value="AZM"/>
			<xs:enumeration value="BSD"/>
			<xs:enumeration value="BHD"/>
			<xs:enumeration value="BDT"/>
			<xs:enumeration value="BBD"/>
			<xs:enumeration value="BYR"/>
			<xs:enumeration value="BZD"/>
			<xs:enumeration value="BMD"/>
			<xs:enumeration value="BTN"/>
			<xs:enumeration value="INR">
				<xs:annotation>
					<xs:documentation>
					Indian Rupee.
					Applicable to listings on the India site (site ID 203).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BOV"/>
			<xs:enumeration value="BOB"/>
			<xs:enumeration value="BAM"/>
			<xs:enumeration value="BWP"/>
			<xs:enumeration value="BRL"/>
			<xs:enumeration value="BND"/>
			<xs:enumeration value="BGL"/>
			<xs:enumeration value="BGN"/>
			<xs:enumeration value="BIF"/>
			<xs:enumeration value="KHR"/>
			<xs:enumeration value="CAD">
				<xs:annotation>
					<xs:documentation>
						Canadian Dollar.
						Applicable to listings on the Canada site (site ID 2)
						(Items listed on the Canada site can also specify USD.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CVE"/>
			<xs:enumeration value="KYD"/>
			<xs:enumeration value="XAF"/>
			<xs:enumeration value="CLF"/>
			<xs:enumeration value="CLP"/>
			<xs:enumeration value="CNY">
				<xs:annotation>
					<xs:documentation>
						Chinese Yuan Renminbi.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="COP"/>
			<xs:enumeration value="KMF"/>
			<xs:enumeration value="CDF"/>
			<xs:enumeration value="CRC"/>
			<xs:enumeration value="HRK"/>
			<xs:enumeration value="CUP"/>
			<xs:enumeration value="CYP"/>
			<xs:enumeration value="CZK"/>
			<xs:enumeration value="DKK"/>
			<xs:enumeration value="DJF"/>
			<xs:enumeration value="DOP"/>
			<xs:enumeration value="TPE"/>
			<xs:enumeration value="ECV"/>
			<xs:enumeration value="ECS"/>
			<xs:enumeration value="EGP"/>
			<xs:enumeration value="SVC"/>
			<xs:enumeration value="ERN"/>
			<xs:enumeration value="EEK"/>
			<xs:enumeration value="ETB"/>
			<xs:enumeration value="FKP"/>
			<xs:enumeration value="FJD"/>
			<xs:enumeration value="GMD"/>
			<xs:enumeration value="GEL"/>
			<xs:enumeration value="GHC"/>
			<xs:enumeration value="GIP"/>
			<xs:enumeration value="GTQ"/>
			<xs:enumeration value="GNF"/>
			<xs:enumeration value="GWP"/>
			<xs:enumeration value="GYD"/>
			<xs:enumeration value="HTG"/>
			<xs:enumeration value="HNL"/>
			<xs:enumeration value="HKD">
				<xs:annotation>
					<xs:documentation>
						Hong Kong Dollar.
						Applicable to listings on the Hong Kong site (site ID 201).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HUF"/>
			<xs:enumeration value="ISK"/>
			<xs:enumeration value="IDR"/>
			<xs:enumeration value="IRR"/>
			<xs:enumeration value="IQD"/>
			<xs:enumeration value="ILS"/>
			<xs:enumeration value="JMD"/>
			<xs:enumeration value="JPY"/>
			<xs:enumeration value="JOD"/>
			<xs:enumeration value="KZT"/>
			<xs:enumeration value="KES"/>
			<xs:enumeration value="AUD">
				<xs:annotation>
					<xs:documentation>
						Australian Dollar.
						Applicable to listings on the Australia site (site ID 15).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="KPW"/>
			<xs:enumeration value="KRW"/>
			<xs:enumeration value="KWD"/>
			<xs:enumeration value="KGS"/>
			<xs:enumeration value="LAK"/>
			<xs:enumeration value="LVL"/>
			<xs:enumeration value="LBP"/>
			<xs:enumeration value="LSL"/>
			<xs:enumeration value="LRD"/>
			<xs:enumeration value="LYD"/>
			<xs:enumeration value="CHF">
				<xs:annotation>
					<xs:documentation>
						Swiss Franc.
						Applicable to listings on the Switzerland site (site ID 193).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LTL"/>
			<xs:enumeration value="MOP"/>
			<xs:enumeration value="MKD"/>
			<xs:enumeration value="MGF"/>
			<xs:enumeration value="MWK"/>
			<xs:enumeration value="MYR">
				<xs:annotation>
					<xs:documentation>
						Malaysian Ringgit.
						Applicable to listings on the Malaysia site (site ID 207).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MVR"/>
			<xs:enumeration value="MTL"/>
			<xs:enumeration value="EUR">
				<xs:annotation>
					<xs:documentation>
						Euro.
						Applicable to listings on these site:
						Austria (site 16), Belgium_French (site 23),
						France (site 71), Germany (site 77), Italy (site 101), Belgium_Dutch (site 123),
						Netherlands (site 146), Spain (site 186), Ireland (site 205).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MRO"/>
			<xs:enumeration value="MUR"/>
			<xs:enumeration value="MXN"/>
			<xs:enumeration value="MXV"/>
			<xs:enumeration value="MDL"/>
			<xs:enumeration value="MNT"/>
			<xs:enumeration value="XCD"/>
			<xs:enumeration value="MZM"/>
			<xs:enumeration value="MMK"/>
			<xs:enumeration value="ZAR"/>
			<xs:enumeration value="NAD"/>
			<xs:enumeration value="NPR"/>
			<xs:enumeration value="ANG"/>
			<xs:enumeration value="XPF"/>
			<xs:enumeration value="NZD"/>
			<xs:enumeration value="NIO"/>
			<xs:enumeration value="NGN"/>
			<xs:enumeration value="NOK"/>
			<xs:enumeration value="OMR"/>
			<xs:enumeration value="PKR"/>
			<xs:enumeration value="PAB"/>
			<xs:enumeration value="PGK"/>
			<xs:enumeration value="PYG"/>
			<xs:enumeration value="PEN"/>
			<xs:enumeration value="PHP">
				<xs:annotation>
					<xs:documentation>
						Philippines Peso.
						Applicable to listings on the Philippines site (site ID 211).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PLN">
				<xs:annotation>
					<xs:documentation>
						Poland, Zloty.
						Applicable to listings on the Poland site (site ID 212).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USD">
				<xs:annotation>
					<xs:documentation>
						US Dollar.
						Applicable to listings on the US (site ID 0), eBayMotors (site 100), and Canada (site 2) sites.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QAR"/>
			<xs:enumeration value="ROL"/>
			<xs:enumeration value="RUB"/>
			<xs:enumeration value="RUR"/>
			<xs:enumeration value="RWF"/>
			<xs:enumeration value="SHP"/>
			<xs:enumeration value="WST"/>
			<xs:enumeration value="STD"/>
			<xs:enumeration value="SAR"/>
			<xs:enumeration value="SCR"/>
			<xs:enumeration value="SLL"/>
			<xs:enumeration value="SGD">
				<xs:annotation>
					<xs:documentation>
						Singapore Dollar.
						Applicable to listings on the Singapore site (site 216).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SKK"/>
			<xs:enumeration value="SIT"/>
			<xs:enumeration value="SBD"/>
			<xs:enumeration value="SOS"/>
			<xs:enumeration value="LKR"/>
			<xs:enumeration value="SDD"/>
			<xs:enumeration value="SRG"/>
			<xs:enumeration value="SZL"/>
			<xs:enumeration value="SEK">
				<xs:annotation>
					<xs:documentation>
						 Swedish Krona.
						 Applicable to listings on the Sweden site (site 218).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SYP"/>
			<xs:enumeration value="TWD">
				<xs:annotation>
					<xs:documentation>
						New Taiwan Dollar.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TJS"/>
			<xs:enumeration value="TZS"/>
			<xs:enumeration value="THB"/>
			<xs:enumeration value="XOF"/>
			<xs:enumeration value="TOP"/>
			<xs:enumeration value="TTD"/>
			<xs:enumeration value="TND"/>
			<xs:enumeration value="TRL"/>
			<xs:enumeration value="TMM"/>
			<xs:enumeration value="UGX"/>
			<xs:enumeration value="UAH"/>
			<xs:enumeration value="AED"/>
			<xs:enumeration value="GBP">
				<xs:annotation>
					<xs:documentation>
						Pound Sterling.
						Applicable to listings on the UK site (site ID 3).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USS"/>
			<xs:enumeration value="USN"/>
			<xs:enumeration value="UYU"/>
			<xs:enumeration value="UZS"/>
			<xs:enumeration value="VUV"/>
			<xs:enumeration value="VEB"/>
			<xs:enumeration value="VND"/>
			<xs:enumeration value="MAD"/>
			<xs:enumeration value="YER"/>
			<xs:enumeration value="YUM"/>
			<xs:enumeration value="ZMK"/>
			<xs:enumeration value="ZWD"/>
			<xs:enumeration value="ATS"/>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/DigitalDeliveryMethodCodeList.xsd #####

-->
	<xs:simpleType name="DigitalDeliveryMethodCodeType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
					The item cannot be downloaded.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DownloadURL">
				<xs:annotation>
					<xs:documentation>
					The item can be downloaded by using a URL.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AlternateDeliveryInstructions">
				<xs:annotation>
					<xs:documentation>
					The item can be downloaded according to instructions specified by the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode"/>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/DistanceType.xsd #####

-->
	<xs:complexType name="DistanceType">
		<xs:annotation>
			<xs:documentation>
			 	Distance, used for a proximity search.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:double">
				<xs:attribute name="unit" type="xs:string"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/DomainHistogramType.xsd #####

-->
	<xs:complexType name="DomainHistogramType">
		<xs:annotation>
			<xs:documentation>
				A generic type used for histograms.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Domain" type="ns:HistogramEntryType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Each histogram entry shows how many matching products
						were found in each matching domain. A domain is like a high-level
						category, or a group of categories whose items share the same basic
						product characteristics.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: DomainHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: DomainHistogram</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/ExternalProductCodeList.xsd #####

-->
	<xs:simpleType name="ExternalProductCodeType">
		<xs:annotation>
			<xs:documentation>
				Indicates the type of external product ID being used to identify a
				stock product.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ISBN">
				<xs:annotation>
					<xs:documentation>
						(in/out) ExternalProductID.Value contains an ISBN value.
						Required when you pass an ISBN as the external product ID.
						(This value is also applicable to Half.com listings.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPC">
				<xs:annotation>
					<xs:documentation>
						(in/out) ExternalProductID.Value contains a UPC value.
						Required when you pass a UPC as the external product ID.
						(This value is also applicable to Half.com listings.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ProductID">
				<xs:annotation>
					<xs:documentation>
						(in) ExternalProductID.Value contains an eBay catalog product ID.
						Required when you pass an eBay product ID
						as the external product ID.
						Not applicable with FindItemsAdvanced, FindItemsAdvancedExpress, or
						FindProducts.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EAN">
				<xs:annotation>
					<xs:documentation>
						ExternalProductID.Value contains an EAN value.
						Required when you pass an EAN as the external product ID.
						Not applicable with FindItemsAdvancedExpress.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Keywords">
				<xs:annotation>
					<xs:documentation>
						(in) ExternalProductID.Value contains a set of keywords that uniquely identify the product.
						Only applicable when listing event ticket.
						See the eBay Web Services guide for information about valid
						ticket keywords for an external product ID.
						Required when you pass a set of keywords as the external product ID.
						Not applicable with FindItemsAdvanced, FindItemsAdvancedExpress, or
						FindProducts. With FindItemsAdvanced, use TicketFinder instead.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MPN">
				<xs:annotation>
					<xs:documentation>
						Reserved for future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/ExternalProductIDType.xsd #####

-->
	<xs:complexType name="ExternalProductIDType">
		<xs:annotation>
			<xs:documentation>
				Contains an ISBN value, EAN value, UPC value, ticket keywords, or eBay
				catalog product ID, plus other meta-data. For event tickets, this type
				can contain a set of keywords that uniquely identify the product. Only
				applicable to certain categories that support Pre-filled Item
				Information.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Value" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						An industry-standard value that uniquely identifies the product. The
						valid values are dictated by the Type property.
						Required if Type is specified.
						Max length 13 for ISBN, 13 for EAN,
						12 for UPC, and 4000 for ProductID. No max length for ticket keywords
						(but passing too much data can result in "no match found"
						errors).&lt;br&gt;
						&lt;br&gt;
						&lt;b&gt;For AddItem and related calls:&lt;/b&gt;
						If the primary and secondary categories are both catalog-enabled,
						the value must apply to the primary category.
						Event tickets listings support a set of keywords
						that uniquely identify the listing. The ticket keywords specify the
						event name (the title shown on the ticket), venue name, and event
						date and time. See the eBay Web Services guide for more information
						and validation rules. For convenience, you can pass an eBay product ID
						as input (not limited to media categories).&lt;br&gt;
						&lt;br&gt;
						Required for Half.com listing use cases, and this can only be an
						ISBN, UPC, or EAN value.&lt;br&gt;
						&lt;br&gt;
						&lt;b&gt;For FindItemsAdvanced and FindProducts input only:&lt;/b&gt;
						Only ISBN, EAN, and UPC values are currently supported as
						input.&lt;br&gt;
						&lt;br&gt;
						&lt;b&gt;For FindItemsAdvancedExpress input only:&lt;/b&gt;
						To pass an external product ID in the request, use
						ExternalProductIDValue and ExternalProductIDType instead.&lt;br&gt;
						&lt;br&gt;
						&lt;b&gt;For FindItemsAdvancedExpress, FindProducts, and GetSellerPayments
						output only:&lt;/b&gt; Also see AlternateValue, which is
						returned if the catalog defines multiple ISBN values (e.g., one for
						ISBN-13 and one for ISBN-10). Please note that some catalogs return ISBN
						values that are not 10 or 13 characters, and some values contain
						non-alphanumeric symbols (e.g., $).
					</xs:documentation>
					<xs:appinfo>
						<MaxLength>See description</MaxLength>
						<CallInfo>
							<CallName>AddItem</CallName>
							<CallName>GetItemRecommendations</CallName>
							<CallName>VerifyAddItem</CallName>
							<Context>Item.ExternalProductID</Context>
							<RequiredInput>Conditionally</RequiredInput>
							<!-- N/A to ReviseItem and RelistItem -->
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<RequiredInput>Conditionally</RequiredInput>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<RequiredInput>Conditionally</RequiredInput>
						</CallInfo>
						<CallInfo>
							<CallName>GetSellerPayments</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvancedExpress</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReturnSearchResultOnDuplicates" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Applicable for listing use cases only (not buy-side searching).
						Indicates what eBay should do if more than one product matches
						the value passed in Value. Only takes effect when more than one
						match is found. If true, the response should include an error
						and all matching product IDs. If false, the response should include
						an error but should not return the matching product IDs.
						This field is also applicable when listing Half.com items.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>AddItem</CallName>
							<CallName>GetItemRecommendations</CallName>
							<CallName>VerifyAddItem</CallName>
							<RequiredInput>No</RequiredInput>
							<Context>Item.ExternalProductID</Context>
							<!-- N/A to ReviseItem and RelistItem -->
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="ns:ExternalProductCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The kind of identifier being used. The choices are listed
						For requests, required if Value is specified.
						For Half.com listing use cases, only ISBN, UPC, and EAN are supported.&lt;br&gt;
						&lt;br&gt;
						FindItemsAdvancedExpress returns this value in ProductArray.Product.ExternalProductID.Type.
						To pass an external product ID in the request, use ExternalProductIDType and ExternalProductIDValue instead. &lt;br&gt;
						&lt;br&gt;
						FindProducts supports ISBN, UPC, and EAN.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>AddItem</CallName>
							<CallName>GetItemRecommendations</CallName>
							<CallName>VerifyAddItem</CallName>
							<Context>Item.ExternalProductID</Context>
							<AllValuesExcept>MPN</AllValuesExcept>
							<RequiredInput>Conditionally</RequiredInput>
							<!-- N/A to ReviseItem and RelistItem -->
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<OnlyTheseValues>ISBN, UPC, EAN</OnlyTheseValues>
							<RequiredInput>Conditionally</RequiredInput>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<OnlyTheseValues>ISBN, UPC, EAN</OnlyTheseValues>
							<RequiredInput>Conditionally</RequiredInput>
							<!-- N/A to ReviseItem and RelistItem -->
						</CallInfo>
						<CallInfo>
							<CallName>GetSellerPayments</CallName>
							<!-- Half.com only supports BMMG categories.
							So, only ISBN, UPC, and EAN can
							be supported in Half.com use cases. -->
							<OnlyTheseValues>ISBN, UPC, EAN</OnlyTheseValues>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvancedExpress</CallName>
							<OnlyTheseValues>ISBN, UPC</OnlyTheseValues>
							<Returned>Conditionally</Returned>
							<SeeLink>
								<Title>(FindItemsAdvancedExpress) ExternalProductIDType</Title>
								<URL>io_FindItemsAdvancedExpress.html#Request.ExternalProductIDType</URL>
							</SeeLink>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AlternateValue" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						An industry-standard value that provides an alternate identification for
						the product, if any. Currently, this only returns an alternate ISBN
						value. If the catalog defines both an ISBN-13 and ISBN-10,
						then the ISBN-13 is returned in Value and the ISBN-10 is returned in
						AlternateValue. (That is, the ISBN-13 is considered to be the preferred
						identifier.) If the catalog only defines one ISBN, it is returned in
						Value (and AlternateValue is not returned). Please note that some
						catalogs return ISBN values that are not 10 or 13 characters,
						and some values contain non-alphanumeric symbols (e.g., $).
					</xs:documentation>
					<xs:appinfo>
						<MaxLength>4000</MaxLength>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<CallName>FindItemsAdvancedExpress</CallName>
							<CallName>GetSellerPayments</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FeedbackDetailType.xsd #####

-->
	<xs:complexType name="FeedbackDetailType">
		<xs:annotation>
			<xs:documentation>
				Detailed feedback information for a user. Conveys the score for the
				feedback, the textual comment, and other information.
		  </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CommentingUser" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						eBay user ID for the user who left the feedback.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CommentingUserScore" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Feedback score of the user in CommentingUser.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CommentText" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Text message left by the user in CommentingUser. Used to provide a more
						in-depth description of the user's opinion of the transaction.
						Returned as text in the language that the
						comment was originally left in.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CommentTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Date and time (in GMT) that the feedback was submitted to eBay.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CommentType" type="ns:CommentTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Type of feedback. Can be Positive, Neutral, Negative, or Withdrawn (see the
						CommentTypeCodeType code list). Positive feedbacks add to the user's total
						feedback score, negative feedbacks lower the score, and neutral feedbacks do
						not affect the score (but do affect the overall picture of the user's online
						reputation).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackResponse" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Textual comment that the user targeted by feedback may leave
						in response or rebuttal to the feedback.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FollowUp" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Explanation a user can give to a response.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The ID that uniquely identifies the item listing.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Role" type="ns:TradingRoleCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the user who was the feedback recipient was a Buyer or the
						Seller for that transaction.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemTitle" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Name of the listing for which feedback was provided.
						Returned as CDATA.
						Not returned if a listing ended more than 90 days ago.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The final price for the item, associated with
						the currency identified by the currencyId attribute of the AmountType.
						Not returned if a listing ended more than 90 days ago.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Unique identifier for the feedback entry.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransactionID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Unique identifier for the transaction about which
						this feedback entry was left.
						This field is not returned in the case of TransactionIDs from Chinese auction listings,
						because a value of zero is used for TransactionIDs in such cases.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CommentReplaced" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Indicates whether eBay replaced the comment with a message
						that the comment was removed.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResponseReplaced" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Indicates whether eBay replaced the response with a message
						that the response was removed.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FollowUpReplaced" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Indicates whether eBay replaced the follow-up with a message
						that the follow-up was removed.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Countable" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Specifies if a user's feedback score is or is not countable. This field is
						returned only when a user's feedback score is not countable (value is false).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackDetails</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FeedbackHistoryType.xsd #####

-->
	<xs:complexType name="FeedbackHistoryType">
		<xs:annotation>
			<xs:documentation>
				Specifies all feedback summary information (except Score). Contains
				objects that each convey feedback counts for
				positive, negative, neutral, and total feedback counts - for various
				time periods each. Also conveys counts of bid retractions for the
				predefined time periods.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BidRetractionFeedbackPeriods" type="ns:FeedbackPeriodType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Bid retractions count, for multiple predefined time periods preceding
						the call. 
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackHistory</Details>										
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="NegativeFeedbackPeriods" type="ns:FeedbackPeriodType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Negative feedback entries count, for multiple predefined time periods preceding
						the call. 
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackHistory</Details>										
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="NeutralFeedbackPeriods" type="ns:FeedbackPeriodType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Neutral feedback entries count, for multiple predefined time periods preceding
						the call. 
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackHistory</Details>										
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PositiveFeedbackPeriods" type="ns:FeedbackPeriodType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Positive feedback entries count, for multiple predefined time periods
						preceding the call. 
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackHistory</Details>										
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="TotalFeedbackPeriods" type="ns:FeedbackPeriodType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Total feedback score, for multiple predefined time periods preceding the
						call. 
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackHistory</Details>										
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniqueNegativeFeedbackCount" type="xs:long" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Total number of negative Feedback comments received by the user, including weekly repeats.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackHistory</Details>										
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniquePositiveFeedbackCount" type="xs:long" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Total number of positive Feedback comments received by the user, including weekly repeats.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackHistory</Details>										
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AverageRatingDetails" type="ns:AverageRatingDetailsType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Container for information about detailed seller ratings (DSRs)
						that buyers have left for a seller.
						Sellers have access to the number of ratings they've received, as well as
						to the averages of DSRs they've received in each
						DSR area (i.e., to the average of ratings in the item-description area, etc.).  
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackHistory</Details>										
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="NeutralCommentCountFromSuspendedUsers" type="xs:long" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Number of neutral comments received from suspended users.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackHistory</Details>										
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniqueNeutralFeedbackCount" type="xs:long" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Total number of neutral Feedback comments received by the user, including weekly repeats. 
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackHistory</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FeedbackPeriodType.xsd #####

-->
	<xs:complexType name="FeedbackPeriodType">
		<xs:annotation>
			<xs:documentation>
					Contains the data for one type of feedback for one predefined time
					period. Parent FeedbackPeriodArrayType object indicates the type of
					feedback counted: positive, neutral, negative, or total. 
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PeriodInDays" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Indicates the time period for the feedback count. Returns a value indicating
						the number of days prior to the call for which feedbacks of the particular
						type are counted.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackHistory</Details>										
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Count" type="xs:long" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Count of the feedbacks received by the user for the time period prior to the
						call indicated in PeriodInDays.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: FeedbackHistory</Details>										
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FeedbackRatingDetailCodeList.xsd #####

-->
	<xs:simpleType name="FeedbackRatingDetailCodeType">
		<xs:annotation>
			<xs:documentation>
				Applicable to sites that support the Detailed Seller Ratings feature.
				The FeedbackRatingDetailCodeType is the list of areas for detailed seller ratings. When buyers leave an overall Feedback rating (positive, neutral, or negative) for a seller, they also can leave ratings in four areas: item as described, communication, shipping time, and charges for shipping and handling. Users retrieve detailed ratings as averages of the ratings left by buyers. 
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ItemAsDescribed">
				<xs:annotation>
					<xs:documentation>
						Detailed seller rating in the area of "item as described."
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Communication">
				<xs:annotation>
					<xs:documentation>
						Detailed seller rating in the area of "communication."
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShippingTime">
				<xs:annotation>
					<xs:documentation>
						Detailed seller rating in the area of "shipping time." Inapplicable to 
						motor vehicle items.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShippingAndHandlingCharges">
				<xs:annotation>
					<xs:documentation>
						Detailed seller rating in the area of "charges for shipping and handling."
						Inapplicable to motor vehicle items. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/FeedbackRatingStarCodeList.xsd #####

-->
	<xs:simpleType name="FeedbackRatingStarCodeType">
		<xs:annotation>
			<xs:documentation>
					 FeedbackRatingStarCodeType - Type declaration to be used by other
					 schema. The color of a feedback score star visually denotes the
					 range in which the member's summary feedback score falls. The score
					 is the net positive feedback minus the net negative feedback left
					 for the member.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
								No graphic displayed, feedback score 0-9.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Yellow">
				<xs:annotation>
					<xs:documentation>
								Yellow Star, feedback score 10-49.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Blue">
				<xs:annotation>
					<xs:documentation>
								Blue Star, feedback score 50-99.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Turquoise">
				<xs:annotation>
					<xs:documentation>
								Turquoise Star, feedback score 100-499.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Purple">
				<xs:annotation>
					<xs:documentation>
								Purple Star, feedback score 500-999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Red">
				<xs:annotation>
					<xs:documentation>
								Red Star, feedback score 1,000-4,999
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Green">
				<xs:annotation>
					<xs:documentation>
								Green Star, feedback score 5,000-9,999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="YellowShooting">
				<xs:annotation>
					<xs:documentation>
								Yellow Shooting Star, feedback score 10,000-24,999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TurquoiseShooting">
				<xs:annotation>
					<xs:documentation>
								Turquoise Shooting Star, feedback score 25,000-49,999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PurpleShooting">
				<xs:annotation>
					<xs:documentation>
								Purple Shooting Star, feedback score 50,000-99,999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RedShooting">
				<xs:annotation>
					<xs:documentation>
								Red Shooting Star, feedback score 100,000 and above.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/FindHalfProductsRequest.xsd #####

-->
		<xs:element name="FindHalfProductsRequest" type="ns:FindHalfProductsRequestType"/>
<xs:complexType name="FindHalfProductsRequestType">
		<xs:annotation>
			<xs:documentation>
				Searches Half.com for stock product information (stock description
				and Item Specifics), such as information about a particular
				kind of DVD or book. Also, retrieves up to 30 Half.com listings associated
				with a product.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Searches Half.com for stock product information (stock description
					and Item Specifics), such as information about a particular
					kind of DVD or book. Also, retrieves up to 30 Half.com listings associated
					with a product.
				</Summary>
				<TempInfo>IncludeSelector</TempInfo>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="IncludeSelector" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Defines standard subsets of fields to return within the
								response.&lt;br&gt;
								&lt;br&gt;
								If you don't specify this field, the call returns a default
								set of fields, focusing on product details only
								(see the "Detail Controls" link below). If you specify this
								field, the additional fields you retrieve can affect the call's
								response time (performance).&lt;br&gt;
								&lt;br&gt;
								&lt;b&gt;Applicable values&lt;/b&gt;:
								&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Items&lt;/p&gt;
									&lt;p class="edef"&gt;Include a brief set of item fields
									in the response.
									Only applicable when you are searching by ProductID.
									Not applicable with QueryKeywords.&lt;/p&gt;
								&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; DomainHistogram&lt;/p&gt;
									&lt;p class="edef"&gt;Include the DomainHistogram in
									the response. The histogram lists the number of matching
									products found and the domains in which they were found.
									(A domain is like a high-level category.)
									When many matching products are found, you may see
									significantly slower response times when you include
									the histogram.&lt;/p&gt;
								&lt;br&gt;
								&lt;br&gt;
								Use a comma to specify multiple values. (In this case,
								the results are cumulative.) See "FindHalfProducts Samples"
								for an example of how to use this field.&lt;br&gt;
								&lt;br&gt;
								See "Detail Controls" for a complete list of
								fields that can be returned for each selector.
							</xs:documentation>
							<xs:appinfo>
								<MaxLength/>
								<PresentDetails>Yes</PresentDetails>
								<CallInfo>
									<CallName>FindHalfProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="AvailableItemsOnly" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								If true, only retrieve data for products that have been used to
								pre-fill active listings on the Half.com site.
								If false, retrieve all products that match the query.
								This is useful when you use QueryKeywords and you only want to
								find products that have associated items (that is, where ItemArray
								would not be empty).&lt;br&gt;
								&lt;br&gt;
								This does not retrieve ItemArray; this only controls which
								products are returned (or counted). To retrieve ItemArray,
								pass Items in IncludeSelector.
							</xs:documentation>
							<xs:appinfo>
								<Default>false</Default>
								<CallInfo>
									<CallName>FindHalfProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="DomainName" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								A domain to search in. This is like searching a section of
								a catalog. If not specified, the product search is conducted
								across all domains.
								DomainName is an unbounded field. If you are using a URL, and you want
								to specify multiple values, use an index value (not a comma).
								For example, to specify DomainName=Textbooks,Education, 
								specify DomainName(0)=Textbooks,%20Education.								
								To determine valid domain names,
								first use this call with QueryKeywords. Domain names are returned
								for each product (and summarized in the domain histogram, if you
								specify DomainHistogram in IncludeSelector).&lt;br&gt;
								&lt;br&gt;
								A domain is a named grouping of categories whose items share
								common product characteristics. For example, all bound books
								have a binding or format (e.g., Hardcover), but audiobooks don't.
								So audiobooks would have their own domain.
								To limit your search to audiobooks, you would specify Audiobooks
								as the domain.&lt;br&gt;
								&lt;br&gt;
								Only useful when QueryKeywords is specified. If you use this with
								ProductID, AND logic is applied. In this case, if you specify an
								ID that doesn't match the domain (as Half.com has defined it),
								no matching product will be found. Therefore, we recommend that you only use DomainName with QueryKeywords.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindHalfProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ProductID" type="ns:ProductIDType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Use this to retrieve product details for one specific product.
								Specify the ID as a string, and use the type attribute to
								indicate the nature of the ID you are specifying.
								&lt;br&gt;
								&lt;br&gt;
								You can request up to 10 IDs of the same type by separating them with commas, such as 
								014633155310,014633145496.
								&lt;br&gt;
								&lt;br&gt;
								The request requires either QueryKeywords or
								ProductID, but these fields cannot be used together.
							</xs:documentation>
							<xs:appinfo>
								<MaxLength>4000</MaxLength>
								<CallInfo>
									<CallName>FindHalfProducts</CallName>
									<RequiredInput>Conditionally</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="QueryKeywords" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								One or more keywords to search for. When you use a keyword search,
								Half.com searches the product catalogs  for matching words in the
								product title, description, and/or Item Specifics, and it returns
								a list of matching products, with no items. To retrieve
								items, use ProductID instead. (If you don't already have a
								product ID, you can get product IDs from the
								response after conducting a keyword search.)&lt;br&gt;
								&lt;br&gt;
								If specified, you must pass in at least 3 alphanumeric characters.&lt;br&gt;
								&lt;br&gt;
								The words "and" and "or" are treated like any other word.
								Only use "and", "or", or "the" if you are searching for products
								containing these words.
								To use AND or OR logic, use Half.com's standard search string
								modifiers. Wildcards (+, -, or *) are also supported.
								Be careful when using spaces before or after modifiers and
								wildcards.&lt;br&gt;
								&lt;br&gt;
								Some keyword queries can result in response times of 30 seconds or
								longer. If more than 2000 matches are found, the call fails with
								an error. If this kind of error occurs, refine the search by
								passing in more keywords and/or by using DomainName to restrict
								the search to certain domains (such as DVDs).
								If you are searching for a particular book, DVD, CD, or video game
								and you already know its ISBN or EAN (for a book) or UPC,
								consider using ProductID instead to retrieve more
								precise results. &lt;br&gt;
								&lt;br&gt;
								The request requires either QueryKeywords or
								ProductID, but these fields cannot be used together.
								</xs:documentation>
							<xs:appinfo>
								<MaxLength>350</MaxLength>
								<CallInfo>
									<CallName>FindHalfProducts</CallName>
									<RequiredInput>Conditionally</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="SellerID" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The ID of a specific seller.
								Specify this value in combination with ProductID 
								if you want search results to be filtered so that the items returned 
								are only items in a specific product, sold by a specific seller.  
								To specify SellerID, use SellerID and ProductID together.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindHalfProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ProductSort" type="ns:ProductSortCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Sorts the list of products returned. This is mostly only useful
								with QueryKeywords. (When you use ExternalProductID or
								ProductReferenceID, Half.com usually only returns one product.)
							</xs:documentation>
							<xs:appinfo>
							<Default>Popularity</Default>
								<CallInfo>
									<CallName>FindHalfProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="SortOrder" type="ns:SortOrderCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Sorts the list of products returned. 
							</xs:documentation>
							<xs:appinfo>
								<Default>Descending</Default>
								<CallInfo>
									<CallName>FindHalfProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="MaxEntries" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specifies the maximum number of products to return per page
								in a single call. This is mostly only useful
								with QueryKeywords. (When you use ProductID, Half.com usually only
								returns one product, and up to 30 items for that product.)
							</xs:documentation>
							<xs:appinfo>
								<Min>1</Min>
								<Max>20</Max>
								<Default>1</Default>
								<CallInfo>
									<CallName>FindHalfProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specifies which page of data to return in the current call.
								Specify a positive value equal to or lower than the number of
								pages available (which you determine by examining the results of
								your initial request).
							</xs:documentation>
							<xs:appinfo>
								<Min>1</Min>
								<Max>2000</Max>
								<Default>1</Default>
								<CallInfo>
									<CallName>FindHalfProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FindHalfProductsResponse.xsd #####

-->
		<xs:element name="FindHalfProductsResponse" type="ns:FindHalfProductsResponseType"/>
<xs:complexType name="FindHalfProductsResponseType">
		<xs:annotation>
			<xs:documentation>
			Returns stock product information in Half.com catalogs, such as
			information about a particular DVD or book. Optionally,
			also returns items that match the product.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="DomainHistogram" type="ns:DomainHistogramType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								A histogram that lists the number of matching products found
								and the domains in which they were found.
								A &lt;i&gt;domain&lt;/i&gt; is essentially
								a set of categories that share certain common features
								(as determined by Half.com). Each domain has its own name and ID.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindHalfProducts</CallName>
									<Details>IncludeSelector: DomainHistogram</Details>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The number of the page of data returned. If many products
								are found and multiple pages of results are available, use
								this in combination with ApproximatePages and HasMore to decide
								which page to retrieve next. As FindHalfProducts only returns
								up to 2000 products, the maximum possible value is theoretically
								2000 (if you were to set EntriesPerPage to 1 in the request).
							</xs:documentation>
							<xs:appinfo>
								<Min>1</Min>
								<Max>2000</Max>
								<CallInfo>
									<CallName>FindHalfProducts</CallName>
									<Details>IncludeSelector: none, DomainHistogram, Items</Details>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ApproximatePages" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The total number of pages that can be returned, given the same
								query and filters in the request. As FindHalfProducts only returns
								up to 2000 products, the maximum possible value is theoretically
								2000 (if you were to set MaxEntries to 1 in the request).
							</xs:documentation>
							<xs:appinfo>
								<Min>1</Min>
								<Max>2000</Max>
								<CallInfo>
									<CallName>FindHalfProducts</CallName>
									<Details>IncludeSelector: none, DomainHistogram, Items</Details>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="MoreResults" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								If true, more pages of results are available.
								That is, PageNumber is less than ApproximatePages.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindHalfProducts</CallName>
									<Details>IncludeSelector: none, DomainHistogram, Items</Details>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="TotalProducts" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The total number of matching products found.
								(If more than 2000 products are found, the call fails
								with an error.)
							</xs:documentation>
							<xs:appinfo>
								<Min>0</Min>
								<Max>2000</Max>
								<CallInfo>
									<CallName>FindHalfProducts</CallName>
									<Details>IncludeSelector: none, DomainHistogram, Items</Details>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="Products" type="ns:HalfProductsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								An set of Half.com catalog products. This contains stock information about a
								particular DVD, book, or other product.
								When you use QueryKeywords in the request, FindHalfProducts returns a
								maximum of 20 products per page.
								When you use ProductID in the request, FindHalfProducts usually only
								returns 1 product.
								(If more than one product matches the same ProductID,
								FindHalfProducts will return all of those products. As of the time
								of this writing, we expect this to be a rare case.)
							</xs:documentation>
							<xs:appinfo>
								<MaxOccurs>20</MaxOccurs>
								<CallInfo>
									<CallName>FindHalfProducts</CallName>
									<Details>IncludeSelector: none, DomainHistogram, Items</Details>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FindItemsAdvancedRequest.xsd #####

-->
		<xs:element name="FindItemsAdvancedRequest" type="ns:FindItemsAdvancedRequestType"/>
<xs:complexType name="FindItemsAdvancedRequestType">
		<xs:annotation>
			<xs:documentation>
				Searches for items based on a variety of input fields.
				Enables you to specify what item data is returned.
				Returns detailed information about items. 
			</xs:documentation>
			<xs:appinfo>
				<SeeLink>
					<Title>Searching for Items by Using a Query
</Title>
					<URL>http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&amp;topic=SearchingItemsWithQuery</URL>
					<For>related information (applies primarily to the eBay Trading API)</For>
				</SeeLink>
				<SeeLink>
					<Title>Searching for Matching Categories
</Title>
					<URL>http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&amp;topic=SearchingForMatchingCategories</URL>
					<For>information about finding listings in categories (applies primarily to the eBay Trading API)</For>
				</SeeLink>
				<Summary>
					Searches for items based on many possible input fields. Detailed information is returned about items.
				</Summary>
				<RelatedCalls>FindItems, GetSingleItem</RelatedCalls>
				<TempInfo>IncludeSelector</TempInfo>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="IncludeSelector" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Defines standard subsets of fields to return within the
								response.&lt;br&gt;
								&lt;br&gt;
								If you don't specify this field, a default
								set of fields  is returned. Click "Detail Controls" below
								and see "none" for the default fields.
								If you specify this field, then the set of fields returned
								includes the default fields.
								If you specify this field, the additional
								fields returned can affect the call's response time
								(performance), including in the case of feedback data.&lt;br&gt;
								&lt;br&gt;
								&lt;b&gt;Applicable values&lt;/b&gt;:
								&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Details&lt;/p&gt;
									&lt;p class="edef"&gt;Include most available fields in the
									response (except fields that significantly affect the call's
									performance).&lt;/p&gt;
								&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; SearchDetails&lt;/p&gt;
									&lt;p class="edef"&gt;Include additional item information in the
									response. (This can affect the call's performance.)&lt;/p&gt;
								&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; SellerInfo&lt;/p&gt;
									&lt;p class="edef"&gt;Include information about the seller in the
									response. &lt;/p&gt;
								&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; ItemSpecifics&lt;/p&gt;
									&lt;p class="edef"&gt;Include ItemSpecifics in the
									response.&lt;/p&gt;
								&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; ExpansionItemCount&lt;/p&gt;
									&lt;p class="edef"&gt;Include the counts of items that would be returned with expansions.&lt;/p&gt;
								&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; CategoryHistogram&lt;/p&gt;
									&lt;p class="edef"&gt;Include a CategoryHistogram container with 
									information about categories that match your search (up to 2 levels).&lt;/p&gt;
								&lt;br&gt;
								Use a comma to specify multiple values. (In this case,
								the results are cumulative.) See "FindItemAdvanced Samples"
								for an example of how to use this field.&lt;br&gt;
								&lt;br&gt;
								See "Detail Controls" for a complete list of
								fields that can be returned for each selector.
							</xs:documentation>
								<xs:appinfo>
									<PresentDetails>Yes</PresentDetails>
									<SeeLink>
										<Title>Detail Controls</Title>
										<URL>#detailControls</URL>
									</SeeLink>
									<SeeLink>
										<Title>FindItemsAdvanced Samples</Title>
										<URL>#samples</URL>
									</SeeLink>
									<CallInfo>
										<CallName>FindItemsAdvanced</CallName>
										<RequiredInput>No</RequiredInput>
									</CallInfo>
								</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="BidCountMax" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
							  Limits the results to items with a maximum number of bids.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="BidCountMin" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
							    Limits the results to items with a minimum number of bids. 
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="CategoryHistogramMaxParents" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
								Maximum number of matching categories to return at the
								highest level (root level) of the category hierarchy (level 1). 
								If you specify this field along with a category ID, then the response 
								will contain child categories of the category ID you specify
								and subcategories for each child category.
							</xs:documentation>
							<xs:appinfo>
								<Max>10</Max>
								<Default>3</Default>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="CategoryHistogramMaxChildren" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
								Maximum number of matching subcategories to return at each
								level of the category hierarchy below the root level. 
								If you specify this field along with a category ID, then the response 
								will contain child categories of the category ID you specify
								and subcategories for each child category.								
							</xs:documentation>
							<xs:appinfo>
								<Max>10</Max>
								<Default>3</Default>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="QueryKeywords" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
									A query that specifies a string for searching titles of items on eBay.
									If you are using a URL, then to search for multiple words,
									use "%20". For example, use Harry%20Potter to search for items
									containing those words in any order.
									You can incorporate wildcards into a multi-word search, as in the following: ap*%20ip*.
									The words "and" and "or" are treated like any other word. Only use "and",
									"or", or "the" if you are searching for listings containing these words.
									FindItemsAdvanced requires that you specify
									at least one of the following:
									QueryKeywords, CategoryID, ProductID, or SellerID.
							</xs:documentation>
							<xs:appinfo>
								<Min>3</Min>
								<MaxLength>350 (characters)</MaxLength>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>Conditionally</RequiredInput>
								</CallInfo>
								<SeeLink>
									<Title>Searching by Keywords
</Title>
									<URL>http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&amp;topic=SearchingByKeywords</URL>
									<For>related information (applies primarily to the eBay Trading API)</For>
								</SeeLink>
								<SeeLink>
									<Title>string</Title>
									<URL>types/simpleTypes.html#string</URL>
								</SeeLink>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="CategoryID" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specify CategoryID to restrict your query to a
								specific category. CategoryID cannot be used with
								the following input fields: EndTimeFrom, EndTimeTo, 
								PriceMin, or PriceMax.
								&lt;br&gt;
								&lt;br&gt;
								If the specified category ID doesn't match an existing category
								for the site, an invalid-category error message is returned.
								To determine valid categories:&lt;br&gt;
								Use the CategoryHistogram value in the IncludeSelector field 
								to retrieve matching categories. Then make another
								FindItemsAdvanced call with the ID of a matching category.
								&lt;br&gt;
								&lt;br&gt;
								FindItemsAdvanced requires that you specify
								at least one of the following:
								QueryKeywords, CategoryID, ProductID, or SellerID.
								CategoryID can be used in combination with QueryKeywords.
								If you pass CategoryID without QueryKeywords, CategoryID must be 
								a leaf category ID. That is, it cannot be a
								root-level ID.
							</xs:documentation>
							<xs:appinfo>
								<MaxLength>10</MaxLength>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>Conditionally</RequiredInput>
								</CallInfo>
								<SeeLink>
									<Title>Searching by Category ID
</Title>
									<URL>http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&amp;topic=SearchingByCategoryID</URL>
									<For>related information (applies primarily to the eBay Trading API)</For>
								</SeeLink>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ItemSort" type="ns:SimpleItemSortCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
									Sorts search results based on the value you specify.
									See the SortOrder field for values for specifying 
									that results are returned in ascending or
									descending order. (By default, results are returned in descending order.)
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<Default>EndTime</Default>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="SortOrder" type="ns:SortOrderCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
									Sorts search results in ascending or descending order, in conjunction with the value you specify in ItemSort. The default is descending order. For example, if you specify an ItemSort value of BestMatch,
									the most relevant items will be returned first, because the default SortOrder value is Descending.
									If you specify an ItemSort value of EndTime (to sort items by end time), and
									a SortOrder value of Ascending, then items ending in less time (from the time of the call) are returned before items ending in more time. 
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<Default>Descending</Default>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="GroupMaxEntries" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								GroupMaxEntries is used when you specify that BestMatch search results are
								grouped by category (by using BestMatchCategoryGroup in the ItemSort
								field.) In GroupMaxEntries, you specify the maximum number of entries per
								group that you want in the search results. There is not a direct
								correlation between the number of items returned in a regular sort (or in
								a BestMatch sort) and the number of items that are returned when you
								specify BestMatchCategoryGroup in the ItemSort field. When you specify
								BestMatchCategoryGroup in the ItemSort field, not more than 2 pages of
								results are returned. When you specify GroupMaxEntries, specify GroupsMax.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="GroupsMax" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								GroupsMax is used when you specify that BestMatch search results are
								grouped by category (by using BestMatchCategoryGroup in the ItemSort
								field.) In GroupsMax, you specify the maximum number of groups that you
								want in the search results. There is not a direct correlation between the
								number of items returned in a regular sort (or in a BestMatch sort) and
								the number of items that are returned when you specify
								BestMatchCategoryGroup in the ItemSort field. When you specify
								BestMatchCategoryGroup in the ItemSort field, not more than 2 pages of
								results are returned. When you specify GroupsMax, specify GroupMaxEntries.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTimeFrom" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Limits the results to items ending within a time range. EndTimeFrom
								specifies the beginning of the time range. Specify a time in the future.
								If you specify a time in the past, the current time is used. If specified,
								EndTimeTo must also be specified (with a value equal to or later than
								EndTimeFrom). Specify the time in GMT. Cannot be used with the ModTimeFrom
								filter.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>Conditionally</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTimeTo" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Limits the results to items ending within a time range. EndTimeTo specifies
								the end of the time range. If specified, EndTimeFrom must also be specified
								(with a value equal to or earlier than EndTimeTo). Specify the time in GMT.
								Cannot be used with the ModTimeFrom filter.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>Conditionally</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ModTimeFrom" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Limits the results to active items whose status has changed
								since the specified time. Specify a time in the past.
								Time must be in GMT. Cannot be used with the EndTime filters.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="SellerID" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								The ID of a specific seller.
								Specify this value if you want search results to be filtered so that
								the items returned are only items sold by a specific seller or by specific sellers.  
								SellerID is an unbounded field.
								If you are using a URL, and you want to specify multiple values,
								use a comma.
								For example, to specify FavSellerBlue and FavSellerGreen,
								specify SellerID=FavSellerBlue,FavSellerGreen.
								FindItemsAdvanced requires that you specify
								at least one of the following: QueryKeywords, CategoryID, ProductID, or SellerID.
								If you want Store Inventory format (StoresFixedPrice) items to be returned, you must also specify the AllItemTypes value in the ItemType field.
								The value you specify in SellerID is ignored if it is invalid.
								You can specify a maximum of 100 sellers.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="SellerIDExclude" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Specify this value if you want search results to be filtered so that
								the items returned do not include items sold by a specific seller or by specific sellers.
								The SellerIDExclude input field need not be used if you specified the SellerID input field.
								SellerIDExclude is an unbounded field.
								If you are using a URL, and you want to specify multiple values,
								use a comma. 
								For example, if you want to specify FavSellerBlue and FavSellerGreen,
								specify SellerIDExclude=FavSellerBlue,FavSellerGreen.
								You can specify a maximum of 100 sellers.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ItemType" type="ns:ItemTypeCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Filters items based on criteria related to the listing type of items.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="MaxDistance" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
									The maximum distance from the item-location value you specify in PostalCode.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PostalCode" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
									The postal code where an item is located.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ProductID" type="ns:ProductIDType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								You can use this input field to search by ISBN, UPC, 
								EAN, or eBay Product Reference ID, as in the following examples. 
								To search using an ISBN, specify
								ProductID.Type=ISBN and set
								ProductID.Value to an ISBN value. 
								To search using an eBay Product Reference ID, specify
								ProductID.Type=Reference and set
								ProductID.Value to an eBay Product Reference ID value. 
								If you do not know the eBay Product Reference ID
								of a product, use FindProducts
								to retrieve the desired eBay Product Reference ID. 
								FindItemsAdvanced requires that you specify
								at least one of the following:
								QueryKeywords, CategoryID, ProductID, or SellerID.
								If you use the ProductID field, do not use
								QueryKeywords, CategoryID, or SellerID.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="MaxEntries" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specifies the maximum number of entries to return in a single call. If
								the number of available items is less than the value you specify, the
								lower number is returned. If you want the response to contain only the
								total number of items matching the query, specify a MaxEntries value of
								0.
							</xs:documentation>
							<xs:appinfo>
								<Default>20</Default>
								<Max>100</Max>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specifies the number of the page of data to return in the current call.
								Specify a	positive value equal to or lower than the number of pages available
								(which you determine by examining the results of your initial request).
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<Default>1</Default>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PriceMax" type="ns:AmountType" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
							    Specifies the maximum current price an item can have to be included in
							    the response.
							    Specified as in the following URL snippet: PriceMax.Value=500.
							    Optionally, you can also specify a currency ID, e.g., as part of a URL, PriceMax.currencyID=EUR.
							    Use PriceMax to specify a maximum price or use 
							    PriceMax with PriceMin to specify a price range.							    
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PriceMin" type="ns:AmountType" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
							    Specifies the minimum current price an item listing can have to be included in
							    the searches result set. Use alone to specify a minimum price or with MaxPrice
							    to define a range the items' prices must be.
							    Specified as in the following URL snippet: PriceMin.Value=400.
							    Optionally, you can also specify a currency ID, e.g., as part of a URL, PriceMin.currencyID=EUR.
							</xs:documentation>
								<xs:appinfo>
									<CallInfo>
										<CallName>FindItemsAdvanced</CallName>
										<RequiredInput>No</RequiredInput>
									</CallInfo>
								</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="Condition" type="ns:ItemConditionCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Limits the results to new or used items, plus items that have no
								condition specified.&lt;br&gt;
								&lt;br&gt;
								Matches the new or used condition that the seller specified
								in the Item Specifics section of the listing.
								(That is, this won't specifically match on items where the seller
								only put the word "New" in the listing's title.)&lt;br&gt;
								&lt;br&gt;
								Only applicable to the following sites: 
								United Kingdom (UK, site ID 3), Australia (AU, site ID 15),
								Germany (DE, site ID 77), and India (IN, site ID 203).
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="CharityID" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Limits results to items that support the specified
								nonprofit charity organization.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="SearchFlag" type="ns:SearchFlagCodeType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Search for charity listings, items with free shipping, and other features.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PaymentMethod" type="ns:PaymentMethodSearchCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Limits results to items that accept a specific payment method or methods.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="StoreName" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
							    The name of the eBay Store in which the item is listed (case sensitive).
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="StoreSearch" type="ns:StoreSearchCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
							    Specifies the type of store search used for filtering results.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="SellerBusinessType" type="ns:SellerBusinessCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Limits the results to those of a particular seller business type such as
								commercial or private.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="Quantity" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
							  Limits the results to listings that offer a certain number of items
								matching the query. The Quantity field is used with QuantityOperator to
								specify that you are seeking listings with quantities greater than, equal
								to, or less than the value you specify in Quantity.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="QuantityOperator" type="ns:QuantityOperatorCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
							  Limits the results to listings with quantities greater than, equal to, or
								less than the value you specify in Quantity. 
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="Currency" type="ns:CurrencyCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Limits the result set to just those items with a specified currency.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ItemsAvailableTo" type="ns:CountryCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
								Limits the result set to just those items available to the specified country.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ItemsLocatedIn" type="ns:CountryCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
								Limits the result set to just those items located in the specified country.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PreferredLocation" type="ns:PreferredLocationCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specifies the criteria for filtering search results by site, where site is 
								determined by the site ID in the request. 
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FindItemsAdvancedResponse.xsd #####

-->
		<xs:element name="FindItemsAdvancedResponse" type="ns:FindItemsAdvancedResponseType"/>
<xs:complexType name="FindItemsAdvancedResponseType">
		<xs:annotation>
			<xs:documentation>
				Contains the item listings matching your search criteria. 
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="SearchResult" type="ns:SearchResultType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Contains the returned item listings, if any. The data for each listing is
								returned in an Item container.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<Details>IncludeSelector: none, Details, SearchDetails, ItemSpecifics, SellerInfo, ExpansionItemCount, CategoryHistogram</Details>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Indicates the page of data returned by the current call. For instance,
								for the first set of items can be returned, this field has a value of
								1.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<Details>IncludeSelector: none, Details, SearchDetails, ItemSpecifics, SellerInfo, ExpansionItemCount, CategoryHistogram</Details>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="TotalPages" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Indicates the total number of pages of data
								that could be returned by repeated requests. Returned with a
								value of 0 if no pages are available.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<Details>IncludeSelector: none, Details, SearchDetails, ItemSpecifics, SellerInfo, ExpansionItemCount, CategoryHistogram</Details>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="TotalItems" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Indicates the total number of items that
								could be returned by repeated requests. Returned with a
								value of 0 if no items match your search request.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<Details>IncludeSelector: none, Details, SearchDetails, ItemSpecifics, SellerInfo, ExpansionItemCount, CategoryHistogram</Details>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="CategoryHistogram" type="ns:CategoryArrayType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Statistical (histogram) information about categories that contain items that match
								the query, if any. For categories
								associated with specific items, see items returned in each search
								result. Shows the distribution of items across each category.
								Not returned if there is no match. 
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<Details>IncludeSelector: CategoryHistogram</Details>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="TotalStoresExpansionItems" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
							    Total item count for a store expansion of the search.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<Details>IncludeSelector: ExpansionItemCount</Details>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="TotalInternationalExpansionItems" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation> 
							    Total item count for an international expansion of the search.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<Details>IncludeSelector: ExpansionItemCount</Details>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ItemSearchURL" type="xs:anyURI" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								A URL for search results that corresponds to your search request.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItemsAdvanced</CallName>
									<Details>IncludeSelector: none, Details, SearchDetails, ItemSpecifics, SellerInfo, ExpansionItemCount, CategoryHistogram</Details>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FindItemsRequest.xsd #####

-->
		<xs:element name="FindItemsRequest" type="ns:FindItemsRequestType"/>
<xs:complexType name="FindItemsRequestType">
		<xs:annotation>
			<xs:documentation>
				Searches for items based a query or seller ID.
				If you use keywords, this call returns items that contain the keywords in the title.
				A maximum of 50 items is returned.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Searches for items based on a query or a seller ID.
					If you use keywords, this call returns items that contain the keywords in the title.
					A maximum of 50 items is returned.
				</Summary>
				<RelatedCalls>FindItemsAdvanced, GetSingleItem, GetItemStatus, GetShippingCosts</RelatedCalls>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="QueryKeywords" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								A query that specifies a string for searching titles of items on eBay.
								If you are using a URL, then to search for multiple words,
								use "%20". For example, use Harry%20Potter to search for items
								containing those words in any order.
								You can incorporate wildcards into a multi-word search, as in the following: ap*%20ip*.
								The words "and" and "or" are treated like any other word. Only use "and",
								"or", or "the" if you are searching for listings containing these words.
								FindItems requires that you specify either QueryKeywords, SellerID, or both.
							</xs:documentation>
							<xs:appinfo>
								<MaxLength>350 (characters)</MaxLength>
								<CallInfo>
									<CallName>FindItems</CallName>
									<RequiredInput>Conditionally</RequiredInput>
								</CallInfo>
								<SeeLink>
									<Title>string</Title>
									<URL>types/simpleTypes.html#string</URL>
								</SeeLink>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ItemSort" type="ns:SimpleItemSortCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Sorts search results based on the value you specify.
								See the SortOrder field for values for specifying
								that results are returned in ascending or
								descending order. (By default, results are returned in descending order.)
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<Default>EndTime</Default>
									<CallName>FindItems</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="SortOrder" type="ns:SortOrderCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Sorts search results in ascending or descending order, in conjunction with the value you specify in ItemSort. The default is descending order. For example, if you specify an ItemSort value of BestMatch,
								the most relevant items will be returned first, because the default SortOrder value is Descending.
								If you specify an ItemSort value of EndTime (to sort items by end time), and
								a SortOrder value of Ascending, then items ending in less time (from the time of the call) are returned before items ending in more time.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<Default>Descending</Default>
									<CallName>FindItems</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="MaxEntries" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specifies the maximum number of entries to return in a single call. If the number of entries that can be returned is less than the value you specify, the lower number is returned.
							</xs:documentation>
							<xs:appinfo>
								<Max>50</Max>
								<CallInfo>
									<Default>3</Default>
									<CallName>FindItems</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PostalCode" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specifies the postal code where the buyer is located.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItems</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="SellerID" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								The ID of a specific seller.
								Specify this value if you want search results to be filtered so that
								the items returned are only items sold by a specific seller or by specific sellers.
								SellerID is an unbounded field.
								If you are using a URL, and you want to specify multiple values,
								use a comma.
								For example, to specify FavSellerBlue and FavSellerGreen,
								specify SellerID=FavSellerBlue,FavSellerGreen.
								The value you specify in SellerID is ignored if it is invalid.
								You can specify a maximum of 100 sellers.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItems</CallName>
									<RequiredInput>Conditionally</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="SellerIDExclude" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Specify this value if you want search results to be filtered so that
								the items returned do not include items sold by a specific seller or by specific sellers.
								The SellerIDExclude input field need not be used if you specified the SellerID input field.
								SellerIDExclude is an unbounded field.
								If you are using a URL, and you want to specify multiple values,
								use a comma.
								For example, if you want to specify FavSellerBlue and FavSellerGreen,
								specify SellerIDExclude=FavSellerBlue,FavSellerGreen.
								You can specify a maximum of 100 sellers.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindItems</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FindItemsResponse.xsd #####

-->
		<xs:element name="FindItemsResponse" type="ns:FindItemsResponseType"/>
<xs:complexType name="FindItemsResponseType">
		<xs:complexContent>
				<xs:extension base="ns:AbstractResponseType">
					<xs:sequence>
						<xs:element name="Item" type="ns:SimpleItemType" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>
									Contains summary data for an item listing.
								</xs:documentation>
								<xs:appinfo>
									<CallInfo>
										<CallName>FindItems</CallName>
										<Returned>Conditionally</Returned>
									</CallInfo>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="TotalItems" type="xs:int" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Indicates the total number of items on eBay that match the query.
								</xs:documentation>
								<xs:appinfo>
									<CallInfo>
										<CallName>FindItems</CallName>
										<Returned>Always</Returned>
									</CallInfo>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="ItemSearchURL" type="xs:anyURI" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									A URL equivalent to your FindItems search query.
									FindItems returns a maximum of 50 items, so you can use the value in ItemSearchURL 
									to provide users with a link for viewing more items.
								</xs:documentation>
								<xs:appinfo>
									<CallInfo>
										<CallName>FindItems</CallName>
										<Returned>Conditionally</Returned>
									</CallInfo>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FindPopularItemsRequest.xsd #####

-->
		<xs:element name="FindPopularItemsRequest" type="ns:FindPopularItemsRequestType"/>
<xs:complexType name="FindPopularItemsRequestType">
		<xs:annotation>
			<xs:documentation>
				Find popular items
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Searches for popular items based on a category or keyword.  
					Returns WatchCount in addition to item information.
				</Summary>
				<RelatedCalls>
					FindPopularSearches
				</RelatedCalls>
			</xs:appinfo>			
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="CategoryID" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Specify CategoryID to restrict your query to a specific category.
								Up to 10 categories may be specified.
								If you are using a URL, and you want to specify
								more than one CategoryID, separate the values with a comma.
								For example, to specify Fiction Books and 
								Children's Books, specify CategoryID=377,279.
								&lt;br&gt;
								&lt;br&gt;
								If the specified category ID doesn't match an existing category
								for the site, an invalid-category error message is returned.
								To determine valid categories:&lt;br&gt;
								Use the FindItemsAdvanced CategoryHistogram value in the IncludeSelector field 
								to retrieve matching categories. Then make another
								FindItemsAdvanced call with the ID of a matching category.
								&lt;br&gt;
								&lt;br&gt;
								CategoryID can be used in combination with QueryKeywords and CategoryIDExclude.
								To retrieve the most popular items across all categorys, do not submit a CategoryID.
								</xs:documentation>
							<xs:appinfo>
								<MaxLength>10</MaxLength>
								<CallInfo>
									<CallName>FindPopularItems</CallName>
									<RequiredInput>Conditionally</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="QueryKeywords" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								A query that specifies a string for searching titles of items on eBay.
								If you are using a URL, then to search for multiple words,
								use "%20". For example, use Harry%20Potter to search for items
								containing those words in any order.
								You can incorporate wildcards into a multi-word search, as in the following: ap*%20ip*.
								The words "and" and "or" are treated like any other word. Only use "and",
								"or", or "the" if you are searching for listings containing these words.
								QueryKeywords can be used in combination with CategoryID and CategoryIDExclude.
							</xs:documentation>
							<xs:appinfo>
								<Min>3</Min>
								<MaxLength>350 (characters)</MaxLength>
								<CallInfo>
									<CallName>FindPopularItems</CallName>
									<RequiredInput>Conditionally</RequiredInput>
								</CallInfo>
								<SeeLink>
									<Title>Searching by Keywords
</Title>
									<URL>http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&amp;topic=SearchingByKeywords</URL>
								</SeeLink>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="CategoryIDExclude" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Specify this value if you want search results to be filtered so that the popular 
								items returned do not include items that belong to a specific category. 
								&lt;br&gt;
								&lt;br&gt;
								CategoryIDExclude is an unbounded field.
								If you are using a URL, you can separate multiple values with a comma.
								For example, if you want to specify 
								Records and SuperAudio CDs, specify 
								CategoryIDExclude=306,46354.  
								&lt;br&gt;
								&lt;br&gt;
								If you use CategoryIDExclude, it must be used in with QueryKeywords or CategoryID.
								The CategoryIDExclude input field need not be used if you specified the 
								CategoryID input field.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindPopularItems</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FindPopularItemsResponse.xsd #####

-->
		<xs:element name="FindPopularItemsResponse" type="ns:FindPopularItemsResponseType"/>
<xs:complexType name="FindPopularItemsResponseType">
		<xs:annotation>
			<xs:documentation>
				Popular items, detail level is default for simple item type. addition with WatchCount.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="ItemArray" type="ns:SimpleItemArrayType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								A list of active items that were listed with the requested product.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindPopularItems</CallName>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FindPopularSearchesRequest.xsd #####

-->
		<xs:element name="FindPopularSearchesRequest" type="ns:FindPopularSearchesRequestType"/>
<xs:complexType name="FindPopularSearchesRequestType">
		<xs:annotation>
			<xs:documentation>
				Retrieves the words more frequently used by eBay users when searching for listings. 
				These keywords are generated weekly by eBay. Thus, calls retrieve static data. 
				FindPopularSearches is not available for the following sites: FR, HK, MY, PH, PL, SG, SE.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Finds the words more frequently used by eBay users when searching for listings.  
					If you use keywords, this call returns available alternative keywords in addition to
					popular related keywords.
				</Summary>
				<RelatedCalls>
					FindPopularItems
				</RelatedCalls>
			</xs:appinfo>			
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="CategoryID" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Specify CategoryID to restrict your query to a specific category.
								Up to 10 categories may be specified
								If you are using a URL, and you want to specify
								multiple values, use a comma.
								For example, if you want to specify Fiction Books and 
								Children's Books, specify CategoryID=377,279.
								&lt;br&gt;
								&lt;br&gt;
								If the specified category ID doesn't match an existing category
								for the site, an invalid-category error message is returned.
								To determine valid categories:&lt;br&gt;
								Use the FindItemsAdvanced CategoryHistogram value in the IncludeSelector field 
								to retrieve matching categories. Then make another
								FindItemsAdvanced call with the ID of a matching category.
								&lt;br&gt;
								&lt;br&gt;
								CategoryID can be used in combination with QueryKeywords and IncludeChildCategories.
								When IncludeChildCategories is true and used in conjunction with CategoryID, 
								one and only one CategoryID is allowed. Otherwise, up
								to 10 CategoryIDs are allowed.
								To retrieve the most popular keywords for a root category, set one of
								the CategoryIDs to -1 or do not include CategoryID in the Request.
							</xs:documentation>
							<xs:appinfo>
								<MaxLength>10</MaxLength>
								<CallInfo>
									<CallName>FindPopularSearches</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="QueryKeywords" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								A query that specifies a string for searching titles of items on eBay.
								If you are using a URL, then to search for multiple words,
								use "%20". For example, use Harry%20Potter to search for items
								containing those words in any order.
								You can incorporate wildcards into a multi-word search, as in the following: ap*%20ip*.
								The words "and" and "or" are treated like any other word. Only use "and",
								"or", or "the" if you are searching for listings containing these words.
								&lt;br&gt;
								&lt;br&gt;
								QueryKeywords can be used in combination with CategoryID and IncludeChildCategories.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindPopularSearches</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="MaxKeywords" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The maximum number of keywords to be retrieved per category
								for this call.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindPopularSearches</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
								<Min>1</Min>
								<Max>1000</Max>
								<Default>20</Default>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="MaxResultsPerPage" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specifies the maximum number of PopularSearchResults per page in 
								the returned list. If not specified, the default returns 20 results per page. 
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindPopularSearches</CallName>
									<Default>20</Default>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specifies the number of the page of data to return in the current call. 
								Specify a positive value equal to or lower than the number of pages 
								available (which you determine by examining the results of your initial request).
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindPopularSearches</CallName>
									<Default>1</Default>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="IncludeChildCategories" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								If true, only one CategoryID can be specified, and keywords
								are returned for that category and its subcategories.
								When IncludeChildCategories is true and used in conjunction with 
								CategoryID, one and only one CategoryID is allowed.
								&lt;br&gt;
								&lt;br&gt;
								If false, keywords are returned only for the categories
								identified by CategoryID. The default is false.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindPopularSearches</CallName>
									<Default>false</Default>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FindPopularSearchesResponse.xsd #####

-->
		<xs:element name="FindPopularSearchesResponse" type="ns:FindPopularSearchesResponseType"/>
<xs:complexType name="FindPopularSearchesResponseType">
		<xs:annotation>
			<xs:documentation>
				Contains the keyword data for the requested categories. A category's data are contained in a CategoryArrayType object if there is no error (one or more CategoryType objects). Each CategoryType contains its ID, parent ID and keyword list.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="PopularSearchResult" type="ns:PopularSearchesType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Organization of keywords by category. For each
								category, its ID and its parent's ID and keywords
								are listed.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindPopularSearches</CallName>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Indicates the page of data returned by the current call. For instance,
								for the first set of items can be returned, this field has a value of
								one.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindPopularSearches</CallName>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="TotalPages" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Indicates the total number of pages of data
								that could be returned by repeated requests. Returned with a
								value of 0 if no pages are available.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindPopularSearches</CallName>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FindProductsRequest.xsd #####

-->
		<xs:element name="FindProductsRequest" type="ns:FindProductsRequestType"/>
<xs:complexType name="FindProductsRequestType">
		<xs:annotation>
			<xs:documentation>

			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Searches for stock product information (stock description
					and Item Specifics), such as information about a particular
					kind of DVD or camera. Also, retrieves up to 200 eBay listings associated
					with a product.
				</Summary>
				<RelatedCalls>
					FindItemsAdvanced
				</RelatedCalls>
				<TempInfo>IncludeSelector</TempInfo>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="IncludeSelector" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
									Defines standard subsets of fields to return within the
									response.&lt;br&gt;
									&lt;br&gt;
									If you don't specify this field, the call returns a default
									set of fields, focusing on product details only
									(see the "Detail Controls" link below). If you specify this
									field, the additional fields you retrieve can affect the call's
									response time (performance).&lt;br&gt;
									&lt;br&gt;
									&lt;b&gt;Applicable values&lt;/b&gt;:
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Details&lt;/p&gt;
										&lt;p class="edef"&gt;Include all available item fields
										in the response. Only applicable when you are searching by
										ProductID. Not applicable with QueryKeywords.&lt;/p&gt;
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; DomainHistogram&lt;/p&gt;
										&lt;p class="edef"&gt;Include the DomainHistogram in
										the response. The histogram lists the number of matching
										products found and the domains in which they were found.
										(A domain is like a high-level category.)
										When many matching products are found, you may see
										significantly slower response times when you include
										the histogram.&lt;/p&gt;
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Items&lt;/p&gt;
										&lt;p class="edef"&gt;Include a brief set of item fields
										in the response.
										Only applicable when you are searching by ProductID.
										Not applicable with QueryKeywords.&lt;/p&gt;
									&lt;br&gt;
									&lt;br&gt;
									Use a comma to specify multiple values. (In this case,
									the results are cumulative.) See "FindProducts Samples"
									for an example of how to use this field.&lt;br&gt;
									&lt;br&gt;
									See "Detail Controls" for a complete list of
									fields that can be returned for each selector.
							</xs:documentation>
							<xs:appinfo>
								<MaxLength/>
								<PresentDetails>Yes</PresentDetails>
								<CallInfo>
									<CallName>FindProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="AvailableItemsOnly" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								If true, only retrieve data for products that have been used to
								pre-fill active listings on the specified eBay site.
								If false, retrieve all products that match the query.
								This is useful when you use QueryKeywords and you only want to
								find products that have associated items (that is, where ItemArray
								would not beempty).&lt;br&gt;
								&lt;br&gt;
								This does not retrieve ItemArray; this only controls which
								products are returned (or counted). To retrieve ItemArray,
								pass Items in IncludeSelector.
							</xs:documentation>
							<xs:appinfo>
								<Default>false</Default>
								<CallInfo>
									<CallName>FindProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="DomainName" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								A domain to search in. This is like searching a section of
								a catalog. If not specified, the product search is conducted
								across all domains.
								DomainName is an unbounded field. If you are using a URL, and you want
								to specify multiple values, use an index value (not a comma).
								For example, to specify DomainName=Textbooks,Education, 
								specify DomainName(0)=Textbooks,%20Education.								
								To determine valid domain names,
								first use this call with QueryKeywords. Domain names are returned
								for each product (and summarized in the domain histogram, if you
								specify DomainHistogram in IncludeSelector).&lt;br&gt;
								&lt;br&gt;
								A domain is a named grouping of categories whose items share
								common product characteristics. For example, all bound books
								have a binding or format (e.g., Hardcover), but audiobooks don't.
								So audiobooks would have their own domain.
								To limit your search to audiobooks, you would specify Audiobooks
								as the domain.&lt;br&gt;
								&lt;br&gt;
								Only useful when QueryKeywords is specified. If you use this with
								ProductID, AND logic is applied. In this case, if you specify an
								ID that doesn't match the domain (as eBay has defined it),
								no matching product will be found. Therefore, we recommend that you only use DomainName with QueryKeywords.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ProductID" type="ns:ProductIDType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Use this to retrieve product details for one specific product.
								Specify the ID as a string, and use the type attribute to
								indicate the nature of the ID you are specifying.
								&lt;br&gt;
								&lt;br&gt;
								The request requires either QueryKeywords or
								ProductID, but these fields cannot be used together.
							</xs:documentation>
							<xs:appinfo>
								<MaxLength>4000</MaxLength>
								<CallInfo>
									<CallName>FindProducts</CallName>
									<RequiredInput>Conditionally</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="QueryKeywords" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								One or more keywords to search for. When you use a keyword search,
								eBay searches the product catalogs  for matching words in the
								product title, description, and/or Item Specifics, and it returns
								a list of matching products, with no items. To retrieve
								items, use ProductID instead. (If you don't already have a
								product ID, you can get product IDs from the
								response after conducting a keyword search.)&lt;br&gt;
								&lt;br&gt;
								If specified, you must pass in at least 3 alphanumeric characters.&lt;br&gt;
								&lt;br&gt;
								The words "and" and "or" are treated like any other word.
								Only use "and", "or", or "the" if you are searching for products
								containing these words.
								To use AND or OR logic, use eBay's standard search string
								modifiers. Wildcards (+, -, or *) are also supported.
								Be careful when using spaces before or after modifiers and
								wildcards.&lt;br&gt;
								&lt;br&gt;
								Some keyword queries can result in response times of 30 seconds or
								longer. If more than 2000 matches are found, the call fails with
								an error. If this kind of error occurs, refine the search by
								passing in more keywords and/or by using DomainName to restrict
								the search to certain domains (such as DVDs).
								If you are searching for a particular book, DVD, CD, or video game
								and you already know its ISBN or EAN (for a book) or UPC,
								consider using ProductID instead to retrieve more
								precise results. &lt;br&gt;
								&lt;br&gt;
								The request requires either QueryKeywords or
								ProductID, but these fields cannot be used together.
								</xs:documentation>
							<xs:appinfo>
								<MaxLength>350</MaxLength>
								<CallInfo>
									<CallName>FindProducts</CallName>
									<RequiredInput>Conditionally</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ProductSort" type="ns:ProductSortCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Sorts the list of products returned. This is mostly only useful
								with QueryKeywords. (When you use ProductID, eBay usually only
								returns one product.)
								Also see SortOrder. If PorductSort and SortOrder are not
								specified, products are sorted by popularity in descending order.
							</xs:documentation>
							<xs:appinfo>
								<Default>Popularity</Default>
								<CallInfo>
									<CallName>FindProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="SortOrder" type="ns:SortOrderCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Sorts search results in ascending or descending order.
								Only applicable with ProductSort. If you specify ProductSort
								without SortOrder, the order defaults to Descending for
								all criteria except Title (which defaults to Ascending).
							</xs:documentation>
							<xs:appinfo>
								<Default>Descending</Default>
								<CallInfo>
									<CallName>FindProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="MaxEntries" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specifies the maximum number of products to return per page
								in a single call. This is mostly only useful
								with QueryKeywords. (When you use ProductID, eBay usually only
								returns one product, and up to 200 items for that product.)
							</xs:documentation>
							<xs:appinfo>
								<Min>1</Min>
								<Max>20</Max>
								<Default>1</Default>
								<CallInfo>
									<CallName>FindProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specifies which page of data to return in the current call.
								Specify a positive value equal to or lower than the number of
								pages available (which you determine by examining the results of
								your initial request).
							</xs:documentation>
							<xs:appinfo>
								<Min>1</Min>
								<Max>2000</Max>
								<Default>1</Default>
								<CallInfo>
									<CallName>FindProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FindProductsResponse.xsd #####

-->
		<xs:element name="FindProductsResponse" type="ns:FindProductsResponseType"/>
<xs:complexType name="FindProductsResponseType">
		<xs:annotation>
			<xs:documentation>
			Returns stock product information in eBay catalogs, such as
			information about a particular DVD or camera. Optionally,
			also returns items that match the product.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="ApproximatePages" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The total number of pages that can be returned, given the same
								query and filters in the request. As FindProducts only returns
								up to 2000 products, the maximum possible value is theoretically
								2000 (if you were to set MaxEntries to 1 in the request).
							</xs:documentation>
							<xs:appinfo>
								<Min>1</Min>
								<Max>2000</Max>
								<CallInfo>
									<CallName>FindProducts</CallName>
									<Returned>Always</Returned>
									<Details>IncludeSelector: none, DomainHistogram, Items, Details</Details>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="MoreResults" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								If true, more pages of results are available.
								That is, PageNumber is less than ApproximatePages.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindProducts</CallName>
									<Returned>Always</Returned>
									<Details>IncludeSelector: none, DomainHistogram, Items, Details</Details>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="DomainHistogram" type="ns:DomainHistogramType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								A histogram that lists the number of matching products found
								and the domains in which they were found.
								A &lt;i&gt;domain&lt;/i&gt; describes a set of categories that
								share certain common characteristics (as determined by eBay).
								Each domain has its own name and ID.
								Only returned when you specify DomainHistogram in IncludeSelector.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindProducts</CallName>
									<Returned>Conditionally</Returned>
									<Details>IncludeSelector: DomainHistogram</Details>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ItemArray" type="ns:SimpleItemArrayType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								A list of active items that were listed with the requested
								product. Only returned when you specify Items in IncludeSelector,
								and the product has matching items that are currently active on
								eBay.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindProducts</CallName>
									<Returned>Conditionally</Returned>
									<Details>IncludeSelector: Items, Details</Details>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The number of the page of data returned. If many products
								are found and multiple pages of results are available, use
								this in combination with ApproximatePages and MoreResults
								to decide which page to retrieve next. As FindProducts only
								returns up to 2000 products, the maximum possible value is
								theoretically 2000 (if you were to set MaxEntries to 1 in the
								request).
							</xs:documentation>
							<xs:appinfo>
								<Min>1</Min>
								<Max>2000</Max>
								<CallInfo>
									<CallName>FindProducts</CallName>
									<Returned>Always</Returned>
									<Details>IncludeSelector: none, DomainHistogram, Items, Details</Details>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="Product" type="ns:CatalogProductType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								An eBay catalog product. This contains stock information about a
								particular DVD, camera, set of golf clubs, or other product.
								When you use QueryKeywords in the request, FindProducts returns a
								maximum of 20 products per page.
								When you use ProductID in the request, FindProducts usually only
								returns 1 product.
								(If more than one product matches the same ProductID,
								FindProducts will return all of those products. As of the time
								of this writing, we expect this to be a rare case.)
							</xs:documentation>
							<xs:appinfo>
								<MaxOccurs>20</MaxOccurs>
								<CallInfo>
									<CallName>FindProducts</CallName>
									<Returned>Always</Returned>
									<Details>IncludeSelector: none, DomainHistogram, Items, Details</Details>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="TotalProducts" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The total number of matching products found.
								(If more than 2000 products are found, the call fails
								with an error.)
							</xs:documentation>
							<xs:appinfo>
								<Min>0</Min>
								<Max>2000</Max>
								<CallInfo>
									<CallName>FindProducts</CallName>
									<Returned>Always</Returned>
									<Details>IncludeSelector: none, DomainHistogram, Items, Details</Details>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FindReviewsAndGuidesRequest.xsd #####

-->
		<xs:element name="FindReviewsAndGuidesRequest" type="ns:FindReviewsAndGuidesRequestType"/>
<xs:complexType name="FindReviewsAndGuidesRequestType">
		<xs:annotation>
			<xs:documentation>
				Splitting include reviews and guides from GetProducts.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Searches reviews and guides based on product, category, or user.  The response provides information about
					each user or product's reviews and guides.
				</Summary>
				<RelatedCalls>
					FindItemsAdvanced, FindProducts, GetCategoryInfo
				</RelatedCalls>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="ProductID" type="ns:ProductIDType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Use this to retrieve reviews (not guides) for one specific product.
								Specify the ID as a string, and use the type attribute 
								to indicate the nature of the ID you are specifying. 
								Same as FindProducts, supports Reference, ISBN, UPC, EAN.
								&lt;br&gt;
								&lt;br&gt;
								ProductID can be used in combination with UserID to return Reviews and Guides.
								ProductID and CategoryID cannot be used together.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindReviewsAndGuides</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="UserID" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Retrieves reviews and guides written by the specified user.
								&lt;br&gt;
								&lt;br&gt;
								UserID can be combined with either ProductID or CategoryID but not both (as
								ProductID and CategoryID cannot be used together).
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindReviewsAndGuides</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="CategoryID" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specify a single CategoryID to restrict your query to a specific Guide category.
								&lt;br&gt;
								&lt;br&gt;
								If the specified category ID doesn't match an existing category
								for the site, an invalid-category error message is returned.
								To determine valid categories:&lt;br&gt;
								Use the FindItemsAdvanced CategoryHistogram value in the IncludeSelector field 
								to retrieve matching categories. Then make another
								FindReviewsAndGuides call with the ID of a matching category.
								&lt;br&gt;
								&lt;br&gt;
								CategoryID can be used in combination with UserID to return Reviews and Guides.
								ProductID and CategoryID cannot be used together.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindReviewsAndGuides</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="MaxResultsPerPage" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specifies the maximum number of reviews per page (not guides) in the returned list. If not 
								specified, the default returns 5 results per page.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindReviewsAndGuides</CallName>
									<Default>5</Default>
									<Max>20</Max>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specifies the number of the page of data to return in the current call. 
								Specify a positive value equal to or lower than the number of pages 
								available (which you determine by examining the results of your initial request).
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindReviewsAndGuides</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/FindReviewsAndGuidesResponse.xsd #####

-->
		<xs:element name="FindReviewsAndGuidesResponse" type="ns:FindReviewsAndGuidesResponseType"/>
<xs:complexType name="FindReviewsAndGuidesResponseType">
		<xs:annotation>
			<xs:documentation>
			Find reviews and guides response type.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="ReviewCount" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Number of returned reviews.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindReviewsAndGuides</CallName>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="BuyingGuideCount" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Number of returned buying guides.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindReviewsAndGuides</CallName>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReviewerRank" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Rank of reviewer if using user search.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindReviewsAndGuides</CallName>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="TotalHelpfulnessVotes" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Number of helpfulness votes if using user search.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindReviewsAndGuides</CallName>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ProductID" type="ns:ProductIDType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The eBay or external IDs associated with the product. 
								Use the Reference value as input to search for the same product 
								in the future, or use the ISBN, EAN, or UPC value (if returned).
								The ISBN, EAN, and UPC values can also be useful as keys if your
								application is comparing products across different sites. Always
								returned when Product is returned. 
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindReviewsAndGuides</CallName>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReviewsAndGuidesURL" type="xs:anyURI" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								URL to the reviews and guides page.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindReviewsAndGuides</CallName>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The number of the page of data returned. If many products
								are found and multiple pages of results are available, use
								this in combination with TotalPages to decide
								which page to retrieve next. As FindProducts only returns
								up to 2000 products, the maximum possible value is theoretically
								2000 (if you were to set MaxResultsPerPage to 1 in the request).
							</xs:documentation>
							<xs:appinfo>
								<Min>1</Min>
								<Max>2000</Max>
								<CallInfo>
									<CallName>FindReviewsAndGuides</CallName>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="TotalPages" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Indicates the total number of pages of data
								that could be returned by repeated requests. Returned with a
								value of 0 if no pages are available.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindReviewsAndGuides</CallName>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="BuyingGuideDetails" type="ns:BuyingGuideDetailsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Contains information for up to 5 buying guides that match the
								query. Buying guides provide useful information about shopping
								in a particular domain, like Digital Cameras.
								For example, a digital camera buying guide
								could help a buyer determine what kind of digital camera
								is right for them.
								If no buying guides are associated with the product, this only
								returns a link to the buying guide hub (the main Guides page).
								Count limited by MaxResultsPerPage in request.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindReviewsAndGuides</CallName>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReviewDetails" type="ns:ReviewDetailsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Contains information about review details. Count limited by MaxResultsPerPage in request.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindReviewsAndGuides</CallName>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="PositiveHelpfulnessVotes" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Number of helpfulness votes if using user search.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>FindReviewsAndGuides</CallName>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/GetCategoryInfoRequest.xsd #####

-->
		<xs:element name="GetCategoryInfoRequest" type="ns:GetCategoryInfoRequestType"/>
<xs:complexType name="GetCategoryInfoRequestType">
		<xs:annotation>
			<xs:documentation>
					This call will give you the ability to retrieve high level
					Category information, relevant for a buy-side application.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					This call will give you the ability to retrieve high level
					Category information, relevant for a buy-side application.
				</Summary>
				<RelatedCalls>FindItemsAdvanced</RelatedCalls>
				<TempInfo>IncludeSelector</TempInfo>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
				<xs:extension base="ns:AbstractRequestType">
					<xs:sequence>
						<xs:element name="CategoryID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Use an ID of -1 to retrieve the root category and the top-level (level 1) meta categories. You can determine other CategoryIDs from the response from this call, or from a specific item (retrieved from another call like FindItemsAdvanced or GetSingleItem), or from the eBay website.
								</xs:documentation>
								<xs:appinfo>
									<MaxLength>19 (Note: The eBay database specifies 38. Currently, Category ID's are usually 9 to 12 digits)</MaxLength>
									<CallInfo>
										<CallName>GetCategoryInfo</CallName>
										<RequiredInput>Yes</RequiredInput>
									</CallInfo>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="IncludeSelector" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Defines standard subsets of fields to return within the
									response. If you don't specify this field, the call returns
									a default set of fields. If you specify this field, the 
									additional fields (child categories) you retrieve can affect 
									the call's response time (decrease performance).
								</xs:documentation>
								<xs:appinfo>
									<MaxLength/>
									<PresentDetails>Yes</PresentDetails>
									<SeeLink>
										<Title>Detail Controls</Title>
										<URL>#detailControls</URL>
									</SeeLink>
									<SeeLink>
										<Title>GetCategoryInfo Samples</Title>
										<URL>#samples</URL>
									</SeeLink>
									<CallInfo>
										<CallName>GetCategoryInfo</CallName>
										<RequiredInput>No</RequiredInput>
									</CallInfo>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/GetCategoryInfoResponse.xsd #####

-->
		<xs:element name="GetCategoryInfoResponse" type="ns:GetCategoryInfoResponseType"/>
<xs:complexType name="GetCategoryInfoResponseType">
		<xs:annotation>
			<xs:documentation>
				Contains the category data for the eBay site specified as input. The category
				data is returned as a CategoryArrayType object, that contains zero, one, or
				multiple CategoryType objects. Each CategoryType object contains the detail data
				for one category. Other fields indicate how many categories are returned in a call, when the category hierarchy was last updated, and the version of the category hierarchy (all three of which can differ from one eBay site to the next).
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="CategoryArray" type="ns:CategoryArrayType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								List of the returned categories. The category array contains one CategoryType
								object for each returned category. Returns empty if no detail level is specified.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetCategoryInfo</CallName>
									<Details>IncludeSelector: None, ChildCategories</Details>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="CategoryCount" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Indicates the number of categories returned (i.e., the number of CategoryType
								objects in CategoryArray).
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetCategoryInfo</CallName>
									<Details>IncludeSelector: None, ChildCategories</Details>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="UpdateTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Indicates the last date and time that eBay modified the category hierarchy for the
								specified eBay site.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetCategoryInfo</CallName>
									<Details>IncludeSelector: None, ChildCategories</Details>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="CategoryVersion" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Indicates the version of the category hierarchy on the
								specified eBay site.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetCategoryInfo</CallName>
									<Details>IncludeSelector: None, ChildCategories</Details>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/GetItemStatusRequest.xsd #####

-->
		<xs:element name="GetItemStatusRequest" type="ns:GetItemStatusRequestType"/>
<xs:complexType name="GetItemStatusRequestType">
		<xs:annotation>
			<xs:documentation>
				Contains a single ItemID or an array of ItemIDs.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Allows you to get the status for a group of items. Returns status information such
					as ListingStatus and End Time for all items that are listed in the request.
				</Summary>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="ItemID" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Contains the item ID and description of a listing.
							</xs:documentation>
							<xs:appinfo>
								<MaxLength>19 (Note: The eBay database specifies 38. However, Item IDs are usually 9 to 12 digits)</MaxLength>
								<CallInfo>
									<CallName>GetItemStatus</CallName>
									<RequiredInput>Yes</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/GetItemStatusResponse.xsd #####

-->
		<xs:element name="GetItemStatusResponse" type="ns:GetItemStatusResponseType"/>
<xs:complexType name="GetItemStatusResponseType">
		<xs:annotation>
			<xs:documentation>
			   Returns status information for all items in a list. Some of the Item information 
				 is returned in an SimpleItemArrayType object, that can include zero, one, or multiple ItemType objects.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="Item" type="ns:SimpleItemType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Collection of Item status objects in an SimpleItemArrayType object, that can include zero, one, or multiple ItemType objects.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetItemStatus</CallName>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/GetMultipleItemsRequest.xsd #####

-->
		<xs:element name="GetMultipleItemsRequest" type="ns:GetMultipleItemsRequestType"/>
<xs:complexType name="GetMultipleItemsRequestType">
		<xs:annotation>
			<xs:documentation>
				Retrieves publicly available data for one or more listings. Use this call to retrieve
				much of the information that is visible on a listing's View Item page on the eBay Web
				site, such as title, prices, and basic shipping costs. Provide ItemID for every item for
				which you want information. This call returns the same minimal information that is
				returned by GetSingleItem for each item with no IncludeSelector specified. (Use
				GetShippingCosts to retrieve more detailed shipping cost information for a given item.)
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Retrieves publicly available data for one or more listings.
				</Summary>
				<RelatedCalls>GetSingleItem</RelatedCalls>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="ItemID" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								The item ID that uniquely identifies the item listing
								for which to retrieve the data.
								You can provide a maximum of 10 ItemIDs.
								&lt;br&gt;
								&lt;br&gt;
								You can determine an item's ID by calling FindItems or from the eBay Web
								site. Provide ItemID for every item for which you want information.
							</xs:documentation>
							<xs:appinfo>
								<MaxLength>19 (Note: The eBay database specifies 38. Currently, Item IDs are usually 9 to 12 digits)</MaxLength>
								<SeeLink>
									<Title>(FindItems) Item.ItemID</Title>
									<URL>FindItems.html#Response.Item.ItemID</URL>
								</SeeLink>
								<CallInfo>
									<CallName>GetMultipleItems</CallName>
									<RequiredInput>Yes</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/GetMultipleItemsResponse.xsd #####

-->
		<xs:element name="GetMultipleItemsResponse" type="ns:GetMultipleItemsResponseType"/>
<xs:complexType name="GetMultipleItemsResponseType">
		<xs:annotation>
			<xs:documentation>
				Response to request of GetMultipleItems.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="Item" type="ns:SimpleItemType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Contains details for a listing whose ID was specified in the request.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetMultipleItems</CallName>
									<Returned>Always</Returned>
									<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/GetShippingCostsRequest.xsd #####

-->
		<xs:element name="GetShippingCostsRequest" type="ns:GetShippingCostsRequestType"/>
<xs:complexType name="GetShippingCostsRequestType">
		<xs:annotation>
			<xs:documentation>
				Gets shipping costs for an item. This is one of the ways a buyer or seller
				can obtain shipping cost information for an existing item (for which the caller is
				either the buyer or seller) at any point in the life of of the listing, before or
				after a buyer has committed to purchasing the item(s). This call works for
				both flat rate shipping and calculated shipping. Flat rate shipping costs are
				established by the seller before bidding occurs. Calculated shipping costs
				are calculated by eBay with its shipping partners based on postal code, but note
				that insurance cost can only be determined once the final item price is known
				when the listing ends. To determine whether a listing has ended, use GetSingleItem.
				It is best to call GetShippingCosts only after determining via GetSingleItem 
				or FindItems that the item actually has shipping cost information.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Gets shipping costs for an item.
				</Summary>
				<RelatedCalls>GetSingleItem</RelatedCalls>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="ItemID" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The item ID that uniquely identifies the item listing for which to retrieve the data.
							</xs:documentation>
							<xs:appinfo>
								<MaxLength>19 (Note: The eBay database specifies 38. Currently, Item IDs are usually 9 to 12 digits)</MaxLength>
								<CallInfo>
									<CallName>GetShippingCosts</CallName>
									<RequiredInput>Yes</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="QuantitySold" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Number of items sold to a single buyer and to be shipped together.
							</xs:documentation>
							<xs:appinfo>
							  <Default>1</Default>
								<CallInfo>
									<CallName>GetShippingCosts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="DestinationPostalCode" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Destination country postal code (or zipcode, for US). Ignored if no
								country code is provided. Optional tag for some countries. More likely to
								be required for large countries. Ignored for flat rate shipping.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetShippingCosts</CallName>
									<RequiredInput>Conditionally</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="DestinationCountryCode" type="ns:CountryCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Destination country code. If DestinationCountryCode is US,
								postal code is required and represents US zip code.
							</xs:documentation>
							<xs:appinfo>
								<Default>US</Default>
								<CallInfo>
									<CallName>GetShippingCosts</CallName>
									<RequiredInput>Conditionally</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="IncludeDetails" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Indicates whether to return the ShippingDetails container in the response.
							</xs:documentation>
							<xs:appinfo>
								<Default>false</Default>
								<CallInfo>
									<CallName>GetShippingCosts</CallName>
									<RequiredInput>Conditionally</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/GetShippingCostsResponse.xsd #####

-->
		<xs:element name="GetShippingCostsResponse" type="ns:GetShippingCostsResponseType"/>
<xs:complexType name="GetShippingCostsResponseType">
		<xs:annotation>
			<xs:documentation>
				Response to call of GetShippingCosts.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="ShippingDetails" type="ns:ShippingDetailsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Shipping-related details for the specified item. This container is only
								returned if IncludeDetails is true on input. Any error about shipping services
								(returned by a vendor of eBay's who calculates shipping costs) is returned in
								ShippingRateErrorMessage. Errors from a shipping service are likely to be related to
								issues with shipping specifications, such as package size and the selected shipping
								method not supported by a particular shipping service.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetShippingCosts</CallName>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="ShippingCostSummary" type="ns:ShippingCostSummaryType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Shipping-related details for the specified item. Any error about shipping services
								(returned by a vendor of eBay's who calculates shipping costs) is returned in
								ShippingRateErrorMessage. Errors from a shipping service are likely to be related to
								issues with shipping specifications, such as package size and the selected shipping
								method not supported by a particular shipping service.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetShippingCosts</CallName>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/GetSingleItemRequest.xsd #####

-->
		<xs:element name="GetSingleItemRequest" type="ns:GetSingleItemRequestType"/>
<xs:complexType name="GetSingleItemRequestType">
		<xs:annotation>
			<xs:documentation>
					Retrieves publicly available data for a single listing.
					Use this call to retrieve most of the information that is visible
					on a listing's View Item page on the eBay Web site,
					such as title, description, prices, basic seller and bidder information,
					and other details about the listing.Also returns basic
					shipping costs. For more shipping details, use GetShippingCosts.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Gets publicly visible details about one listing. This gives you most of the
					data that eBay shows on the View Item page (title, description,
					price, and other details).
				</Summary>
				<RelatedCalls>FindItems, GetItemStatus, GetShippingCosts, GetSingleItem</RelatedCalls>
				<TempInfo>IncludeSelector</TempInfo>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
				<xs:extension base="ns:AbstractRequestType">
					<xs:sequence>
						<xs:element name="ItemID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									The item ID that uniquely identifies the item listing
									for which to retrieve the data.&lt;br&gt;
									&lt;br&gt;
									You can determine an item's ID by calling FindItems or
									from the eBay Web site.
								</xs:documentation>
								<xs:appinfo>
									<MaxLength>19 (Note: The eBay database specifies 38. Currently, Item IDs are usually 9 to 12 digits)</MaxLength>
									<SeeLink>
										<Title>(FindItems) Item.ItemID</Title>
										<URL>FindItems.html#Response.Item.ItemID</URL>
									</SeeLink>
									<CallInfo>
										<CallName>GetSingleItem</CallName>
										<RequiredInput>Yes</RequiredInput>
									</CallInfo>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="IncludeSelector" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Defines standard subsets of fields to return within the
									response.&lt;br&gt;
									&lt;br&gt;
									If you don't specify this field, the call returns a default
									set of fields (see the "Detail Controls" link below). If you specify this field, the additional
									fields you retrieve can affect the call's response time
									(performance).&lt;br&gt;
									&lt;br&gt;
									&lt;b&gt;Applicable values&lt;/b&gt;:
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Details&lt;/p&gt;
									  &lt;p class="edef"&gt;Include most available fields in the
									  response (except fields that significantly affect the call's
									  performance).&lt;/p&gt;
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Description&lt;/p&gt;
									  &lt;p class="edef"&gt;Include the Description field in the response. (This can affect the call's performance.)&lt;/p&gt;
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; ShippingCosts&lt;/p&gt;
									  &lt;p class="edef"&gt;Include basic shipping costs in the
									  response. (Use GetShippingCosts to retrieve more
									  details.)&lt;/p&gt;
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; ItemSpecifics&lt;/p&gt;
										&lt;p class="edef"&gt;Include ItemSpecifics in the response.&lt;/p&gt;
									&lt;br&gt;
									&lt;br&gt;
									Use a comma to specify multiple values. (In this case,
									the results are cumulative.) See "GetSingleItem Samples"
									for an example of how to use this field.&lt;br&gt;
									&lt;br&gt;
									See "Detail Controls" for a complete list of
									fields that can be returned for each selector.
								</xs:documentation>
								<xs:appinfo>
									<MaxLength/>
									<PresentDetails>Yes</PresentDetails>
									<SeeLink>
										<Title>Detail Controls</Title>
										<URL>#detailControls</URL>
									</SeeLink>
									<SeeLink>
										<Title>GetSingleItem Samples</Title>
										<URL>#samples</URL>
									</SeeLink>
									<CallInfo>
										<CallName>GetSingleItem</CallName>
										<RequiredInput>No</RequiredInput>
									</CallInfo>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/GetSingleItemResponse.xsd #####

-->
		<xs:element name="GetSingleItemResponse" type="ns:GetSingleItemResponseType"/>
<xs:complexType name="GetSingleItemResponseType">
		<xs:complexContent>
				<xs:extension base="ns:AbstractResponseType">
					<xs:sequence>
						<xs:element name="Item" type="ns:SimpleItemType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Contains details about the listing whose ID was specified in
									the request.
								</xs:documentation>
								<xs:appinfo>
									<CallInfo>
										<CallName>GetSingleItem</CallName>
										<Returned>Always</Returned>
										<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
									</CallInfo>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/GetUserProfileRequest.xsd #####

-->
		<xs:element name="GetUserProfileRequest" type="ns:GetUserProfileRequestType"/>
<xs:complexType name="GetUserProfileRequestType">
		<xs:annotation>
			<xs:documentation>
					Retrieves user information based on the user ID you specify. The response contains detailed information about a user. You can specify the types of user information you want in the response. 
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Retrieves user information based on the user ID you specify. The response contains detailed information about a user. You can specify the types of user information you want in the response.
				</Summary>
				<RelatedCalls>FindItems</RelatedCalls>
				<TempInfo>IncludeSelector</TempInfo>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
				<xs:extension base="ns:AbstractRequestType">
					<xs:sequence>
						<xs:element name="UserID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation> 
										Specifies the user whose data will returned by the call.
								</xs:documentation>
								<xs:appinfo>
									<CallInfo>
										<CallName>GetUserProfile</CallName>
										<RequiredInput>Yes</RequiredInput>
									</CallInfo>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="IncludeSelector" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Defines standard subsets of fields to return within the
									response.&lt;br&gt;
									&lt;br&gt;
									If you don't specify this field, a default
									set of fields  is returned. Click "Detail Controls" below
									and see "none" for the default fields.
									If you specify this field, then the set of fields returned
									includes the default fields.
									If you specify this field, the additional
									fields returned can affect the call's response time
									(performance), including in the case of feedback data.&lt;br&gt;
									&lt;br&gt;
									&lt;b&gt;Applicable values&lt;/b&gt;:
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Details&lt;/p&gt;
										&lt;p class="edef"&gt;Include most available fields (such as StoreURL) in the
										response (except fields that can affect the call's response time).&lt;/p&gt;
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; FeedbackDetails&lt;/p&gt;
										&lt;p class="edef"&gt;Include a container for information about one feedback entry.
										&lt;/p&gt;
									&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; FeedbackHistory&lt;/p&gt;
										&lt;p class="edef"&gt;Include a container for summary feedback data for a user.
										&lt;/p&gt;
										&lt;br&gt;
									Use a comma to specify multiple values. (In this case,
									the results are cumulative.) See "GetUserProfile Samples"
									for an example of how to use this field.&lt;br&gt;
									&lt;br&gt;
									See "Detail Controls" for a complete list of
									fields that can be returned for each selector.
								</xs:documentation>
									<xs:appinfo>
										<PresentDetails>Yes</PresentDetails>
										<SeeLink>
											<Title>Detail Controls</Title>
											<URL>#detailControls</URL>
										</SeeLink>
										<SeeLink>
											<Title>GetUserProfile Samples</Title>
											<URL>#samples</URL>
										</SeeLink>
										<CallInfo>
											<CallName>GetUserProfile</CallName>
											<RequiredInput>No</RequiredInput>
										</CallInfo>
									</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/GetUserProfileResponse.xsd #####

-->
		<xs:element name="GetUserProfileResponse" type="ns:GetUserProfileResponseType"/>
<xs:complexType name="GetUserProfileResponseType">
		<xs:complexContent>
				<xs:extension base="ns:AbstractResponseType">
					<xs:sequence>
						<xs:element name="User" type="ns:SimpleUserType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Contains the returned user data for the specified eBay user.
								</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetUserProfile</CallName>
									<Details>IncludeSelector: none, Details, FeedbackDetails, FeedbackHistory</Details>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="FeedbackHistory" type="ns:FeedbackHistoryType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Summary feedback data for a user. Contains counts of positive, neutral,
									and negative feedback for predefined time periods.
								</xs:documentation>
								<xs:appinfo>
									<CallInfo>
										<CallName>GetUserProfile</CallName>
										<Details>IncludeSelector: FeedbackHistory</Details>										
										<Returned>Always</Returned>
									</CallInfo>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="FeedbackDetails" type="ns:FeedbackDetailType" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>
									The FeedbackDetails container has fields (ItemID, etc.) with information about one feedback entry.
									When you call GetUserProfile, the 5 (maximum) most recent feedback records are returned in 
									FeedbackDetails containers. 
								</xs:documentation>
								<xs:appinfo>
									<CallInfo>
										<CallName>GetUserProfile</CallName>
										<Details>IncludeSelector: FeedbackDetails</Details>										
										<Returned>Always</Returned>
									</CallInfo>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/GeteBayTimeRequest.xsd #####

-->
		<xs:element name="GeteBayTimeRequest" type="ns:GeteBayTimeRequestType"/>
<xs:complexType name="GeteBayTimeRequestType">
		<xs:annotation>
			<xs:documentation>
				Gets the official eBay system time in GMT.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Gets the official eBay system time in GMT.
				</Summary>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/GeteBayTimeResponse.xsd #####

-->
		<xs:element name="GeteBayTimeResponse" type="ns:GeteBayTimeResponseType"/>
<xs:complexType name="GeteBayTimeResponseType">
		<xs:annotation>
			<xs:documentation>
				The Timestamp field indicates the official eBay system time in GMT.
				The value returned represents the date and time when eBay processed the request.
				The value is in the ISO 8601 date-time format (YYYY-MM-DDTHH:MM:SS.SSSZ). 
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/HalfCatalogProductType.xsd #####

-->
	<xs:complexType name="HalfCatalogProductType">
		<xs:annotation>
			<xs:documentation>
			Information about an Half.com catalog product.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Title" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The title of the product, as specified in the catalog.
						Always returned when Product is returned.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Details>IncludeSelector: none, DomainHistogram, Items</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DetailsURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Fully qualified URL for optional information about the product,
						such as a movie's description or film credits. This information
						is hosted through the Half.com Web site and it cannot be edited.
						Portions of the content are protected by copyright.
						Applications can include this URL as a link in product search results
						so that end users can view additional descriptive details about
						the product. This is usually always returned when Product is returned,
						but it may be safest to check for the existence of this field.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Details>IncludeSelector: none, DomainHistogram, Items</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="StockPhotoURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Fully qualified URL for a stock image (if any) that is associated
						with the Half.com catalog product. The URL is for the image Half.com
						usually displays in product search results (usually 70px tall).
						It may be helpful to calculate the dimensions of the photo
						programmatically before displaying it.
						Only returned if a URL is available for the product.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Details>IncludeSelector: none, DomainHistogram, Items</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingCostSummary" type="ns:ShippingCostSummaryType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Contains basic shipping-related costs for the item. If Item.Quantity is greater
						than 1, this is the shipping cost for one item. If the seller offers a choice of
						more than one shipping service (such as USPS Ground or Expediated), this is the
						cost of the "first" shipping option (usually the lowest cost option).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Details>IncludeSelector: Items</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DisplayStockPhotos" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						If true, your application can attempt to display stock photos that
						are returned. If false, your application should not attempt to display
						any stock photos that are returned. This recommendation is useful for
						catalog data related to products like coins, where stock photos are not
						necessarily applicable or available. An application with a graphical
						user interface can use this flag to determine
						when to hide customized stock photo widgets.
						Always returned when Product is returned.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Details>IncludeSelector: none, DomainHistogram, Items</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Total number of listings on the Half.com site that use
						stock information from this catalog product. This value can be greater
						than the number of listings returned in ItemArray.
						Only returned when you search by ProductID (and you pass
						Items or Details in IncludeSelector).
					</xs:documentation>
					<xs:appinfo>
						<Min>0</Min>
						<Max/>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Details>IncludeSelector: Items</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductID" type="ns:ProductIDType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						The Half.com or external IDs associated with the product. Use the Reference
						value as input to search for the same product in the future, or
						use the ISBN, EAN, or UPC value (if returned).
						The ISBN, EAN, and UPC values can also be useful as keys
						if your application is comparing products across different sites.
						Always returned when Product is returned.
						<!--
						Example of Product with 10 and 13 digit isbn, and catalogid
						<ProductID type="ISBN"> 1234567890</ProductID>
						<ProductID type="ISBN"> 1234567890123 </ProductID>
						<ProductID type="Catalog"> 5467823</ProductID>
						-->
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Details>IncludeSelector: none, DomainHistogram, Items</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DomainName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The name of the domain in which the product was found.
						If the product is mapped to multiple domains, Half.com returns
						the most applicable domain (as determined by Half.com).
						Always returned when Product is returned.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Details>IncludeSelector: none, DomainHistogram, Items</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemSpecifics" type="ns:NameValueListArrayType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A list of name/value pairs that are included in the product's
						pre-filled Item Specifics. These indicate common aspects or
						characteristics of the product, such as Publisher (for a book).
						Also see ProductID for ISBN, UPC, or EAN values, if applicable.
						This is usually returned. (We are not aware of any cases in which this
						node is not be returned. However, it may be safest to check for the
						existence of this node.)
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Details>IncludeSelector: none, DomainHistogram, Items</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemArray" type="ns:SimpleItemArrayType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A list of active items that were listed with the requested product.
						Results are sorted by current price (lowest first),
						then by recent positive feedback (highest first).
						&lt;br&gt;
						&lt;br&gt;
						Only returned when you specify Items in IncludeSelector, and the
						product has matching items that are currently active on Half.com.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Details>IncludeSelector: Items</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReviewCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The total number of reviews that are available for this product
						on the Half.com Web site. This can be greater than the number of
						reviews returned by FindProducts. In a future release, we will provide
						the capability to retrieve details about reviews.
						Always returned when Product is returned.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Min>0</Min>
							<Max/>
							<Details>IncludeSelector: none, DomainHistogram, Items</Details>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/HalfItemConditionCodeType.xsd #####

-->
	<xs:simpleType name="HalfItemConditionCodeType">
		<xs:annotation>
			<xs:documentation>
				Controls values for item condition, especially for Books catalog.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="BrandNew">
				<xs:annotation>
					<xs:documentation>
						New, unread, unused and in perfect condition.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LikeNew">
				<xs:annotation>
					<xs:documentation>
						Item still in original packaging, no wear and tear, all 
						facets of the product are intact.  (Could easily be mistaken 
						for brand new.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VeryGood">
				<xs:annotation>
					<xs:documentation>
						Doesn't look brand new but has no easily noticeable damage 
						and very minimal wear and tear.  (You would give it to a 
						good friend as a gift)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Good">
				<xs:annotation>
					<xs:documentation>
						Very minimal damage to the item and still includes all accessories 
						such as dust jackets, liner notes, and cases.
						(You would use it yourself, but wouldn't necessarily give it as a gift)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Acceptable">
				<xs:annotation>
					<xs:documentation>
						Some damage to the item but integrity still intact.  May be missing an
						accessory. (Item beaten up a bit but it works)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Used">
				<xs:annotation>
					<xs:documentation>
						Some damage to the item and visibly used.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/HalfProductsType.xsd #####

-->
	<xs:complexType name="HalfProductsType">
		<xs:annotation>
			<xs:documentation>
			Information about an eBay catalog product.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Product" type="ns:HalfCatalogProductType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						An set of Half.com catalog products. This contains stock information about a
						particular DVD, book, or other product.
						When you use QueryKeywords in the request, FindHalfProducts returns a
						maximum of 20 products per page.
						When you use ProductID in the request, FindHalfProducts usually only
						returns 1 product.
						(If more than one product matches the same ProductID,
						FindProducts will return all of those products. As of the time
						of this writing, we expect this to be a rare case.)					
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Details>IncludeSelector: none, DomainHistogram, Items</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/HistogramEntryType.xsd #####

-->
	<xs:complexType name="HistogramEntryType">
		<xs:annotation>
			<xs:documentation>
				A generic histogram entry type.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						This is the domain name.&lt;br&gt;
						&lt;br&gt;
						A product can be mapped to more than one domain.
						This means that even if a name appears in this histogram and the
						Count is greater than 1, you won't necessarily see the
						same name returned for each returned product (in the Product node
						of the response). That is, Product.DomainName only
						returns the most applicable domain name (as determined by eBay).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: DomainHistogram</Details>
						</CallInfo>					
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: DomainHistogram</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Count" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						This is the number of products found in the domain.
						If a product is mapped to more than one domain, it is counted separately
						for each domain. (For example, if the same product name appears in both
						Children's Books and Fiction Books, the count for both of these
						domains will include that product.) This means you cannot sum the
						product counts to determine the total number of matching products
						across all domains. The histogram is only intended to show the number
						of matching products in each individual domain.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: DomainHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: DomainHistogram</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/InsuranceOptionCodeList.xsd #####

-->
	<xs:simpleType name="InsuranceOptionCodeType">
		<xs:annotation>
			<xs:documentation>
				The seller's requirements regarding whether the buyer pays
				for shipping insurance.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Optional">
				<xs:annotation>
					<xs:documentation>
						(in/out) The seller offers the buyer the choice of paying
						for shipping insurance or not.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Required">
				<xs:annotation>
					<xs:documentation>
						(in/out) The seller requires that the buyer pay for
						shipping insurance.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NotOffered">
				<xs:annotation>
					<xs:documentation>
						(in/out) The seller does not offer shipping insurance to the buyer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IncludedInShippingHandling">
				<xs:annotation>
					<xs:documentation>
						(in/out) The seller is not charging separately for shipping
						insurance costs; any insurance is already included in the
						base shipping cost.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NotOfferedOnSite">
				<xs:annotation>
					<xs:documentation>
						(in/out) Shipping insurance is not offered as a separate option on the site
						where the item is listed. (Some shipping services, such as
						DE_InsuredExpressOrCourier, include insurance as part of the service.) If
						another insurance option is specified in the listing request and the site does
						not support shipping insurance as a separate option, eBay will reset the
						insurance option to this value. At the time of this writing, this option is
						only meaningful for the eBay Germany, Austria, and Switzerland sites.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/InternationalShippingServiceOptionType.xsd #####

-->
	<xs:complexType name="InternationalShippingServiceOptionType">
		<xs:annotation>
			<xs:documentation>
				Shipping costs and options related to an international shipping service. When used
				as input, if one is provided, at least one domestic ShippingService must be
				provided. This type does not exist before compatibility level 383.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShippingInsuranceCost" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The insurance cost associated with shipping a single item with this shipping
						service. If the buyer bought more than one of this item, this proportional to
						QuantitySold. If the item has not yet been sold, insurance information cannot
						be calculated and the value is 0.00. For calculated shipping only.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServiceName" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						An international shipping service offered for shipping the item (for
						example, UPS Ground). For flat and calculated shipping.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServiceAdditionalCost" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Cost of shipping each additional item beyond the first item. Zero for single-
						item listings. For flat shipping only.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServiceCost" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The basic shipping cost of the item. If multiple items were purchased, this
						includes the ShippingServiceAdditionalCost.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServicePriority" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Seller-preferred presentation order relative to other service options. Valid
						values are: 1, 2 and 3 (first, second and third choices). For flat and
						calculated shipping.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShipsTo" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						An international location or region to which the item may be shipped via this
						particular shipping service. Associated with the shipping service by the
						seller. This is basically the same as SimpleItemType.ShipToLocations except
						that this is spelled out and the other is abbreviated.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/ItemConditionCodeList.xsd #####

-->
	<xs:simpleType name="ItemConditionCodeType">
		<xs:annotation>
			<xs:documentation>
				Specifies a predefined subset of item conditions. The predefined set of fields
				can vary for different calls.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="New">
				<xs:annotation>
					<xs:documentation>
						The seller specified the Item Condition as New, or
						did not specify a condition.
						(Excludes items that the seller listed as Used.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Used">
				<xs:annotation>
					<xs:documentation>
						The seller specified the Item Condition as Used, or
						did not specify a condition.
						(Excludes items that the seller listed as New.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
								(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/ItemTypeCodeList.xsd #####

-->
	<xs:simpleType name="ItemTypeCodeType">
		<xs:annotation>
			<xs:documentation>
				Identifies listing-type-related filters.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AuctionItemsOnly">
				<xs:annotation>
					<xs:documentation>
						(in) Only retrieve listings eligible for competitive bidding at auction.
						That is, only retrieve listings for which ListingType is Chinese, Dutch, or Live
						(regardless of the BuyItNowEnabled value).
						If a listing has a listing type of any of the following,
						it is not retrieved: StoresFixedPrice, FixedPriceItem, and AdType.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FixedPricedItem">
				<xs:annotation>
					<xs:documentation>
						(in) Only retrieves listings that can be purchased at a fixed price.
						That is, only retrieves listings for which listing type is StoresFixedPrice or FixedPriceItem.
						Whether StoresFixedPrice items are retrieved depends on the site default.
						If StoresFixedPrice items are retrieved, they are returned after the other retrieved items.
						Also retrieves Chinese and Dutch auction listings for which BuyItNowEnabled is true.
						Does not retrieve listings for which listing type is AdType or Live,
						and does not retrieve auction listings for which BuyItNowEnabled is false.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AllItems">
				<xs:annotation>
					<xs:documentation>
						(in) Returns all listing types (the default for FindItemsAdvanced).
						It is recommended that you use AllItemTypes instead of AllItems.
						Whether StoresFixedPrice items are retrieved depends on the site default.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoreInventoryOnly">
				<xs:annotation>
					<xs:documentation>
						(in) Only retrieves listings for which the listing type is StoresFixedPrice.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FixedPriceExcludeStoreInventory">
				<xs:annotation>
					<xs:documentation>
						(in) Excludes listings that have listing type set to StoresFixedPrice.
						Excludes listings that have listing type set to AdType or Live.
						Excludes auction listings in which BuyItNowEnabled is false.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ExcludeStoreInventory">
				<xs:annotation>
					<xs:documentation>
						(in) Excludes listings that have listing type set to StoresFixedPrice.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AllItemTypes">
				<xs:annotation>
					<xs:documentation>
						(in) Retrieves listings whether or not listing type is set to StoresFixedPrice; include auction items.
						In searches for items, you must specify the AllItemTypes value if you want Store Inventory format (StoresFixedPrice) items to be returned. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AllFixedPriceItemTypes">
				<xs:annotation>
					<xs:documentation>
						(in) Retrieves fixed-price items.
						Whether StoresFixedPrice items are retrieved does not depend on the site default.
						The StoresFixedPrice items are retrieved after the basic fixed price items.
						Items are retrieved whether or not listing type is set to StoresFixedPrice.
						Does not retrieve items for which listing type is AdType or Live.
						Does not retrieve auction items for which BuyItNowEnabled is false.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ClassifiedItemsOnly">
				<xs:annotation>
					<xs:documentation>
						(in) Only retrieves Classified Ad format listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AdFormat">
				<xs:annotation>
					<xs:documentation>
						Restricts listings to return only items that have the Ad Format feature.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/ListingStatusCodeList.xsd #####

-->
	<xs:simpleType name="ListingStatusCodeType">
		<xs:annotation>
			<xs:documentation>
				Specifies an active or ended listing's status in eBay's processing
				workflow. If a listing ends with a sale (or sales), eBay needs to
				update the sale details (e.g., total price and buyer/high bidder)
				and the final value fee. This processing can take several minutes.
				If you retrieve a sold item and no details about the buyer/high
				bidder are returned, use this
				listing status information to determine whether eBay has finished
				processing the listing.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Active">
				<xs:annotation>
					<xs:documentation>
						(out) The listing is still live, or it has recently ended
						but eBay has not completed processing
						the listing (e.g., we're still determining the high bidder).
						A multi-item listing is considered active until all items
						have winning bids or purchases or the listing's end time
						has passed. (That is, if the listing has a Quantity of 10,
						the sale of 1 of those items doesn't end the listing.)
						If the listing has ended but this Active
						status is returned, please allow several minutes for eBay to
						finish processing the listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Ended">
				<xs:annotation>
					<xs:documentation>
						(out) The listing has ended and eBay has completed processing
						of the sale (if any), such as determining the high bidder.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Completed">
				<xs:annotation>
					<xs:documentation>
						(out) The listing has ended and eBay has completed processing
						of the sale (if any), such as determining the high bidder.
						You can think of Completed and Ended as essentially equivalent.
						(The difference is only meaningful to the seller of the item,
						as Completed indicates whether eBay has finished calculating
						certain selling fees.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/ListingTypeCodeList.xsd #####

-->
	<xs:simpleType name="ListingTypeCodeType">
		<xs:annotation>
			<xs:documentation>
				Specifies the selling format used for a listing.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Unknown">
				<xs:annotation>
					<xs:documentation>
						Unknown auction type. (This is not normally used.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Chinese">
				<xs:annotation>
					<xs:documentation>
						Single-quantity online auction format.
						A Chinese auction has a Quantity of 1. Buyers engage in competitive bidding,
						although Buy It Now may be offered as long as no bids have been placed.
						Online auctions are listed on eBay.com, and they are also listed in
						the seller's eBay Store if the seller is a Store owner.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Dutch">
				<xs:annotation>
					<xs:documentation>
						Multiple-quantity online auction format.
						A Dutch auction has a Quantity greater than 1. Buyers engage in
						competitive bidding. Some sites also offer Buy It Now for Dutch auctions.
						Online auctions are listed on eBay.com, and they are also listed in
						the seller's eBay Store if the seller is a Store owner.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Live">
				<xs:annotation>
					<xs:documentation>
						Live auction, on-site auction that can include non-eBay bidders.
						Live auctions are listed on the eBay Live Auctions site, in live auction categories.
						They can also appear on eBay if the seller lists the lot in a secondary category
						that is an eBay category.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Auction">
				<xs:annotation>
					<xs:documentation>
						Reserved for future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AdType">
				<xs:annotation>
					<xs:documentation>
						Advertisement to solicit inquiries on listings such as real estate.
						Permits no bidding on that item, service, or property. To express interest,
						a buyer fills out a contact form that eBay forwards to the the seller as a lead.
						This format does not enable buyers and sellers to transact online through eBay,
						and eBay Feedback is not available for ad format listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoresFixedPrice">
				<xs:annotation>
					<xs:documentation>
						A fixed-price format for eBay Store sellers.
						Store Inventory listings appear after other listings in regular browse and search
						item lists on eBay. They have a lower Insertion Fee and longer listing durations.
						Only specified by sellers who have an eBay Store.
						Store Inventory listings are listed on eBay.com, and they are also listed in
						the seller's eBay Store.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PersonalOffer">
				<xs:annotation>
					<xs:documentation>
						Second chance offer made to a non-winning bidder on an ended listing.
						A seller can make an offer to a non-winning bidder when either the winning bidder
						has failed to pay for an item or the seller has a duplicate of the item.
						Second-chance offer items are on eBay, but they do not appear when browsing or searching listings. You need to already know the item ID
						in order to retrieve a second-chance offer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FixedPriceItem">
				<xs:annotation>
					<xs:documentation>
						A basic fixed-price listing with a Quantity of 1 or more. Allows no auction-style bidding.
						Also known as Buy It Now Only on some sites (not to be confused with the BuyItNow option that
						is available for Chinese auctions).
						Fixed-price listings appear on eBay.com, and they are also listed in
						the seller's eBay Store if the seller is a Store owner.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Half">
				<xs:annotation>
					<xs:documentation>
					Half.com listing (item is listed on Half.com, not on eBay).
					Reserved for future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LeadGeneration">
				<xs:annotation>
					<xs:documentation>
						Lead Generation format (advertisement-style listing to solicit
						inquiries or offers, no bidding or fixed price, listed on eBay).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Express">
				<xs:annotation>
					<xs:documentation>
						For Germany only:
						eBay Express-only format (item is listed only on eBay Express
						Germany, not on eBay).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/NameValueListArrayType.xsd #####

-->
	<xs:complexType name="NameValueListArrayType">
		<xs:annotation>
			<xs:documentation>
				A list of one or more valid names and corresponding values.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="NameValueList" type="ns:NameValueListType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						One Item Specific that the seller has specified in the Item Specifics
						section of the listing, if any.&lt;br&gt;
						&lt;br&gt;
						For FindProducts, this can also be an Item Specific that is defined for
						a product. That is, Item Specifics can be returned both for
						items and products in FindProducts.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: ItemSpecifics</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: ItemSpecifics</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Items, DomainHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Items, DomainHistogram, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/NameValueListType.xsd #####

-->
	<xs:complexType name="NameValueListType">
		<xs:annotation>
			<xs:documentation>
				A name and corresponding value (a name/value pair).
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The name of the item specific. This field is always returned for each
						item specific that is returned (if any). However if the seller didn't select a value for the item specific, we suggest you don't
						show the name (to avoid confusing users).&lt;br&gt;
						&lt;br&gt;
						For the item condition, this usually includes the
						word "Condition" for eBay US, UK, Australia, and India listings;
						and "Artikelzustand" for eBay Germany, Austria, and Switzerland
						listings.&lt;br&gt;
						&lt;br&gt;
						The Name fields in return policy item specifics (if any) usually include
						the word "return", "refund", and/or "warranty" for eBay US, Canada,
						UK, Australia, and India listings;
						and "Rucknahme", "return", and/or "refund" for eBay Germany, Austria,
						and Switzerland listings.&lt;br&gt;
						&lt;br&gt;
						&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt;
						Ignore item specifics with SIFFTAS in the name. These are for internal use by eBay and aren't meaningful to users.&lt;/span&gt;
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: ItemSpecifics</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: ItemSpecifics</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Items, DomainHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Items, DomainHistogram, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Value" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						A value for the item specific. In GetSingleItem, this field is always
						returned for each item specific that is returned (if any). However,
						if the seller didn't select a value for the item specific,
						this field may return empty, or it may return a value like "-",
						"Not Selected", or "Unspecified" (or the equivalent in the language
						of the site).&lt;br&gt;
						&lt;br&gt;
						For the item condition, this usually includes the
						word "New" or "Used" for eBay US, UK, Australia, and India listings;
						and "Neu" or "Gebraucht" for eBay Germany, Austria, and Switzerland
						listings.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: ItemSpecifics</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: ItemSpecifics</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Items, DomainHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Items, DomainHistogram, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/PaymentMethodSearchCodeType.xsd #####

-->
	<xs:simpleType name="PaymentMethodSearchCodeType">
		<xs:annotation>
			<xs:documentation>
				Used for specifying items for which a specific payment method or methods are accepted. 
   		</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="PayPal">
				<xs:annotation>
					<xs:documentation>
					  PayPal payment method.
				  </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaisaPay">
				<xs:annotation>
					<xs:documentation> 
					  PaisaPay payment method. The PaisaPay payment method is only for the India site (site ID 203).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalOrPaisaPay">
				<xs:annotation>
					<xs:documentation>
					  Either the PayPal or the PaisaPay payment method. The PaisaPay payment method is only for the India site (site ID 203).
					 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaisaPayEscrowEMI">
				<xs:annotation>
					<xs:documentation>
						PaisaPayEscrow EMI (Equal Monthly Installment) payment method. The PaisaPayEscrowEMI payment method is only for the India site (site ID 203).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/PopularSearchesType.xsd #####

-->
	<xs:complexType name="PopularSearchesType">
		<xs:annotation>
			<xs:documentation>
				Contains CategoryID/QueryKeywords, AlternateKeywords, RelatedKeywords.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CategoryID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Numeric ID of a category on eBay.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindPopularSearches</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryParentID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Category ID identifying a category that is an ancestor
						of the category indicated in CategoryID.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							  <CallName>FindPopularSearches</CallName>
							  <Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="QueryKeywords" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Specifies which query keywords corresponds to this PopularSearchResult.  
						Query Keywords are returned in the output to clarify which result set corresponds to which
						Query Keyword inputs (as there can be more than one set of keywords in the input).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
						  <CallName>FindPopularSearches</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AlternativeSearches" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Alternative search keywords for the query keywords, separated by semicolons.
						You can use this to find other search terms buyers and sellers may be interested in.  
						For example, if a seller lists an item with "wedding" in the title, they may also be 
						interested in adding "bridal" to the title because bridal is an alternative search 
						keyword which buyers have used.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindPopularSearches</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="RelatedSearches" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Keywords related to the query keywords, separated by semicolons.
						You can use this to find more detailed related keywords.  For example,
						the query keyword "wedding" is related to searches for 
						"wedding decorations;wedding favors;wedding supplies;wedding dresses..." which helps
						the seller and buyer specify their query with more detail and precision.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindPopularSearches</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/PreferredLocationCodeList.xsd #####

-->
	<xs:simpleType name="PreferredLocationCodeType">
		<xs:annotation>
			<xs:documentation>
				Specifies the criteria for filtering search results by site, where site is determined by the site ID in the request.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ListedInCurrencyImplied">
				<xs:annotation>
					<xs:documentation>
						(in) Items listed in the currency implied by the site specified in the
						request.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LocatedInCountryImplied">
				<xs:annotation>
					<xs:documentation>
						(in) Items located in the country implied by the site specified in the
						request.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AvailableInCountryImplied">
				<xs:annotation>
					<xs:documentation>
						(in) Items available to the country implied by the site specified in the
						request. For the US site, this implies listings from ALL English-language
						countries that are available to the US.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SiteImplied">
				<xs:annotation>
					<xs:documentation>
						(in) Items listed on the site specified in the request, regardless of listing
						currency.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BelgiumListing">
				<xs:annotation>
					<xs:documentation>
						(in) Items located in Belgium or listed on one of the two Belgian sites.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/ProductIDCodeList.xsd #####

-->
	<xs:simpleType name="ProductIDCodeType">
		<xs:annotation>
			<xs:documentation>
				ProductID type for product searches.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ISBN">
				<xs:annotation>
					<xs:documentation>
						ISBN-10 or ISBN-13 value for books. (The string length of ProductID
						indicates whether the ID is 10 or 13 characters.)
						If you know a book's ISBN, you can use this instead of the
						eBay CatalogItem or Reference ID to search for that book.
						Max length of corresponding value: 13
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EAN">
				<xs:annotation>
					<xs:documentation>
						EAN value for books. (This is used more commonly in
						European countries.)
						If you know a book's EAN, you can use this instead of the
						eBay CatalogItem or Reference ID to search for that book.
						Max length of corresponding value: 13
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPC">
				<xs:annotation>
					<xs:documentation>
						UPC value for products in Music (e.g., CDs), DVDs &amp; Movies,
						and Video Games categories (or domains).
						If you know a product's UPC, you can use this instead of the
						eBay CatalogItem or Reference ID to search for that product.
						Max length of corresponding value: 12
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MPN">
				<xs:annotation>
					<xs:documentation>
						Reserved for future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Keywords">
				<xs:annotation>
					<xs:documentation>
						Reserved for future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CatalogItem">
				<xs:annotation>
					<xs:documentation>
						Reserved for future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Reference">
				<xs:annotation>
					<xs:documentation>
						The global reference ID for an eBay catalog product.
						A reference ID is a fixed reference to a product
						(regardless of version). Use this instead of CatalogItem when you
						know a product's reference ID (because older CatalogItem IDs are
						more likely to become obsolete over time.)
						One reference ID can be associated with multiple CatalogItem IDs.
						To determine valid reference IDs for products, first call
						FindProducts with QueryKeywords (or ProductID).
						Each product in the response includes a reference ID.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/ProductIDType.xsd #####

-->
	<xs:complexType name="ProductIDType">
		<xs:annotation>
			<xs:documentation>
				Product ID has an attribute of ProductIDCodeType and a string value.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="type" type="ns:ProductIDCodeType">
					<xs:annotation>
						<xs:documentation>
 							The nature of identifier being used. For FindHalfProducts, FindProducts, 
 							FindItemsAdvanced, and FindReviewsAndGuides, only Reference, ISBN, UPC, 
 							and EAN are supported.
							Required when ProductID is specified.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>FindReviewsAndGuides</CallName>
								<CallName>FindHalfProducts</CallName>
								<CallName>FindProducts</CallName>
								<CallName>FindItemsAdvanced</CallName>
								<AllValuesExcept>CatalogItem,MPN, Keywords</AllValuesExcept>
								<RequiredInput>Conditionally</RequiredInput>
							</CallInfo>
							<CallInfo>
								<CallName>FindReviewsAndGuides</CallName>
								<Returned>Conditionally</Returned>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/ProductSortCodeList.xsd #####

-->
	<xs:simpleType name="ProductSortCodeType">
		<xs:annotation>
			<xs:documentation>
				Controls the order of product (not item) searches.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Popularity">
				<xs:annotation>
					<xs:documentation>
						Sort by product popularity (as determined by eBay).
						(This is the default sort order.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Rating">
				<xs:annotation>
					<xs:documentation>
						Sort by average rating.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ReviewCount">
				<xs:annotation>
					<xs:documentation>
						Sort by the number of reviews on eBay.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemCount">
				<xs:annotation>
					<xs:documentation>
						Sort by the number of active items listed with this product.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Title">
				<xs:annotation>
					<xs:documentation>
						Sort by the product title.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Reserved for values that are not available in the version of the schema
						you are using. If eBay adds a new value to this code type as of a
						newer version, we return CustomCode instead when you specify a
						lower request version.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/QuantityOperatorCodeList.xsd #####

-->
	<xs:simpleType name="QuantityOperatorCodeType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="LessThan">
				<xs:annotation>
					<xs:documentation>
						Used by QuantityOperator to specify that you are seeking quantities less than Quantity.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LessThanOrEqual">
				<xs:annotation>
					<xs:documentation>
						Specifies quantities less than or equal to Quantity.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Equal">
				<xs:annotation>
					<xs:documentation>
						Specifies quantities equal to Quantity.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GreaterThan">
				<xs:annotation>
					<xs:documentation>
						Specifies quantities greater than Quantity.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GreaterThanOrEqual">
				<xs:annotation>
					<xs:documentation>
						Specifies quantities greater than or equal to Quantity.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/ReturnPolicyType.xsd #####

-->
	<xs:complexType name="ReturnPolicyType">
		<xs:annotation>
			<xs:documentation>
				Type for the return policy details of an item.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Refund" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Specifies how a refund will be made, e.g. as an exchange.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReturnsWithin" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Specifies the length of time in which the item must be returned
						under the return policy.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReturnsAccepted" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Information about returns accepted.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A description of the return policy for the item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="WarrantyOffered" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Information about the warranty offered.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="WarrantyType" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The type of warranty offered.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="WarrantyDuration" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The length of the warranty offered.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="EAN" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Contains the EAN.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingCostPaidBy" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The party who pays the cost of shipping for a returned item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/ReviewDetailsType.xsd #####

-->
	<xs:complexType name="ReviewDetailsType">
		<xs:annotation>
			<xs:documentation>
				Contains product reviews written by eBay members.
			 </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AverageRating" type="xs:float" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The product's average rating (out of 5) based on all reviews.
						For example, a value like 4.5 would mean the average rating
						is 4.5 out of 5. (See ReviewCount for the total number of reviews.)
					</xs:documentation>
					<xs:appinfo>
						<Min>0</Min>
						<Max>5</Max>
						<CallInfo>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Review" type="ns:ReviewType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						An eBay member's review of the product.
					</xs:documentation>
					<xs:appinfo>
						<MaxOccurs>20</MaxOccurs>
						<CallInfo>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/ReviewType.xsd #####

-->
	<xs:complexType name="ReviewType">
		<xs:annotation>
			<xs:documentation>
				A product review written by an eBay member.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="URL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A link to the full review on the eBay Web site.
						This URL optimized for natural search: "_W0QQ" is like "?"
						(question mark), "QQ" is like "&amp;" (ampersand),
						and "Z" is like "=" (equals sign).&lt;br&gt;
						&lt;br&gt;
						&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt;
						For a link to all reviews for the product, remove the upvr parameter
						from this URL. See the eBay Web Services guide for an example.
						&lt;/span&gt;
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Title" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The title of the review.
					</xs:documentation>
					<xs:appinfo>
						<MaxLength>55</MaxLength>
						<CallInfo>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rating" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The eBay member's rating of the product.
					</xs:documentation>
					<xs:appinfo>
						<Min>0</Min>
						<Max>5</Max>
						<CallInfo>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Text" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The text of the review. If the review is longer than
						2000 characters, the text is cut off and it ends with "...".
						See Review.URL for a link to the full text of the review.
					</xs:documentation>
					<xs:appinfo>
						<MaxLength>2000</MaxLength>
						<CallInfo>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The reviewer's eBay user ID.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreationTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The time and date when the reviewer posted the review.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindReviewsAndGuides</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/SalesTaxType.xsd #####

-->
	<xs:complexType name="SalesTaxType">
		<xs:annotation>
			<xs:documentation>
				Type for expressing sales tax data.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SalesTaxPercent" type="xs:float" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Percent of an item's price to be charged as the sales
						tax for the transaction. The value passed in is stored with a
						precision of 3 digits after the decimal point (##.###).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SalesTaxState" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						State or jurisdiction for which the sales tax is being collected.
						Only returned if the seller specified a value.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingIncludedInTax" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(US only) Whether shipping costs were part of the base amount
						that was taxed. Flat or calculated shipping.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SalesTaxAmount" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						(US only) The amount of sales tax, calculated for a
						transaction based on the SalesTaxPercent and pricing information.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/SearchFlagCodeList.xsd #####

-->
	<xs:simpleType name="SearchFlagCodeType">
		<xs:annotation>
			<xs:documentation>
				SearchFlagCodeType - Search flags for FindItemsAdvanced.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Charity">
				<xs:annotation>
					<xs:documentation>
						Return only charity item listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Gift">
				<xs:annotation>
					<xs:documentation>
						Return only gift items.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NowAndNew">
				<xs:annotation>
					<xs:documentation>
						Return only items that have been listed with Now and New. Applicable for
						certain sites only.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LocalSearch">
				<xs:annotation>
					<xs:documentation>
						Perform a local search.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FreeShipping">
				<xs:annotation>
					<xs:documentation>
						If specified, only items with free shipping for the user's location are
						returned. The user's location is determined from the site ID specified
						in the request. If false, no filtering is done via this attribute. A
						listing is not considered a free shipping listing if it requires
						insurance or requires pick up or requires a shipping surcharge.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Gallery">
				<xs:annotation>
					<xs:documentation>
						Return Gallery items only.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Picture">
				<xs:annotation>
					<xs:documentation>
						Picture.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GetItFast">
				<xs:annotation>
					<xs:documentation>
						Limits the results to Get It Fast listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Lot">
				<xs:annotation>
					<xs:documentation>
						Limits the results to only those listings for which lot size is 2 or greater.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GermanMotorsSearchable">
				<xs:annotation>
					<xs:documentation>
						Limits the results based on each item's eligibility to appear on the
						mobile.de site. If
						specified, queries for eligible items only. If not specified, the search
						results are not affected. Only applicable for items listed on the eBay
						Germany site (site ID 77) in subcategories of mobile.de search-enabled
						categories.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DigitalDelivery">
				<xs:annotation>
					<xs:documentation>
						If specified, limits the results to digitally delivered good only.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/SearchResultType.xsd #####

-->
	<xs:complexType name="SearchResultType">
		<xs:annotation>
			<xs:documentation>
				Container for items. Can contain zero, one, or multiple
				SimpleItemType objects, each of which has data for an item listing.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CategoryGroupNamePath" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Category name breadcrumb.
						Used in building a category-browsing path, i.e. a path of "breadcrumbs" (e.g., Computers &amp; Networking &gt; Technology Books &gt; Certification). 
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryGroupIDPath" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Category ID breadcrumb.
						Used in building a category-browsing path, i.e. a path of "breadcrumbs" (e.g., Computers &amp; Networking &gt; Technology Books &gt; Certification). 
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CategoryGroupItemCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Item count of the category.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemArray" type="ns:SimpleItemArrayType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Array of simple items.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/SellerBusinessCodeTypeList.xsd #####

-->
	<xs:simpleType name="SellerBusinessCodeType">
			<xs:annotation>
				<xs:documentation>
					Type of seller account. This value can be returned if the German site (site ID
					77) or eBay Motors site (site ID 100) is specified.
				</xs:documentation>
			</xs:annotation>
			<xs:restriction base="xs:token">
				<xs:enumeration value="Undefined">
					<xs:annotation>
						<xs:documentation>
							Type of seller account not defined.
						</xs:documentation>
					</xs:annotation>
				</xs:enumeration>
				<xs:enumeration value="Private">
					<xs:annotation>
						<xs:documentation>
							Private seller account.
						</xs:documentation>
					</xs:annotation>
				</xs:enumeration>
				<xs:enumeration value="Commercial">
					<xs:annotation>
						<xs:documentation>
							Commercial seller account.
						</xs:documentation>
					</xs:annotation>
				</xs:enumeration>
				<xs:enumeration value="CustomCode">
					<xs:annotation>
						<xs:documentation>
							(out) Reserved for internal or future use.
						</xs:documentation>
					</xs:annotation>
				</xs:enumeration>
			</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/ShippingCostSummaryType.xsd #####

-->
	<xs:complexType name="ShippingCostSummaryType">
		<xs:annotation>
			<xs:documentation>
				Type for the shipping-related details for an item or transaction.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShippingServiceName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The name of a shipping service.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServiceCost" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The basic shipping cost of the item. If multiple items were purchased, this
						includes the ShippingServiceAdditionalCost.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: ShippingCosts</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindPopularItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>						
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="InsuranceCost" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The cost of insurance. For flat rate shipping, this is the value set by the
						seller, if any. For calculated shipping, this is the value calculated by eBay
						with the shipping carrier for the particular item and can only be determined
						once the final item price is known when the listing ends. To determine whether
						a listing has ended, see EndTime or ListingStatus in GetSingleItem.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: ShippingCosts</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingType" type="ns:ShippingTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						How the seller stated that cost of shipping is to be determined, such as flat rate
						or calculated or free.&lt;br&gt;
						&lt;br&gt;
						In GetSingleItem, this is always returned when ShippingCostSummary is
						returned.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<AllValuesExcept>Freight, Free</AllValuesExcept>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<AllValuesExcept>Freight, Free</AllValuesExcept>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: ShippingCosts</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindPopularItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="InsuranceOption" type="ns:InsuranceOptionCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Whether the seller offers shipping insurance and, if
						so, whether the insurance is optional or required. Flat and
						calculated shipping.
						This field is ignored when Item.ListingType equals Express.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/ShippingDetailsType.xsd #####

-->
	<xs:complexType name="ShippingDetailsType">
		<xs:annotation>
			<xs:documentation>
				Type for the shipping-related details for an item or transaction.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="GetItFast" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the seller has opted the listing into the Get
						It Fast feature. If GetItFast is true and if at least one of
						the domestic shipping services offered by the seller is an
						expedited shipping service, every shipping service offered by
						the seller is considered a Get It Fast service, and the seller
						commits to delivering the item to the buyer-selected shipping
						service within one day.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<SeeLink>
							<Title>Enabling Get It Fast
</Title>
							<URL>http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&amp;topic=GetItFast</URL>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="InsuranceCost" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The cost of insurance. For flat rate shipping, this is the value set by the
						seller, if any. For calculated shipping, this is the value calculated by eBay
						with the shipping carrier for the particular item and can only be determined
						once the final item price is known when the listing ends. To determine whether
						a listing has ended, use GetSingleItem. Not applicable to eBay Motors vehicle listings.
					</xs:documentation>
					<xs:appinfo>
						<Default>0.00</Default>
						<Min/>
						<Max/>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="InsuranceOption" type="ns:InsuranceOptionCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Whether the seller offers shipping insurance and, if
						so, whether the insurance is optional or required. Flat and
						calculated shipping.
						This field is ignored when Item.ListingType equals Express.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="InternationalShippingServiceOption" type="ns:InternationalShippingServiceOptionType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Shipping costs and options related to an international shipping service.
						&lt;br&gt;
						Not applicable to Half.com or eBay Motors vehicle listings.
						This field is ignored when Item.ListingType=Express.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
							<Details>DetailLevel: none, ItemReturnDescription,
							ItemReturnAttributes, ReturnAll</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SalesTax" type="ns:SalesTaxType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Sales tax details. US site only. Flat and calculated shipping.
						If your application normally calculates sales tax without using eBay's tax
						tables, you should understand how purchases via eBay Express will affect
						the way you process payments.
						For general information about listings on eBay Express,
						see the eBay Web Services Guide links below.
						Not applicable to eBay Motors vehicle listings.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<SeeLink>
							<Title>Specify Sales Tax for Express and eBay
</Title>
							<URL>http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&amp;topic=ExpressTax</URL>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingRateErrorMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						For most applicable calls, returns the words No Error or returns an error
						message related to an attempt to calculate shipping rates. For calculated
						shipping only.
						Not applicable to Half.com or eBay Motors vehicle listings.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServiceOption" type="ns:ShippingServiceOptionType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Shipping costs and options related to domestic shipping services offered by
						the seller. Flat and calculated shipping.&lt;br&gt;
						Not applicable to Half.com or eBay Motors vehicle listings.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="TaxTable" type="ns:TaxTableType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Tax details for a jurisdiction such as a state or province.
						Returned empty in if no tax table was used.
						Not applicable to Half.com.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="InternationalInsuranceCost" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The cost of insurance for items shipped internationally. For flat rate
						shipping, this is the value set by the seller, if any. For calculated
						shipping, this is the value calculated by eBay with the shipping carrier for
						the particular item and can only be determined once the final item price is
						known when the listing ends. To determine whether a listing has ended, use
						GetSingleItem. Not applicable to eBay Motors vehicle listings.
					</xs:documentation>
					<xs:appinfo>
						<Default>0.00</Default>
						<Min/>
						<Max/>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="InternationalInsuranceOption" type="ns:InsuranceOptionCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Whether the seller offers shipping insurance for items shipped internationally
						and, if so, whether the insurance is optional or required. Flat and calculated
						shipping. This field is ignored when Item.ListingType equals Express.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/ShippingServiceOptionType.xsd #####

-->
	<xs:complexType name="ShippingServiceOptionType">
		<xs:annotation>
			<xs:documentation>
				Shipping costs and options related to a domestic shipping service.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShippingInsuranceCost" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The insurance cost associated with shipping a single item with this shipping
						service. If the buyer bought more than one of this item, this proportional to
						QuantitySold.  If the item has not yet been sold, insurance information cannot
						be calculated and the value is 0.00. For calculated shipping only.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServiceName" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A domestic shipping service offered for shipping the item (for example, UPS
						Ground). For flat and calculated shipping.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServiceCost" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The meaning of this element depends on the call and on whether flat or
						calculated shipping has been selected. (For example, it could be the
						cost to ship a single item, the cost to ship all items, or the cost to ship
						just the first of many items, with ShippingServiceAdditionalCost accounting
						for the rest.) For flat and calculated shipping.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServiceAdditionalCost" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The cost of shipping each additional item beyond the first item. For input,
						this is required if the listing is for multiple items and should be zero for
						single-item listings. Default value is 0.00. For flat shipping only.
						Not applicable to Half.com.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingServicePriority" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Seller-preferred presentation order relative to other
						service options. Valid values: 1 (1st choice), 2 (2nd choice),
						3 (3rd choice). For flat and calculated shipping.
						Not applicable to Half.com.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpeditedService" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the service is an expedited shipping service. See Enabling Get It Fast.
						Not applicable to Half.com.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingTimeMin" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The minimum guaranteed number of days in which the shipping carrier
						can ship an item (not including the time it takes the seller to
						deliver the item to the shipping carrier). See Enabling Get It Fast.
						Not applicable to Half.com.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingTimeMax" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The maximum guaranteed number of days the shipping carrier will
						take to ship an item (not including the time it takes the seller to
						deliver the item to the shipping carrier). See Enabling Get It Fast.
						Not applicable to Half.com.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingSurcharge" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						An additional fee to charge US buyers who ship via UPS to Alaska, Hawaii
						or Puerto Rico. Can only be assigned a value for Parts and Accessories
						items on the eBay US and Motors sites. Only returned if set.
						If some transactions in an order have a surcharge, surcharge is added
						only for those transactions.
						Flat rate shipping only.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShipsTo" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						An international location or region to which the item may be shipped via this
						particular shipping service. Associated with the shipping service by the
						seller. Use GeteBayDetails to determine which locations are valid per site.
						These values are string equivalents of values found in ShippingRegionCodeType
						and CountryCodeType.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<SeeLink>
							<Title>ShipToLocation
</Title>
							<URL>http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&amp;topic=ShipToLocation</URL>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/ShippingTypeCodeList.xsd #####

-->
	<xs:simpleType name="ShippingTypeCodeType">
		<xs:annotation>
			<xs:documentation>
				The shipping cost model offered by the seller.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Flat">
				<xs:annotation>
					<xs:documentation>
						The flat rate shipping model: the seller establishes the cost of shipping and cost of
						shipping insurance, regardless of what any buyer-selected shipping service
						might charge the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Calculated">
				<xs:annotation>
					<xs:documentation>
						The calculated shipping model: the posted cost of shipping is based on the
						seller-offered and buyer-selected shipping service, where the shipping costs
						are calculated by eBay and the shipping carrier based on the buyer's address,
						and any packaging/handling costs established by the seller are automatically
						rolled into the total.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Freight">
				<xs:annotation>
					<xs:documentation>
						The freight shipping model: the cost of shipping is determined by a third
						party, FreightQuote.com, based on the item location (zip code). Currently,
						Freight can only be specified on input via eBay Web site, not via API.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Free">
				<xs:annotation>
					<xs:documentation>
						Free is used when the seller is declaring that shipping is free for the buyer.
						Since Free cannot be selected via API, the seller has two options for
						signifying that shipping is free when listing an item:
						&lt;br&gt;
						- omit shipping details, mention in the item description that shipping is
						free, and set ShippingTermsInDescription to true
						&lt;br&gt;
						- select an arbitrary shipping service and set its shipping cost to 0, mention
						in the item description that shipping is free, and set
						ShippingTermsInDescription to true
						&lt;br&gt;
						The latter is a better way to communicate "free shipping" because eBay picks
						up the "0" cost and can more accurately identify shipping costs in search
						results.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NotSpecified">
				<xs:annotation>
					<xs:documentation>
						The seller did not specify the shipping type.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FlatDomesticCalculatedInternational">
				<xs:annotation>
					<xs:documentation>
						The seller specified one or more flat domestic shipping services
						and one or more calculated international shipping services.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CalculatedDomesticFlatInternational">
				<xs:annotation>
					<xs:documentation>
						The seller specified one or more calculated domestic shipping services
						and one or more flat international shipping services.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/SimpleItemArrayType.xsd #####

-->
	<xs:complexType name="SimpleItemArrayType">
		<xs:annotation>
			<xs:documentation>
				Container for a list of items. Can contain zero, one, or multiple
				SimpleItemType objects, each of which conveys the data for one item listing.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Item" type="ns:SimpleItemType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Contains data for an item listing.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<CallName>FindPopularItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/SimpleItemSortCodeList.xsd #####

-->
	<xs:simpleType name="SimpleItemSortCodeType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="BestMatch">
				<xs:annotation>
					<xs:documentation>
						Sorts items by Best Match, and no sort order applies. If specified, 
						then Best Match sort also applies to CategoryHistogram.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EndTime">
				<xs:annotation>
					<xs:documentation>
						Sorts items by end time in ascending or descending order.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BidCount">
				<xs:annotation>
					<xs:documentation>
						Sort by number of bids on the item in ascending or descending order.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Country">
				<xs:annotation>
					<xs:documentation>
						Sort by country; no sort order can be specified.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CurrentBid">
				<xs:annotation>
					<xs:documentation>
						Sort by current bid; descending order only.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Distance">
				<xs:annotation>
					<xs:documentation>
						Sort by distance, ascending order only.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StartDate">
				<xs:annotation>
					<xs:documentation>
						Sort by start date, recently-listed first.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BestMatchCategoryGroup">
				<xs:annotation>
					<xs:documentation>
						(in) Sort by BestMatchCategoryGroup so results are grouped by Best Match within a category.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PricePlusShipping">
				<xs:annotation>
					<xs:documentation>
						(in) This value is part of the Price Plus Shipping Sort feature, to be enabled
						by the end of Sept. 2007 for the following sites:
						US (site ID 0), Germany (77), Canada (2), and Australia (15).
						The Price Plus Shipping Sort feature causes item sorting to consider shipping costs.
						Specify PricePlusShippingAsc to sort items by lowest cost first, as follows:
						Lowest-total-cost (for items where shipping was properly specified), 
						then freight-shipping items, then items for which shipping was not specified (sorted by price).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/SimpleItemType.xsd #####

-->
	<xs:complexType name="SimpleItemType">
		<xs:sequence>
			<xs:element name="BestOfferEnabled" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Whether the seller will accept a best offer for this item.
						This feature enables a buyer to make a lower-priced binding offer on a
						fixed price item. Buyers can't see how many offers have been made
						(only the seller can see this information). To make a best offer on a
						listing, use the eBay Web site.
					</xs:documentation>
					<xs:appinfo>
						<SeeLink>
							<Title>(eBay Help) Making a Best Offer (for Buyers)</Title>
							<URL>http://pages.ebay.com/help/buy/best-offer.html</URL>
						</SeeLink>
						<SeeLink>
							<Title>(eBay DE Hilfe) Preis vorschlagen</Title>
							<URL>http://pages.ebay.de/help/buy/best-offer.html</URL>
						</SeeLink>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BuyItNowPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The Buy It Now Price of the item (if any), in the currency
						of the site on which the item was listed.&lt;br&gt;
						&lt;br&gt;
						For Chinese auctions (Quantity=1, competitive bidding online auctions),
						Buy It Now lets a user purchase the item at a fixed price and
						end the auction immediately. On most sites, after a Chinese auction has
						bids, the listing is no longer eligible for Buy It Now.
						However, calls can still return the Buy It Now Price that
						the seller set for the listing. Use the Item.BidCount field to
						determine whether an auction with Buy It Now has bids or not.&lt;br&gt;
						&lt;br&gt;
						Some eBay sites also support Buy It Now for Dutch auctions
						(multi-quantity, competitive bidding), where you can buy multiple
						items from the same listing at a fixed price, instead of bidding.
						On some sites, the Buy It Now option remains available for Dutch
						auctions even after there are bids. See Item.BuyItNowAvailable.&lt;br&gt;
						&lt;br&gt;
						For fixed-price (FixedPriceItem) and Store Inventory listings
						(StoresFixedPrice), see CurrentPrice or ConvertedCurrentPrice
						instead.&lt;br&gt;
						&lt;br&gt;
						Only returned if an item was listed with Buy It Now.
					</xs:documentation>
					<xs:appinfo>
						<SeeLink>
							<Title>(GetSingleItem) Item.ListingType</Title>
							<URL>GetSingleItem.html#Response.Item.ListingType</URL>
						</SeeLink>
						<SeeLink>
							<Title>Item.BuyItNowAvailable</Title>
							<URL>#Response.Item.BuyItNowAvailable</URL>
							<!-- Intentionally starts with # -->
						</SeeLink>
						<SeeLink>
							<Title>Item.ConvertedBuyItNowPrice</Title>
							<URL>#Response.Item.ConvertedBuyItNowPrice</URL>
							<!-- Intentionally starts with # -->
						</SeeLink>
						<SeeLink>
							<Title>Item.ConvertedCurrentPrice</Title>
							<URL>#Response.Item.ConvertedCurrentPrice</URL>
							<!-- Intentionally starts with # -->
						</SeeLink>
						<SeeLink>
							<Title>(eBay Help) Buying with Buy It Now</Title>
							<URL>http://pages.ebay.com/help/buy/how-buy-bin.html</URL>
						</SeeLink>
						<SeeLink>
							<Title>(eBay DE Hilfe) Kaufen mit Sofort-Kaufen</Title>
							<URL>http://pages.ebay.de/help/buy/how-buy-bin.html</URL>
						</SeeLink>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The seller's description of the item, if any. This can include
						HTML markup and JavaScript. See
						&lt;a href="types/simpleTypes.html#string"&gt;string&lt;/a&gt;
						in Simple Schema Types. &lt;br&gt;
						&lt;br&gt;
						Some sellers don't specify their own listing description.
						Instead, they use a stock description from a catalog available
						through eBay. (GetSingleItem doesn't return this stock information.)
					</xs:documentation>
					<xs:appinfo>
						<MaxLength>500000 (some sites may allow more, but the exact number may vary)</MaxLength>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Description</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The ID that uniquely identifies the item listing. eBay generates this ID
						when an item is listed. This ID is unique across all eBay sites.
					</xs:documentation>
					<xs:appinfo>
						<MaxLength>19 (Note: The eBay database specifies 38. Currently, Item IDs are usually 9 to 12 digits)</MaxLength>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetItemStatus</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetMultipleItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindPopularItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BuyItNowAvailable" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						For Dutch auctions (not Chinese auctions) this indicates whether there
						is a Buy It Now option. (On some sites, the Buy It Now option remains
						available for Dutch auctions even after there are bids.)
						Applicable to the Germany site (site ID 77) only.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetItemStatus</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetMultipleItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConvertedBuyItNowPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The listing's Buy It Now Price (if any), converted into the currency
						of the site to which you sent this request. &lt;br&gt;
						&lt;br&gt;
						Price fields are returned as doubles, not necessarily in the traditional
						monetary format of the site's country.
						For example, a US Dollar value might be returned as
						3.880001 instead of 3.88.&lt;br&gt;
						&lt;br&gt;
						For Chinese auctions (Quantity=1, competitive bidding online auctions),
						Buy It Now lets a user purchase the item at a fixed price and
						end the auction immediately. On most sites, after a Chinese
						auction has bids, the listing is no longer eligible for Buy It Now.
						However, calls like FindItems still return the Buy It Now Price that
						the seller set for the listing. Use the Item.BidCount field to
						determine whether an auction with Buy It Now has bids or not
						(and therefore whether it is still eligible to be purchased with
						Buy It Now).&lt;br&gt;
						&lt;br&gt;
						Some eBay sites also support Buy It Now for Dutch auctions
						(multi-quantity, competitive bidding), where you can buy multiple
						items from the same listing at a fixed price, instead of bidding.
						On some sites, the Buy It Now option remains available for Dutch
						auctions even after there are bids. See Item.BuyItNowAvailable.&lt;br&gt;
						&lt;br&gt;
						For fixed-price (FixedPriceItem) and Store Inventory listings
						(StoresFixedPrice), see CurrentPrice or ConvertedCurrentPrice
						instead.&lt;br&gt;
						&lt;br&gt;
						Only returned if an item was listed with Buy It Now.&lt;br&gt;
						&lt;br&gt;
						For active items, refresh this value every 24 hours to
						pick up the current conversion rates (if this value has been converted).
					</xs:documentation>
					<xs:appinfo>
						<SeeLink>
							<Title>(GetSingleItem) Item.ListingType</Title>
							<URL>GetSingleItem.html#Response.Item.ListingType</URL>
						</SeeLink>
						<SeeLink>
							<Title>Item.BuyItNowAvailable</Title>
							<URL>#Response.Item.BuyItNowAvailable</URL>
							<!-- Intentionally starts with # -->
						</SeeLink>
						<SeeLink>
							<Title>Item.BuyItNowPrice</Title>
							<URL>#Response.Item.BuyItNowPrice</URL>
							<!-- Intentionally starts with # -->
						</SeeLink>
						<SeeLink>
							<Title>Item.ConvertedCurrentPrice</Title>
							<URL>#Response.Item.ConvertedCurrentPrice</URL>
							<!-- Intentionally starts with # -->
						</SeeLink>
						<SeeLink>
							<Title>(eBay Help) Buying with Buy It Now</Title>
							<URL>http://pages.ebay.com/help/buy/how-buy-bin.html</URL>
						</SeeLink>
						<SeeLink>
							<Title>(eBay DE Hilfe) Kaufen mit Sofort-Kaufen</Title>
							<URL>http://pages.ebay.de/help/buy/how-buy-bin.html</URL>
						</SeeLink>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetMultipleItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Time stamp (in &lt;a href="types/simpleTypes.html#dateTime"&gt;GMT&lt;/a&gt;) of when
						the listing is scheduled to end,
						or time stamp of the actual end time (if the item ended).
						In FindItemsAdvanced and FindItems, for StoresFixedPrice items which are "Good Till Canceled,"
						this value is 5 minutes later than the actual end time of the item.
						The discrepancy is intended to facilitate renewal every 30 days of such items' end times.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetItemStatus</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetMultipleItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindPopularItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="StartTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Time stamp (in &lt;a href="types/simpleTypes.html#dateTime"&gt;GMT&lt;/a&gt;) that
						eBay recorded as the moment that the listing was made available.
						The start time returned by a search call may vary
						from the value returned by GetSingleItem.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ViewItemURLForNaturalSearch" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The URL to view this listing on eBay.
						This URL is optimized to support natural search.
						That is, this URL is designed to make items on eBay easier to find via
						popular Internet search engines.
						For example, this URL specifies the item title, and it is
						optimized for natural search: "_W0QQ" is like "?" (question mark),
						"QQ" is like "&amp;" (ampersand),
						and "Z" is like "=" (equals sign).
						You shouldn't modify the query syntax in your application. For example,
						eBay won't recognize the URL if you change QQ to ?.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetMultipleItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindPopularItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListingType" type="ns:ListingTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The format of the listing, such as online auction, fixed price,
						or advertisement format.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
							<AllValuesExcept>Auction, Half</AllValuesExcept>
						</CallInfo>
						<CallInfo>
							<CallName>GetMultipleItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
							<AllValuesExcept>Auction, Half</AllValuesExcept>
						</CallInfo>
						<CallInfo>
							<CallName>FindPopularItems</CallName>
							<Returned>Always</Returned>
							<AllValuesExcept>Auction, Half</AllValuesExcept>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
							<AllValuesExcept>Auction, Half</AllValuesExcept>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Location" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Physical location of the item, as specified by the seller.
						(This gives a general indication of where the item will be
						shipped or delivered from.)
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetMultipleItems</CallName>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PaymentMethods" type="ns:BuyerPaymentMethodCodeType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Identifies the payment method (such as PayPal) the seller
						will accept when the buyer pays for the item. &lt;br&gt;
						&lt;br&gt;
						&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt;
						If the seller only accepts PayPal, the buyer can still pay
						with a credit card. PayPal supports major credit cards.&lt;/span&gt; &lt;br&gt;
						&lt;br&gt;
						Payment methods are not applicable to eBay Real Estate advertisement
						listings, or other Classified Ad format listings.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<AllValuesExcept>Escrow, PrePayDelivery, CODPrePayDelivery, PostalTransfer</AllValuesExcept>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<AllValuesExcept>Escrow, PrePayDelivery, CODPrePayDelivery, PostalTransfer</AllValuesExcept>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						URL for a picture used as the Gallery thumbnail, if any.
						The image uses one of the following graphics formats:
						JPEG, BMP, TIF, or GIF.
						Only returned if the seller chose to show a gallery image.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetMultipleItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindPopularItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PictureURL" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Contains the URL for an image associated with the item, if any.
						Only returned if the seller chose to include at least one picture
						in the listing. (This doesn't return URLs of pictures that the
						seller specified via HTML IMG tags in Description.)&lt;br&gt;
						&lt;br&gt;
						Items listed the main eBay site can have a maximum of 12 picture URLs
						hosted by eBay Picture Services or a maximum of 6 picture URLs hosted by
						a third party (such as the seller or a photo site).
						On the US eBay Motors site (for all vehicle listings), and on the
						eBay Canada Motors site, a listing can have up to 24 picture URLs.&lt;br&gt;
						&lt;br&gt;
						eBay uses the seller's first picture at the top of the listing's
						View Item page.
					</xs:documentation>
					<xs:appinfo>
						<MaxLength>150</MaxLength>
						<MaxOccurs>24</MaxOccurs>
						<CallInfo>
							<CallName>GetMultipleItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PostalCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Postal code indicating the physical location of the item,
						as specified by the seller. (This gives a general indication of where
						the item will be shipped or delivered from.)
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrimaryCategoryID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Numeric ID of the first (or only) category in which the item is listed.
						(Listings can appear in more than one category.)&lt;br&gt;
						&lt;br&gt;
						&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt;
						Currently, GetSingleItem does not return a listing's
						secondary category, if any.&lt;/span&gt;
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetMultipleItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindPopularItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrimaryCategoryName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Display name of the first (or only) category in which the item is
						listed. This is a fully qualified category breadcrumb
						(e.g., Computers &amp; Networking:Laptops, Notebooks).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetMultipleItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindPopularItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Quantity" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The number of items the seller is offering in the listing.
						(Subtract Item.QuantitySold from this value to calculate the number of
						items currently available for sale.)&lt;br&gt;
						&lt;br&gt;
						If an online auction (with competitive bidding) has a Quantity of 1,
						it's a &lt;i&gt;Chinese auction&lt;/i&gt;.
						If Quantity is greater than 1,it's a &lt;i&gt;Dutch auction&lt;/i&gt;.&lt;br&gt;
						&lt;br&gt;
						Basic fixed-price and Store Inventory listings can have a
						Quantity of 1 or more.&lt;br&gt;
						&lt;br&gt;
						The listing's current or Buy It Now price is the price of
						1 item in the listing.&lt;br&gt;
						&lt;br&gt;
						&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt;
						A seller can also offer multiple items for sale with a single
						price for all the items. For example, instead of listing 10 lightbulbs
						for US 2.00 each, they might list 10 lightbulbs for USD 20.00 (where
						you have to buy all 10). This is called a "lot".
						If the listing includes a lot (or multiple lots), Quantity does not
						specify the lot size; it only reflects how many lots are being sold.
						For example, if the listing includes 5 lots of 10 lightbulbs each,
						Quantity would be 5. (GetSingleItem does not return information about
						lot sizes.)&lt;/span&gt;
					</xs:documentation>
					<xs:appinfo>
						<SeeLink>
							<Title>Item.ListingType</Title>
							<URL>#Response.Item.ListingType</URL>
						</SeeLink>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Seller" type="ns:SimpleUserType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Container for information about this listing's seller.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: SellerInfo</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BidCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The number of bids that have been placed on the item.&lt;br&gt;
						&lt;br&gt;
						On most sites, once a Chinese auction has bids, the listing is no longer
						eligible for Buy It Now. (This is not necessarily true
						for Dutch auctions. See Item.BuyItNowAvailable for Dutch auctions.)
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetMultipleItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetItemStatus</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindPopularItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConvertedCurrentPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The listing's current price, converted to the currency
						of the site specified in the request.
						If the item is a multi-quantity listing, this is the price of one
						item.&lt;br&gt;
						&lt;br&gt;
						Price fields are returned
						as doubles, not necessarily in the usual monetary amount format of the
						site. For example, a US Dollar value might be returned as
						3.879938 instead of 3.88.&lt;br&gt;
						&lt;br&gt;
						For competitive-bidding listings (Chinese and Dutch auctions),
						this is the current minimum bid price (if the listing has no bids) or
						the current high bid (if the listing has bids).
						(Compare to BuyItNowPrice).&lt;br&gt;
						&lt;br&gt;
						For Basic Fixed-Price (FixedPriceItem), Store Inventory
						(StoresFixedPrice), and Ad format (AdType) listings, this is the
						current fixed price.&lt;br&gt;
						&lt;br&gt;
						For active items, refresh this value every 24 hours to
						pick up the current conversion rates (if this value has been converted).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItems</CallName>
							<CallName>GetItemStatus</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetMultipleItems</CallName>
							<Returned>Conditionally</Returned>
							<SeeLink>
								<Title>(GetSingleItem) Item.CurrentPrice</Title>
								<URL>GetSingleItem.html#Response.Item.CurrentPrice</URL>
							</SeeLink>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
							<SeeLink>
								<Title>(GetSingleItem) Item.CurrentPrice</Title>
								<URL>GetSingleItem.html#Response.Item.CurrentPrice</URL>
							</SeeLink>
						</CallInfo>
						<CallInfo>
							<CallName>GetItemStatus</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindPopularItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The current price of the item, in the currency of the site on which
						the item was listed. That is, CurrentPrice is in the original listing 
						currency. If the item is a multi-quantity listing,
						this is the price of one item.&lt;br&gt;
						&lt;br&gt;
						For competitive-bidding listings (Chinese and Dutch auctions),
						this is the current minimum bid price (if the listing has no bids) or
						the current high bid (if the listing has bids).
						(Compare to BuyItNowPrice).&lt;br&gt;
						&lt;br&gt;
						For Basic Fixed-Price (FixedPriceItem), Store Inventory
						(StoresFixedPrice), and Ad format (AdType) listings, this is the
						current fixed price.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
							<SeeLink>
								<Title>(GetSingleItem) Item.ConvertedCurrentPrice</Title>
								<URL>GetSingleItem.html#Response.Item.ConvertedCurrentPrice</URL>
							</SeeLink>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="HighBidder" type="ns:SimpleUserType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						For single-item (Quantity = 1) auction listings (Chinese type) that have
						ended and have a winning bidder, indicates the user who is the current
						high bidder.&lt;br&gt;
						&lt;br&gt;
						For single-item basic fixed price (FixedPriceItem) or Store Inventory
						(StoresFixedPrice) listings that have ended, indicates the user who
						purchased the item. &lt;br&gt;
						&lt;br&gt;
						Not returned for auctions that have received no bids; fixed price and
						Store Inventory listings that are still active; or any multi-item
						(Quantity &gt; 1) listings (Dutch, FixedPriceItem, StoresFixedPrice).
					</xs:documentation>
					<xs:appinfo>
						<SeeLink>
							<Title>Item.Quantity</Title>
							<URL>#Response.Item.Quantity</URL>
						</SeeLink>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetItemStatus</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListingStatus" type="ns:ListingStatusCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Specifies a listing's status in eBay's processing workflow.
						If an item's EndTime is in the past, but no details about the
						buyer or high bidder are shown (and the user is not anonymous),
						use this listing status information to determine whether eBay has
						finished processing the listing.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetItemStatus</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetMultipleItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindPopularItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuantitySold" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Number of items purchased so far from this listing.
						(Subtract this value from Item.Quantity to calculate the number of
						items currently available for sale.)
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReserveMet" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Indicates whether any bids on this item are greater than the seller's
						reserve price for the listing (if any).&lt;br&gt;
						&lt;br&gt;
						A reserve is the lowest price at which the seller is willing to sell
						the item. The reserve price is higher than the listing's opening bid
						(minimum bid) and lower than the Buy It Now price, if any.
						(The reserve price is only known to the seller.)
						Some sellers don't set a reserve at all. If a listing does have
						a reserve price, the highest bidder will only win
						the item if their bid is also above that price.&lt;br&gt;
						&lt;br&gt;
						Only returned for online auctions that have
						a reserve price. (Fixed price, Store Inventory, and classified ad
						listings don't have reserve prices.)
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetItemStatus</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShipToLocations" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						An international location or region to which the seller is willing
						to ship this item. &lt;br&gt;
						&lt;br&gt;
						&lt;b&gt;Applicable values&lt;/b&gt;:
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Americas&lt;/p&gt;
								&lt;p class="edef"&gt;(North, South, or Latin America)&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Asia&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Caribbean&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Europe&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; EuropeanUnion&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; LatinAmerica&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; MiddleEast&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; NorthAmerica&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Oceania&lt;/p&gt;
								&lt;p class="edef"&gt;(Pacific region other than Asia)&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; SouthAmerica&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; WillNotShip&lt;/p&gt;
								&lt;p class="edef"&gt;(No shipping, buyer must pick up the item)&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; Worldwide&lt;/p&gt;
								&lt;p class="edef"&gt;(Seller will ship worldwide)&lt;/p&gt;
							&lt;p class="ename"&gt;&amp;bull;&amp;nbsp;&amp;nbsp; 2-letter country identifier&lt;/p&gt;
								&lt;p class="edef"&gt;(See CountryCodeType for values)&lt;/p&gt;
					</xs:documentation>
					<xs:appinfo>
						<SeeLink>
							<Title>CountryCodeType</Title>
							<URL>types/CountryCodeType.html</URL>
						</SeeLink>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Site" type="ns:SiteCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The name of the eBay site on which the item was originally listed.
						For example, if the item is listed on the eBay US site,
						the value would be US. If it's listed on the eBay Germany site,
						the value would be Germany. &lt;br&gt;
						&lt;br&gt;
						The listing's original site can affect the values of converted
						(localized) prices (when your request specifies a site
						that is different from the listing's site).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimeLeft" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Time left before the listing ends.
						The duration is represented in the ISO 8601 duration format (PnYnMnDTnHnMnS).
						For ended listings, the time left is PT0S (zero seconds).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetItemStatus</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetMultipleItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindPopularItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Title" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Name of the item as it appears in the listing or in search and
						browse results.&lt;br&gt;
						&lt;br&gt;
						For US eBay Motors cars, trucks, and motorcycles, this value shows the
						vehicle Make and Model instead of the seller's own title.
						(For the seller's title, look for Subtitle in
						Item.ItemSpecifics.NameValueList.Name in
						GetSingleItem, and then use the corresponding value in
						Item.ItemSpecifics.NameValueList.Value.)
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetMultipleItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: none, Description, ItemSpecifics, ShippingCosts, Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindPopularItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingCostSummary" type="ns:ShippingCostSummaryType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Contains basic shipping-related costs for the item. If Item.Quantity
						is greater than 1, this is the shipping cost for one item.
						If the seller offers a choice of more than one shipping service
						(such as UPS Ground and USPS Media mail), this is the cost of the
						"first" shipping option (usually the lowest cost option).&lt;br&gt;
						&lt;br&gt;
						If a listing has shipping costs, use GetShippingCosts if you want to get
						more details about the services and costs that the seller is offering.
					</xs:documentation>
					<xs:appinfo>
						<SeeLink>
							<Title>GetShippingCosts</Title>
							<URL>GetShippingCosts.html</URL>
						</SeeLink>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: ShippingCosts</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItems</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: none, Details, SearchDetails, SellerInfo, ItemSpecifics, ExpansionItemCount, CategoryHistogram</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindPopularItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items, Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemSpecifics" type="ns:NameValueListArrayType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Category-specific fields that the seller added to describe
						the listing. The names of these fields are different for items
						in different categories, so they're returned in a generic
						name/value structure. The field names are usually very well known
						within the category.&lt;br&gt;
						&lt;br&gt;
						For example, a book's item specifics might include a field like
						Publication Year=2007 (where Publication Year is returned in Name,
						and 2007 is returned in Value), and a field like Format=Hardcover.
						But a car's item specifics would be different from a book's, with
						fields like Make=Toyota and Model=Prius.
						And a ticket's item specifics would be different from those of
						books and cars, with fields like EventType=Concerts and
						Venue=The Fillmore. &lt;br&gt;
						&lt;br&gt;
						Some of the most common uses for item specifics are the item condition
						and return policy. The return policy can include multiple
						name/value fields (to explain how soon the item must be returned, how soon the refund will be given, and so forth).&lt;br&gt;
						&lt;br&gt;
						Only contains data if the listing includes Item Specifics.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: ItemSpecifics</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: ItemSpecifics</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="HitCount" type="xs:long" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The number of times the listing's View Item page has been viewed (as
						determined by eBay). Only returned if the seller has chosen
						to include a hit counter in the listing, and if the seller has
						also chosen to make the listing's hit count publicly visible.
						This field is retrieved asynchronously. If you believe the item has a
						publicly visible hit count, but this field is not returned,
						retry the call.&lt;br&gt;
						&lt;br&gt;
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Subtitle" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Subtitle of the item. Only returned if the seller included a
						subtitle for the listing.&lt;br&gt;
						&lt;br&gt;
						For US eBay Motors passenger vehicle, motorcycle, and "other vehicle"
						categories or listings in CA eBay Motors passenger vehicle and
						motorcycle categories, see the ItemSpecifics node for the subtitle
						instead.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrimaryCategoryIDPath" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The fully qualified ID breadcrumb (path) of the first category.
						For example, if the primary category ID is 45678, and its parent
						category's ID is 123, the breadcrumb (path) would be 123:45678.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SecondaryCategoryID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						ID of the second category in which the item is listed.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SecondaryCategoryName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Name of the second category in which the item is listed.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SecondaryCategoryIDPath" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The fully qualified ID breadcrumb (path) of the second category.
						For example, if the secondary category ID is 45678, and its parent
						category's ID is 123, the breadcrumb (path) would be 123:45678.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Charity" type="ns:CharityType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Identifier for a Giving Works listing and the benefiting nonprofit charity organization.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: SearchDetails</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DigitalDeliveryRequirements" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						For a digitally delivered item, the requirements for using the item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: SearchDetails</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DigitalDeliveryMethod" type="ns:DigitalDeliveryMethodCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						For a digitally delivered item, the digital-download method.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: SearchDetails</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="GermanMotorsSearchable" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The item is featured in eBay search results on the mobile.de partner site. Applicable to eBay Germany.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: SearchDetails</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="GetItFast" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A Get It Fast listing.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: SearchDetails</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Gift" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						If true, a generic gift icon displays next the listing's title in search and browse pages.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: SearchDetails</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PictureExists" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Whether the item has a picture.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: SearchDetails</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="RecentListing" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Whether the item is no more than one day old.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: SearchDetails</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Storefront" type="ns:StorefrontType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Whether the item is a storefront listing.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: SellerInfo</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="DistanceFromBuyer" type="ns:DistanceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The distance of the item from the buyer.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: SearchDetails</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Country" type="ns:CountryCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Two-letter ISO 3166 country code. Used with the Location field to indicate
						the city and country where the item is located.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="WatchCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Watch count for the item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindPopularItems</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="HalfItemCondition" type="ns:HalfItemConditionCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Half condition codes like brand new etc
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerComments" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Seller notes while listing items.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReturnPolicy" type="ns:ReturnPolicyType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						If a seller specified return policy details, then this container has fields
						with those details.
						The fields that can be returned in this container vary by site. 
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="MinimumToBid" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Smallest amount the next bid on the item can be. Returns same value as 
						Item.StartPrice (if no bids have yet been placed) or CurrentPrice plus
						BidIncrement (if at least one bid has been placed). Only applicable to 
						Chinese and Dutch auction listings. Returns null for basic Fixed Price
						(FixedPriceItem),Store Inventory (StoresFixedPrice), and Ad type listings.
					</xs:documentation>
					<xs:appinfo>
						<MaxLength>4000</MaxLength>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductID" type="ns:ProductIDType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A prototype description of a well-known type of item, such as a popular book. 
						&lt;br&gt;
						&lt;br&gt;
						When returned for GetSingleItem, is always of type Reference, and serves as a global reference ID for an eBay catalog product.
						&lt;br&gt;
						&lt;br&gt;
						When used as input, retrieves product details for one specific product.
						Specify the ID as a string, and use the type attribute to
						indicate the nature of the ID you are specifying.
						&lt;br&gt;
						&lt;br&gt;
						The request requires either QueryKeywords or
						ProductID, but these fields cannot be used together.
					</xs:documentation>
					<xs:appinfo>
						<MaxLength>4000</MaxLength>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>     
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/SimpleUserType.xsd #####

-->
	<xs:complexType name="SimpleUserType">
		<xs:annotation>
			<xs:documentation>
				Type to contain the data for one eBay user. Depending on the context, the user
				might be the seller or the buyer in a transaction, or the bidder or winning bidder
				in a listing. An object of this type is returned by a number of calls, including
				the GetUser call.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UserID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The user's eBay user ID. A unique value.
						If a bidder's user information is made
						anonymous, the real ID value will be
						replaced with the value "Bidder X" where X is a number
						indicating the order of that user's first bid. For example,
						if the user was the third bidder, UserID = Bidder 3.
						&lt;br&gt;&lt;br&gt;
						Note that the anonymous bidder ID stays the same for a given
						auction, but is different for different auctions.
						For example, a bidder who is the third and then the seventh
						bidder in an auction will be listed for both bids as "Bidder
						3". However, if that same bidder is the first bidder on a
						different auction, the bidder will be listed for that
						auction as "Bidder 1", not "Bidder 3".
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: none, Details, FeedbackDetails, FeedbackHistory</Details>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: SellerInfo</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackPrivate" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the user has chosen to make their feedback score and
						feedback details private (hidden from other users). Note that the percentage
						of positive feedback can still be returned, even if other feedback details are
						private. If a bidder's user information is made
						anonymous, the value -99 is returned.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: none, Details, FeedbackDetails, FeedbackHistory</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackRatingStar" type="ns:FeedbackRatingStarCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Visual indicator of user's feedback score.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Always</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: none, Details, FeedbackDetails, FeedbackHistory</Details>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: SellerInfo</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackScore" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The aggregate feedback score of a user. A user's feedback score is the net
						positive feedback minus the net negative feedback left for the user. Feedback
						scores are a quantitative expression of the desirability of dealing with a
						user as a buyer or a seller in transactions. Each transaction can result in
						one feedback entry for a given user. (The buyer can leave feedback for the
						seller, and the seller can leave feedback for the buyer.) That one feedback
						can be positive, negative, or neutral.
						The aggregate feedback score of a user represents that user's overall
						feedback score (referred to as a
						"feedback rating" on the eBay site). If the user has chosen to make their
						feedback private, then FeedbackScore is not returned and FeedbackPrivate is
						returned with a value of true.&lt;br&gt;
						&lt;br&gt;
						If a bidder's user information is made
						anonymous, the value -99 is returned.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: none, Details, FeedbackDetails, FeedbackHistory</Details>
							<Returned>Always</Returned>
						</CallInfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserAnonymized" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Indicates whether eBay has made this user's information anonymous.
						This occurs when the listing prices (reserve, current, or Buy It Now)
						reach or exceed a certain amount (such as $200 USD at the time of this
						writing).
						&lt;br&gt;
						&lt;br&gt;
						If true, certain other fields about this user are not returned, or their
						values include no identifying characteristics. (The rules are explained
						in the description of each field.)
						If false, all user-specific fields contain the user's actual data.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Returned>Conditionally</Returned>
							<Context>HighBidder</Context>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
						<CallInfo>
							<CallName>GetItemStatus</CallName>
							<Returned>Conditionally</Returned>
							<Context>HighBidder</Context>
							<Details>IncludeSelector: Details</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="NewUser" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						If true, identifies a new user who has been a registered eBay user for 30 days
						or less. Always false after the user has been registered for more than 30
						days. Does not indicate an ID change.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: none, Details, FeedbackDetails, FeedbackHistory</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="RegistrationDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The date the specified user originally registered with eBay.
						If a bidder's user information is made
						anonymous, the value -99 is returned.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: none, Details, FeedbackDetails, FeedbackHistory</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="RegistrationSite" type="ns:SiteCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The eBay site with which the user is registered.
						If a bidder's user information is made
						anonymous, the value -99 is returned.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: none, Details, FeedbackDetails, FeedbackHistory</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Status" type="ns:UserStatusCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The registration-related status of the user.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: none, Details, FeedbackDetails, FeedbackHistory</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerBusinessType" type="ns:SellerBusinessCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Type of seller account.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: none, Details, FeedbackDetails, FeedbackHistory</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="StoreURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The URL of the seller's eBay Store page.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: Details</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="StoreName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The name of the seller's eBay Store.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: Details</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerItemsURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						URL for seller's other items.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: none, Details, FeedbackDetails, FeedbackHistory</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AboutMeURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A link to the user's AboutMe page.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: none, Details, FeedbackDetails, FeedbackHistory</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="MyWorldURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A link to the URL of the user's MyWorld page.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: Details</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="MyWorldSmallImage" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Location of a user's image on the MyWorld page (small version).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: Details</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="MyWorldLargeImage" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Location of a user's image on the MyWorld page (large version).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: Details</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReviewsAndGuidesURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The URL of reviews and guides.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: Details</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackDetailsURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The URL of feedback details.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserProfile</CallName>
							<Details>IncludeSelector: none, Details, FeedbackDetails, FeedbackHistory</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PositiveFeedbackPercent" type="xs:float" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The percentage value of a user's positive feedback. 
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetSingleItem</CallName>
							<Context>Seller</Context>
							<Details>IncludeSelector: Details</Details>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/SiteCodeList.xsd #####

-->
	<xs:simpleType name="SiteCodeType">
		<xs:annotation>
			<xs:documentation>
				eBay sites (by the country in which each resides) on
which a user is registered and on which items can be listed.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="US">
				<xs:annotation>
					<xs:documentation>
						USA, site ID 0, abbreviation US, currency USD.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Canada">
				<xs:annotation>
					<xs:documentation>
						Canada, site ID 2, abbreviation CA, currencies CAD and USD.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK">
				<xs:annotation>
					<xs:documentation>
						United Kingdom, site ID 3, abbreviation UK, currency GBP.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Australia">
				<xs:annotation>
					<xs:documentation>
						Australia, site ID 15, abbreviation AU, currency AUD.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Austria">
				<xs:annotation>
					<xs:documentation>
						Austria, site ID 16, abbreviation AT, currency EUR.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Belgium_French">
				<xs:annotation>
					<xs:documentation>
						Belgium (French), site ID 23, abbreviation BEFR, currency EUR.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="France">
				<xs:annotation>
					<xs:documentation>
						France, site ID 71, abbreviation FR, currency EUR.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Germany">
				<xs:annotation>
					<xs:documentation>
						Germany, site ID 77, abbreviation DE, currency EUR.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Italy">
				<xs:annotation>
					<xs:documentation>
						Italy, site ID 101, abbreviation IT, currency EUR.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Belgium_Dutch">
				<xs:annotation>
					<xs:documentation>
						Belgium (Dutch), site ID 123, abbreviation BENL, currency EUR.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Netherlands">
				<xs:annotation>
					<xs:documentation>
						Netherlands, site ID 146, abbreviation NL, currency EUR.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Spain">
				<xs:annotation>
					<xs:documentation>
						Spain, site ID 186, abbreviation ES, currency EUR.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Switzerland">
				<xs:annotation>
					<xs:documentation>
						Switzerland, site ID 193, abbreviation CH, currency CHF.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Taiwan">
				<xs:annotation>
					<xs:documentation>
						Taiwan, site ID 196, abbreviation TW, currency TWD.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBayMotors">
				<xs:annotation>
					<xs:documentation>
						eBay Motors, site ID 100, currency USD.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HongKong">
				<xs:annotation>
					<xs:documentation>
						Hong Kong, site ID 201, abbreviation HK, currency HKD.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Singapore">
				<xs:annotation>
					<xs:documentation>
						Singapore, site ID 216, abbreviation SG, currency SGD.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="India">
				<xs:annotation>
					<xs:documentation>
						India, site ID 203, abbreviation IN, currency INR.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="China">
				<xs:annotation>
					<xs:documentation>
						China, site ID 223, abbreviation CN, currency CNY.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Ireland">
				<xs:annotation>
					<xs:documentation>
						Ireland, site ID 205, abbreviation IE, currency EUR.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Malaysia">
				<xs:annotation>
					<xs:documentation>
						Malaysia, site ID 207, abbreviation MY, currency MYR.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Philippines">
				<xs:annotation>
					<xs:documentation>
						Philippines, site ID 211, abbreviation PH, currency PHP.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Poland">
				<xs:annotation>
					<xs:documentation>
						Poland, site ID 212, abbreviation PL, currency PLN.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Sweden">
				<xs:annotation>
					<xs:documentation>
						Sweden, site ID 218, abbreviation SE, currency SEK.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CanadaFrench">
				<xs:annotation>
					<xs:documentation>
						CanadaFrench, site ID 210, abbreviation CAFR, currencies CAD and USD.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/SortOrderCodeList.xsd #####

-->
	<xs:simpleType name="SortOrderCodeType">
		<xs:annotation>
			<xs:documentation>
				Indicates the order of sorting.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Ascending">
				<xs:annotation>
					<xs:documentation>
						Sorts results in ascending (low to high) order.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Descending">
				<xs:annotation>
					<xs:documentation>
						Sorts results in descending (high to low) order.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Placeholder value. See
						&lt;a href="types/simpleTypes.html#token"&gt;token&lt;/a&gt;.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/StoreSearchCodeList.xsd #####

-->
	<xs:simpleType name="StoreSearchCodeType">
		<xs:annotation>
			<xs:documentation>
				Identifies the StoreSearch codes (e.g., for FindItemsAdvanced requests).
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AllItemsInTheStore">
				<xs:annotation>
					<xs:documentation>
						(in) Within a single store for all items (specify a store in
						the appropriate input field).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AuctionItemsInTheStore">
				<xs:annotation>
					<xs:documentation>
						(in) Within a single store for auction items (specify a store in
						the appropriate input field).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyItNowItemsInTheStore">
				<xs:annotation>
					<xs:documentation>
						(in) Within a single store for basic fixed price items, Store Inventory format items,
						and auction items with Buy It Now (specify a store in the appropriate input field).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyItNowItemsInAllStores">
				<xs:annotation>
					<xs:documentation>
						(in) Across all stores for basic fixed price items, Store Inventory format items,
						and auction items with Buy It Now.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/StorefrontType.xsd #####

-->
	<xs:complexType name="StorefrontType">
		<xs:annotation>
			<xs:documentation>
				Contains information related to the item in the context of
				a seller's eBay Store. Applicable for auction format, Basic Fixed Price,
				and Store Inventory format items listed by eBay Stores sellers.
 			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="StoreURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The URL of the seller's eBay Store page. FindProducts only returned
						 a default URL at the time of this writing.  FindHalfProducts returns the URL 
						 of the seller's Half.com Shop page.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: SellerInfo</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="StoreName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The name of the seller's eBay Store. FindProducts returns an empty
						value for all items at the time of this writing.  FindHalfProducts returns the
						name of seller's Half.com Shop, which is the SellerID.
					</xs:documentation>
					<xs:appinfo>
						<MaxLength>200</MaxLength>
						<CallInfo>
							<CallName>FindItemsAdvanced</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: SellerInfo</Details>
						</CallInfo>
						<CallInfo>
							<CallName>FindHalfProducts</CallName>
							<Returned>Conditionally</Returned>
							<Details>IncludeSelector: Items</Details>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/TaxJurisdictionType.xsd #####

-->
	<xs:complexType name="TaxJurisdictionType">
		<xs:annotation>
			<xs:documentation>
				Tax-related details for a region or jurisdiction.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="JurisdictionID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Representative identifier for the jurisdiction. Typically an
						abbreviation (e.g. CA for California).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SalesTaxPercent" type="xs:float" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The tax percent to apply for a listing shipped to this
						jurisdiction. The value passed in is stored with a precision of
						3 digits after the decimal point (##.###).
						GetTaxTable: this tag has no value if the user's tax table has not been set.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingIncludedInTax" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Whether shipping costs are to be part of the base amount that is taxed.
						GetTaxTable: This tag is empty if the user did not previously provide information.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/TaxTableType.xsd #####

-->
	<xs:complexType name="TaxTableType">
		<xs:annotation>
			<xs:documentation>
				Sales tax details for zero or more jurisdictions (states,
				provinces, etc).
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TaxJurisdiction" type="ns:TaxJurisdictionType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Sales tax details for zero or more jurisdictions (states, provinces, etc).
						Information is only returned for the jurisdictions for which the user provided
						tax information. ShippingIncludedInTax and SalesTaxPercent are returned but
						are empty.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetShippingCosts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file ../Shopping/xsd/TradingRoleCodeList.xsd #####

-->
	<xs:simpleType name="TradingRoleCodeType">
		<xs:annotation>
			<xs:documentation>
				A means for identifying a person's role in doing business on eBay.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Buyer">
				<xs:annotation>
					<xs:documentation>
						(in/out) Acting as buyer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Seller">
				<xs:annotation>
					<xs:documentation>
						(in/out) Acting as seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/UserIDType.xsd #####

-->
	<xs:simpleType name="UserIDType">
		<xs:annotation>
			<xs:documentation>
				An eBay ID that uniquely identifies a user. For GetAllBidders,
				if the user chose to be anonymized, a generic ID is returned.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
<!--  

##### from file ../Shopping/xsd/UserStatusCodeList.xsd #####

-->
	<xs:simpleType name="UserStatusCodeType">
		<xs:annotation>
			<xs:documentation>
				These codes indicate the current state or status of a an eBay
				user account.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Unknown">
				<xs:annotation>
					<xs:documentation>
						(out) User properties have never been set; this value should
						seldom, if ever, be returned and typically represents a
						problem
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Suspended">
				<xs:annotation>
					<xs:documentation>
						(out) User has been suspended from selling and buying, such as
						for violations of eBay terms or agreement
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Confirmed">
				<xs:annotation>
					<xs:documentation>
						(out) User has completed online registration and has properly
						responded to confirmation email; most users should fall
						in this category
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Unconfirmed">
				<xs:annotation>
					<xs:documentation>
						(out) User has completed online registration, but has either
						not responded to confirmation email or has not yet been
						sent the confirmation email
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Ghost">
				<xs:annotation>
					<xs:documentation>
						(out) Registered users of AuctionWeb (pre-eBay) who never
						re-registered on eBay
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="InMaintenance">
				<xs:annotation>
					<xs:documentation>
						(out) Temporary user record state indicating the record is in
						the process of being changed by eBay; query user
						information again to get new status
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Deleted">
				<xs:annotation>
					<xs:documentation>
						(out) Records for the specified user have been deleted
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCardVerify">
				<xs:annotation>
					<xs:documentation>
						(out) User has completed registration and confirmation, but is
						pending a verification of credit card information
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AccountOnHold">
				<xs:annotation>
					<xs:documentation>
						(out) User's account is on hold, such as for non-payment of
						amounts due eBay; user cannot sell or buy items
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Merged">
				<xs:annotation>
					<xs:documentation>
						(out) User record has been merged with another account record
						for the same user
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RegistrationCodeMailOut">
				<xs:annotation>
					<xs:documentation>
						(out) User has completed online registration and has been sent
						the confirmation email, but has not yet responded to the
						confirmation email
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TermPending">
				<xs:annotation>
					<xs:documentation>
						(out) User has been scheduled for account closure (typically
						when a user has requested to have their account closed)
						A user in this state should not be considered an active
						user
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UnconfirmedHalfOptIn">
				<xs:annotation>
					<xs:documentation>
						(out) User has completed the registration for Half.com and opted
						to automatically also be registered with eBay, but the
						registration confirmation is still pending
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCardVerifyHalfOptIn">
				<xs:annotation>
					<xs:documentation>
						(out) User has completed the registration for Half.com and opted
						to automatically also be registered with eBay, but the
						verification of credit card information is still pending
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UnconfirmedExpress">
				<xs:annotation>
					<xs:documentation>
						(out) Half.com User; user has completed the registration for Half.com
						and opted to automatically also be registered with eBay, but the
						registration confirmation is still pending
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>


		</xs:schema>
	</wsdl:types>
	
	<wsdl:message name="FindHalfProductsResponse">
		<wsdl:part name="FindHalfProductsResponse" element="ns:FindHalfProductsResponse"/>
	</wsdl:message>
	<wsdl:message name="FindHalfProductsRequest">
		<wsdl:part name="FindHalfProductsRequest" element="ns:FindHalfProductsRequest"/>
	</wsdl:message>
	<wsdl:message name="FindItemsResponse">
		<wsdl:part name="FindItemsResponse" element="ns:FindItemsResponse"/>
	</wsdl:message>
	<wsdl:message name="FindItemsRequest">
		<wsdl:part name="FindItemsRequest" element="ns:FindItemsRequest"/>
	</wsdl:message>
	<wsdl:message name="FindItemsAdvancedResponse">
		<wsdl:part name="FindItemsAdvancedResponse" element="ns:FindItemsAdvancedResponse"/>
	</wsdl:message>
	<wsdl:message name="FindItemsAdvancedRequest">
		<wsdl:part name="FindItemsAdvancedRequest" element="ns:FindItemsAdvancedRequest"/>
	</wsdl:message>
	<wsdl:message name="FindPopularItemsResponse">
		<wsdl:part name="FindPopularItemsResponse" element="ns:FindPopularItemsResponse"/>
	</wsdl:message>
	<wsdl:message name="FindPopularItemsRequest">
		<wsdl:part name="FindPopularItemsRequest" element="ns:FindPopularItemsRequest"/>
	</wsdl:message>
	<wsdl:message name="FindPopularSearchesResponse">
		<wsdl:part name="FindPopularSearchesResponse" element="ns:FindPopularSearchesResponse"/>
	</wsdl:message>
	<wsdl:message name="FindPopularSearchesRequest">
		<wsdl:part name="FindPopularSearchesRequest" element="ns:FindPopularSearchesRequest"/>
	</wsdl:message>
	<wsdl:message name="FindProductsResponse">
		<wsdl:part name="FindProductsResponse" element="ns:FindProductsResponse"/>
	</wsdl:message>
	<wsdl:message name="FindProductsRequest">
		<wsdl:part name="FindProductsRequest" element="ns:FindProductsRequest"/>
	</wsdl:message>
	<wsdl:message name="FindReviewsAndGuidesResponse">
		<wsdl:part name="FindReviewsAndGuidesResponse" element="ns:FindReviewsAndGuidesResponse"/>
	</wsdl:message>
	<wsdl:message name="FindReviewsAndGuidesRequest">
		<wsdl:part name="FindReviewsAndGuidesRequest" element="ns:FindReviewsAndGuidesRequest"/>
	</wsdl:message>
	<wsdl:message name="GetCategoryInfoResponse">
		<wsdl:part name="GetCategoryInfoResponse" element="ns:GetCategoryInfoResponse"/>
	</wsdl:message>
	<wsdl:message name="GetCategoryInfoRequest">
		<wsdl:part name="GetCategoryInfoRequest" element="ns:GetCategoryInfoRequest"/>
	</wsdl:message>
	<wsdl:message name="GetItemStatusResponse">
		<wsdl:part name="GetItemStatusResponse" element="ns:GetItemStatusResponse"/>
	</wsdl:message>
	<wsdl:message name="GetItemStatusRequest">
		<wsdl:part name="GetItemStatusRequest" element="ns:GetItemStatusRequest"/>
	</wsdl:message>
	<wsdl:message name="GetMultipleItemsResponse">
		<wsdl:part name="GetMultipleItemsResponse" element="ns:GetMultipleItemsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetMultipleItemsRequest">
		<wsdl:part name="GetMultipleItemsRequest" element="ns:GetMultipleItemsRequest"/>
	</wsdl:message>
	<wsdl:message name="GetShippingCostsResponse">
		<wsdl:part name="GetShippingCostsResponse" element="ns:GetShippingCostsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetShippingCostsRequest">
		<wsdl:part name="GetShippingCostsRequest" element="ns:GetShippingCostsRequest"/>
	</wsdl:message>
	<wsdl:message name="GetSingleItemResponse">
		<wsdl:part name="GetSingleItemResponse" element="ns:GetSingleItemResponse"/>
	</wsdl:message>
	<wsdl:message name="GetSingleItemRequest">
		<wsdl:part name="GetSingleItemRequest" element="ns:GetSingleItemRequest"/>
	</wsdl:message>
	<wsdl:message name="GetUserProfileResponse">
		<wsdl:part name="GetUserProfileResponse" element="ns:GetUserProfileResponse"/>
	</wsdl:message>
	<wsdl:message name="GetUserProfileRequest">
		<wsdl:part name="GetUserProfileRequest" element="ns:GetUserProfileRequest"/>
	</wsdl:message>
	<wsdl:message name="GeteBayTimeResponse">
		<wsdl:part name="GeteBayTimeResponse" element="ns:GeteBayTimeResponse"/>
	</wsdl:message>
	<wsdl:message name="GeteBayTimeRequest">
		<wsdl:part name="GeteBayTimeRequest" element="ns:GeteBayTimeRequest"/>
	</wsdl:message>
	<wsdl:portType name="ShoppingInterface">
			
		<wsdl:operation name="FindHalfProducts">
			<wsdl:input message="ns:FindHalfProductsRequest"/>
			<wsdl:output message="ns:FindHalfProductsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="FindItems">
			<wsdl:input message="ns:FindItemsRequest"/>
			<wsdl:output message="ns:FindItemsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="FindItemsAdvanced">
			<wsdl:input message="ns:FindItemsAdvancedRequest"/>
			<wsdl:output message="ns:FindItemsAdvancedResponse"/>
		</wsdl:operation>
		<wsdl:operation name="FindPopularItems">
			<wsdl:input message="ns:FindPopularItemsRequest"/>
			<wsdl:output message="ns:FindPopularItemsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="FindPopularSearches">
			<wsdl:input message="ns:FindPopularSearchesRequest"/>
			<wsdl:output message="ns:FindPopularSearchesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="FindProducts">
			<wsdl:input message="ns:FindProductsRequest"/>
			<wsdl:output message="ns:FindProductsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="FindReviewsAndGuides">
			<wsdl:input message="ns:FindReviewsAndGuidesRequest"/>
			<wsdl:output message="ns:FindReviewsAndGuidesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetCategoryInfo">
			<wsdl:input message="ns:GetCategoryInfoRequest"/>
			<wsdl:output message="ns:GetCategoryInfoResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetItemStatus">
			<wsdl:input message="ns:GetItemStatusRequest"/>
			<wsdl:output message="ns:GetItemStatusResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetMultipleItems">
			<wsdl:input message="ns:GetMultipleItemsRequest"/>
			<wsdl:output message="ns:GetMultipleItemsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetShippingCosts">
			<wsdl:input message="ns:GetShippingCostsRequest"/>
			<wsdl:output message="ns:GetShippingCostsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetSingleItem">
			<wsdl:input message="ns:GetSingleItemRequest"/>
			<wsdl:output message="ns:GetSingleItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetUserProfile">
			<wsdl:input message="ns:GetUserProfileRequest"/>
			<wsdl:output message="ns:GetUserProfileResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GeteBayTime">
			<wsdl:input message="ns:GeteBayTimeRequest"/>
			<wsdl:output message="ns:GeteBayTimeResponse"/>
		</wsdl:operation>
	</wsdl:portType>
	
	<wsdl:binding name="ShoppingBinding" type="ns:ShoppingInterface">	
	<wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
			
		<wsdl:operation name="FindHalfProducts">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="FindItems">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="FindItemsAdvanced">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="FindPopularItems">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="FindPopularSearches">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="FindProducts">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="FindReviewsAndGuides">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetCategoryInfo">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetItemStatus">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetMultipleItems">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetShippingCosts">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetSingleItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetUserProfile">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GeteBayTime">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	
	<wsdl:service name="Shopping">
			<wsdl:documentation>
				<Version>551</Version>
			</wsdl:documentation>
		<wsdl:port binding="ns:ShoppingBinding" name="Shopping">
			<wsdlsoap:address location="http://open.api.ebay.com/shopping"/>
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>